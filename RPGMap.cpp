// ------------------------------------------------------------------
// RPGMap.cpp : Defines the entry point for the application.
// ------------------------------------------------------------------

// ------------------------------------------------------------------
// Generated by the CDX Application Wizard
// By: Michael Rich [istan@alltel.net]
//
// With valuable help from:
//   Ioannis Karagiorgos, for the debugging help
//   Bil Simser, for the good ideas and constructive criticism
// ------------------------------------------------------------------

#define WIN32_LEAN_AND_MEAN

#include <windows.h>
#define CDXINCLUDEALL     // this define includes all headers, otherwise include one by one
#include <cdx.h>
#include <time.h>
#include <fstream>
#include <shellapi.h>
#include "bass.h"
#include "NPC.h"
#include "Player.h"
#include "Message.h"
#include "Menu.h"
#include "BattleEngine.h"
#include "WaitTimer.h"
#include "SnowFlake.h"
#include "RainDrop.h"
#include "Gnat.h"
#include "Bat.h"
#include "FallingLeaf.h"
#include "Cloud.h"
#include "FireDrop.h"
#include "BlackRainDrop.h"
#include "MistSpot.h"
#include "FadeTile.h"

#include "resource.h"
 
using namespace std;

//
// If DEMO_VERSION == 1, the game ends after beorne kills you.
//
#define VERSION "2.2 FULL"
#define DEMO_VERSION 0

// ------------------------------------------------------------------
// Global Variables
// ------------------------------------------------------------------
//char        szAppName[]     = "Cryn - The Dark Reflection";
LPCTSTR szAppName = TEXT("Cryn - The Dark Reflection");
LPCTSTR szClassName = TEXT("CrynClass");

HINSTANCE   g_hInst;			        // instance handle
HWND        g_hWnd;				        // window handle
BOOL        g_IsAppActive;			    // is the app active

CNPC Beorne, Demon1, Demon2, Demon3;
CNPC King;
CNPC ForestMonster, TreeBoss;
CNPC Fountain;
CNPC Neacres;
CNPC Ayli;
CNPC BossDemon, HenchDemon, DragonSpawn;
CNPC TownFolk1, TownFolk2, TownFolk3, TownFolk4, TownFolk5, TownFolk7, DemonTownBoss;

CPlayer MyPlayer;
// This struct holds Items and Characters on the map for collisions with each other.
MyCharacterMapStruct MyNPCCharacterMapStruct;
MyCharacterMapStruct EmptyNPCCharacterMapStruct;

CBattleEngine MyBattleEngine;

void ShowMenu(CMenu *MyMenu);
void OperateMenu(CMenu *MyMenu);
void ShowDieMenu(CMenu *MyMenu);
void OperateDieMenu(CMenu *MyMenu);
void DisplayEndOfGame();

int Location = 0;
int Area = FOREST;
bool InCombat = false;
bool CombatOn = true;
char MapMusic[256];

// Frame rate counters
DWORD           LastTime        = 0;
DWORD           CurTime         = 0;
DWORD           FpsTime         = 0;
DWORD           DeltaTime       = 0;
DWORD           FramesRendered  = 0;
DWORD           Fps             = 0;

extern unsigned short RGB565(int r, int g, int b);

CWaitTimer MyTimer; // used to make proper game speed.

#define MAX_SNOWFLAKES 1
CSnowFlake Blizzard[MAX_SNOWFLAKES];

#define MAX_FIREDROPS 10
CFireDrop FireDrops[MAX_FIREDROPS];

#define MAX_RAINDROPS 50
CRainDrop Rain[MAX_RAINDROPS];
CBlackRainDrop BlackRain[MAX_RAINDROPS];

#define MAX_GNATS 3
CGnat Gnats[MAX_GNATS];

#define MAX_BATS 3
CBat Bats[MAX_BATS];

#define MAX_LEAVES 3
CFallingLeaf FallingLeaves[MAX_LEAVES];

#define MAX_MIST_SPOTS 10
CMistSpot MistSpots[MAX_MIST_SPOTS];

#define MAX_CLOUDS 10
CCloud *Clouds[MAX_CLOUDS];

#define MAX_DEMON_SOLDIERS 9
CNPC *DemonSoldiers[MAX_DEMON_SOLDIERS];

#define MAX_DEMON_STATUES 3
CNPC *DemonStatues[MAX_DEMON_STATUES];

#define MAX_BONE_BARRIERS 2
CNPC *BoneBarriers[MAX_BONE_BARRIERS];

#define MAX_BLOOD_CLOTS 4
CNPC *BloodClots[MAX_BLOOD_CLOTS];

CMistSpot *Possession = NULL;
CMistSpot *Eyes = NULL, *Brain = NULL, *Heart = NULL, *Spine = NULL;

#define MAX_FADETILES 5
CFadeTile MyTiles[MAX_FADETILES];

#define COMBAT_OFF 0

// ------------------------------------------------------------------
// CDX Objects
// ------------------------------------------------------------------
CDXScreen   * Screen    = 0;	    // The screen object, every program must have one

CDXTile     * ForestTiles     = 0;    // The background tiles
CDXTile     * ForestCampTiles     = 0;    // The background tiles
CDXMap		* ForestMap = 0;
CDXMap		* ForestMapTop = 0;
CDXMap		* ForestCampMap = 0;
CDXMap		* ForestCampMapTop = 0;

CDXTile     * DemonPitTiles  = 0;    // The background tiles
CDXTile     * BloodChamberTiles  = 0;    // The background tiles
CDXTile     * NetherTiles  = 0;    // The background tiles
CDXTile     * SwampCaveTiles  = 0;    // The background tiles
CDXTile     * TreeTiles  = 0;    // The background tiles
CDXMap      * SwampCaveMap = 0;
CDXMap		* SwampCaveMapTop = 0;
CDXMap      * TreeMap = 0;
CDXMap		* TreeMapTop = 0;
CDXMap      * TreeTrunkMap = 0;
CDXMap		* TreeTrunkMapTop = 0;
CDXMap      * DemonPitMap = 0;
CDXMap		* DemonPitMapTop = 0;
CDXMap      * BloodChamberMap = 0;
CDXMap		* BloodChamberMapTop = 0;
CDXMap      * DemonTownMap = 0;
CDXMap		* DemonTownMapTop = 0;
CDXMap      * NetherMap = 0;
CDXMap		* NetherMapTop = 0;
CDXMap      * DeepNetherMap = 0;
CDXMap		* DeepNetherMapTop = 0;

CDXInput	* Input = 0;

CDXSound	* Sound = 0;
CDXSoundBuffer * NewScreenSound = 0;
CDXSoundBuffer * Boom1Sound = 0, * Boom2Sound = 0;
CDXSoundBuffer * Wind1Sound = 0, * Wind2Sound = 0, * Wind3Sound = 0;
CDXSoundBuffer * Rain1Sound = 0, * Gnat1Sound = 0, *Gnat2Sound = 0;
CDXSoundBuffer *MenuOpenSound = 0;

// Prototypes
void cdx_DoFrame(bool bFlip = true);
void InitLevel(int MapX, int MapY, int Map2X, int Map2Y);
void StartMusic(char *s3mfilename);
void StopMusic();
void ClearArray();
void DrawSnow();
void DrawRain();
void DrawGnats();
void DrawBats();
void DrawFallingLeaf();
void DrawClouds();
void DrawThunder();
void CheckBossWins();
void SaveGame();
void CleanupMemory();
void DoCombatFrames();
void DoEngageCombat();
void DrawFireDrops();
void DrawBlackRain();
void DrawFogOfWar();

// ------------------------------------------------------------------
// cdx_Init - handles initialization of the CDX objects
// ------------------------------------------------------------------
BOOL cdx_Init()
{
	srand((unsigned)time(NULL));

	// Create the CDXSreen object
	Screen = new CDXScreen();
	if (Screen == NULL)
		CDXError(NULL, (char*)"Could not create CDXScreen object");

	// start app fullscreen
	if (Screen->CheckIfVideoModeExists(640, 480, 16) == TRUE)
	{
		//Screen->CreateFullScreen(g_hWnd, 640, 480, 16);
		Screen->CreateWindowed(g_hWnd, 640, 480);
	}
	else
	{
		Screen->CreateFullScreen(g_hWnd, 640, 480, 32);
		//Screen->CreateWindowed(g_hWnd, 640, 480);
	}

	/*	Screen->GetBack()->ChangeFont("Verdana", 8, 15, 400);
		Screen->GetBack()->SetFont();
		Screen->GetFront()->ChangeFont("Verdana", 8, 15, 400);
		Screen->GetFront()->SetFont();
	*/

	// Initialize digital sound - default device, 44100hz, stereo, 16 bits, no syncs used
	// check the correct BASS was loaded
	if (HIWORD(BASS_GetVersion()) != BASSVERSION)
	{
		MessageBox(0, (LPCTSTR)"An incorrect version of BASS.DLL was loaded", 0, MB_ICONERROR);
		return 0;
	}

	if (!BASS_Init(-1, 44100, 0, g_hWnd, NULL))
	{
		MessageBox(0, (LPCTSTR)"Error init bass.dll", 0, MB_ICONERROR);
		return 0;
	}

	// Initialize digital sound - default device, 44100hz, stereo, 16 bits, no syncs used
	BASS_Start();

	HMUSIC mod;
	if (mod = BASS_MusicLoad(FALSE, "music/diesong.s3m", 0, 0, BASS_MUSIC_RAMP | BASS_MUSIC_POSRESET | BASS_SAMPLE_FLOAT | BASS_MUSIC_FT2MOD | BASS_MUSIC_AUTOFREE | BASS_MUSIC_LOOP, 0))
	{
		//BASS_MusicSetAmplify(mod, 68);
		BASS_ChannelPlay(mod, false);
	}

	// Show intro screen.
	Screen->GetBack()->Fill(0);
	CDXLayer MyBitmap;
	MyBitmap.Create(Screen, (char*)"graphics/intro_screen.bmp");
	MyBitmap.Draw(0, 0, Screen->GetBack());

	// Fade in.
	Screen->FadeToSource(2000);

	Screen->GetBack()->GetDC();
	Screen->GetBack()->SetFont();
	CDXMenu menu; menu.TextXY(Screen->GetBack(), 150, 250, RGB(175, 0, 0), "LOADING");
	menu.TextXY(Screen->GetBack(), 575, 455, RGB(255, 0, 0), VERSION);
	Screen->GetBack()->ReleaseDC();
	Screen->Flip();

	//
	// Continue loading time consuming graphics and sounds.
	//
	Input = new CDXInput();
	Input->Create(g_hInst, g_hWnd);
	Input->SetActiveDevices(false, true, false);

	// Load the tiles
	ForestTiles = new CDXTile();
	if (ForestTiles->Create(Screen, (char*)"tiles/jungletiles.bmp", 40, 40, 0) == FALSE)
		CDXError(Screen, (char*)"could not load tiles from file tiles/jungle.bmp");
	// set the top left pixel in tiles bitmap as transparent color
	ForestTiles->SetColorKey(0);

	SwampCaveTiles = new CDXTile();
	if (SwampCaveTiles->Create(Screen, (char*)"tiles/cavetiles.bmp", 40, 40, 0) == FALSE)
		CDXError(Screen, (char*)"could not load tiles from file tiles/cavetiles.bmp");
	// set the top left pixel in tiles bitmap as transparent color
	SwampCaveTiles->SetColorKey(0);

	TreeTiles = new CDXTile();
	if (TreeTiles->Create(Screen, (char*)"tiles/treetiles.bmp", 40, 40, 0) == FALSE)
		CDXError(Screen, (char*)"could not load tiles from file tiles/treetiles.bmp");
	// set the top left pixel in tiles bitmap as transparent color
	TreeTiles->SetColorKey(0);

	ForestCampTiles = new CDXTile();
	if (ForestCampTiles->Create(Screen, (char*)"tiles/forestcamptiles.bmp", 40, 40, 0) == FALSE)
		CDXError(Screen, (char*)"could not load tiles from file tiles/forestcamptiles.bmp");
	// set the top left pixel in tiles bitmap as transparent color
	ForestCampTiles->SetColorKey(0);

	// Create and load the maps
	ForestMap = new CDXMap(ForestTiles, Screen);
	if (ForestMap->LoadAscii("maps/jungle.txt", 80, 42) == FALSE)
      CDXError( Screen , (char*)"Could not load ascii map: jungle.txt" );
	ForestMap->EnableScrollWrapping(FALSE);

	ForestMapTop = new CDXMap(ForestTiles, Screen);
	if( ForestMapTop->LoadAscii("maps/jungle_top.txt", 80, 42) == FALSE )
      CDXError( Screen , (char*)"Could not load ascii map: jungle_top.txt" );
	ForestMapTop->EnableScrollWrapping(FALSE);

	SwampCaveMap = new CDXMap(SwampCaveTiles, Screen);
	if( SwampCaveMap->LoadAscii("maps/swampcave.txt", 80, 40) == FALSE )
      CDXError( Screen , (char*)"Could not load ascii map: swampcave.txt" );
	SwampCaveMap->EnableScrollWrapping(FALSE);

	SwampCaveMapTop = new CDXMap(SwampCaveTiles, Screen);
	if( SwampCaveMapTop->LoadAscii("maps/swampcave_map2.txt", 80, 40) == FALSE )
      CDXError( Screen , (char*)"Could not load ascii map: swampcave_map2.txt" );
	SwampCaveMapTop->EnableScrollWrapping(FALSE);

	TreeMap = new CDXMap(TreeTiles, Screen);
	if( TreeMap->LoadAscii("maps/tree.txt", 80, 40) == FALSE )
      CDXError( Screen , (char*)"Could not load ascii map: tree.txt" );
	TreeMap->EnableScrollWrapping(FALSE);

	TreeMapTop = new CDXMap(TreeTiles, Screen);
	if( TreeMapTop->LoadAscii("maps/tree_map2.txt", 80, 40) == FALSE )
      CDXError( Screen , (char*)"Could not load ascii map: tree_map2.txt" );
	TreeMapTop->EnableScrollWrapping(FALSE);

	TreeTrunkMap = new CDXMap(TreeTiles, Screen);
	if( TreeTrunkMap->LoadAscii("maps/treetrunk.txt", 30, 15) == FALSE )
      CDXError( Screen , (char*)"Could not load ascii map: treetrunk.txt" );
	TreeTrunkMap->EnableScrollWrapping(FALSE);

	TreeTrunkMapTop = new CDXMap(TreeTiles, Screen);
	if( TreeTrunkMapTop->LoadAscii("maps/treetrunk_map2.txt", 30, 15) == FALSE )
      CDXError( Screen , (char*)"Could not load ascii map: treetrunk_map2.txt" );
	TreeTrunkMapTop->EnableScrollWrapping(FALSE);

	ForestCampMap = new CDXMap(ForestCampTiles, Screen);
	if( ForestCampMap->LoadAscii("maps/forestcamp.txt", 80, 42) == FALSE )
      CDXError( Screen , (char*)"Could not load ascii map: forestcamp.txt" );
	ForestCampMap->EnableScrollWrapping(FALSE);

	ForestCampMapTop = new CDXMap(ForestCampTiles, Screen);
	if( ForestCampMapTop->LoadAscii("maps/forestcamp_top.txt", 80, 42) == FALSE )
      CDXError( Screen , (char*)"Could not load ascii map: forestcamp_top.txt" );
	ForestCampMapTop->EnableScrollWrapping(FALSE);
	
	// Load the sounds
	Sound = new CDXSound;
	Sound->Create(g_hWnd);
	
	// Load the snow.
	for (int i=0; i<MAX_SNOWFLAKES; i++)
	{
		Blizzard[i].Load(Screen);
	}

	// Load the fire.
	for (int i=0; i<MAX_FIREDROPS; i++)
	{
		FireDrops[i].Load(Screen);
	}

	// Load the rain.
	for (int i=0; i<MAX_RAINDROPS; i++)
	{
		Rain[i].Load(Screen);
	}

	// Load the gnats.
	for (int i=0; i<MAX_GNATS; i++)
	{
		Gnats[i].Load(Screen);
	}

	// Load the bats.
	for (int i=0; i<MAX_BATS; i++)
	{
		Bats[i].Load(Screen, Sound);
	}

	// Load the leaves.
	for (int i=0; i<MAX_LEAVES; i++)
	{
		FallingLeaves[i].Load(Screen);
	}

	CDXTile *DeleteTile = new CDXTile();

	CDXTile* Tile1 = new CDXTile();
	if (Tile1->Create(Screen, (char*)"tiles/mistspot_leaves.bmp", 40, 40, 0) == FALSE)
		CDXError( Screen , (char*)"could not load tiles from file mistspot_leaves1.bmp" );

	for (int i = 0; i<MAX_MIST_SPOTS; i++)
	{
		MistSpots[i].LoadedTile = Tile1;
		MistSpots[i].Load(Screen, Input, Sound, ForestMap, ForestMapTop, MOVE_NONE, (char*)"tiles/mistspot.bmp", 40, 40);
		MistSpots[i].SetCharacterMap(&EmptyNPCCharacterMapStruct);
		MistSpots[i].Init();
	}

	SAFEDELETE(DeleteTile);

	for (int i = 0; i<MAX_CLOUDS; i++)
	{
		// These are instantiated after beorne kills you or FORESTCAMP area in InitLevel();
		Clouds[i] = NULL;
	}

	for (int i=0; i<MAX_DEMON_SOLDIERS; i++)
	{
		DemonSoldiers[i] = NULL;
	}

	for (int i=0; i<MAX_DEMON_STATUES; i++)
	{
		DemonStatues[i] = NULL;
	}

	for (int i=0; i<MAX_BONE_BARRIERS; i++)
	{
		BoneBarriers[i] = NULL;
	}

	for (int i=0; i<MAX_BLOOD_CLOTS; i++)
	{
		BloodClots[i] = NULL;
	}
	
	NewScreenSound = new CDXSoundBuffer;
	NewScreenSound->Load(Sound, (char*)"music/newscreen.wav", 4);
	Boom1Sound = new CDXSoundBuffer;
	Boom1Sound->Load(Sound, (char*)"music/boom1.wav", 4);
	Boom2Sound = new CDXSoundBuffer;
	Boom2Sound->Load(Sound, (char*)"music/boom2.wav", 4);
	Wind1Sound = new CDXSoundBuffer;
	Wind1Sound->Load(Sound, (char*)"music/wind1.wav", 4);
	Wind2Sound = new CDXSoundBuffer;
	Wind2Sound->Load(Sound, (char*)"music/wind2.wav", 4);
	Wind3Sound = new CDXSoundBuffer;
	Wind3Sound->Load(Sound, (char*)"music/wind3.wav", 4);
	Rain1Sound = new CDXSoundBuffer;
	Rain1Sound->Load(Sound, (char*)"music/rain1.wav", 4);
	Gnat1Sound = new CDXSoundBuffer;
	Gnat1Sound->Load(Sound, (char*)"music/gnat1.wav", 4);
	Gnat2Sound = new CDXSoundBuffer;
	Gnat2Sound->Load(Sound, (char*)"music/gnat2.wav", 4);
	MenuOpenSound = new CDXSoundBuffer;
	MenuOpenSound->Load(Sound, (char*)"music/menu_open.wav", 4);

	// Clear out character map array.
	ClearArray();
	
	Fountain.Load(Screen, Input, Sound, ForestMap, ForestMapTop, MOVE_RIGHT, (char*)"tiles/fountain.bmp", 40, 40);
	Fountain.SetCharacterMap(&MyNPCCharacterMapStruct);
	Fountain.SetPosTile(9, 36);
	Fountain.SetArea(9, 36, 9, 36);
	Fountain.SetText((char*)"You use your mystical powers to restore your health.");

	Demon1.Load(Screen, Input, Sound, ForestMap, ForestMapTop, MOVE_RIGHT, (char*)"tiles/demon.bmp", 40, 40);
	Demon1.SetCharacterMap(&MyNPCCharacterMapStruct);
	Demon1.SetPosTile(23, 5);
	Demon1.SetArea(21, 3, 26, 7);
	Demon1.Sprite->SetAlphaValue(200);
	Demon1.SetText((char*)"Demoniz:\nThe anccccienttt is arriving .. bow to your newwww leader slavvvveee ..", 1);
	Demon1.SetText((char*)"Cryn:\nNever!", 2);
	Demon2.Load(Screen, Input, Sound, ForestMap, ForestMapTop, MOVE_RIGHT, (char*)"tiles/demon.bmp", 40, 40);
	Demon2.SetCharacterMap(&MyNPCCharacterMapStruct);
	Demon2.SetPosTile(25, 4);
	Demon2.SetArea(21, 3, 26, 7);
	Demon2.Sprite->SetAlphaValue(200);
	Demon2.SetText((char*)"Demoniz:\nHe will beeeee hereeee sooooonnn slave ..", 1);
	Demon3.Load(Screen, Input, Sound, ForestMap, ForestMapTop, MOVE_RIGHT, (char*)"tiles/demon.bmp", 40, 40);
	Demon3.SetCharacterMap(&MyNPCCharacterMapStruct);
	Demon3.SetPosTile(25, 6);
	Demon3.SetArea(21, 3, 26, 7);
	Demon3.Sprite->SetAlphaValue(200);
	Demon3.SetText((char*)"Demoniz:\nWe shaaall all grovel before hissss greatnesssss ..", 1);
	Demon1.Die();
	Demon2.Die();
	Demon3.Die();

	Beorne.Load(Screen, Input, Sound, ForestMap, ForestMapTop, MOVE_RIGHT, (char*)"tiles/beorne.bmp", 40, 40);
	Beorne.SetCharacterMap(&MyNPCCharacterMapStruct);
	Beorne.SetPosTile(10, 6);
	Beorne.Follow(&MyPlayer);

	King.Load(Screen, Input, Sound, ForestMap, ForestMapTop, MOVE_NONE, (char*)"graphics/king.bmp", 40, 40);
	King.SetCharacterMap(&MyNPCCharacterMapStruct);
	King.SetPosTile(5, 6);

	TownFolk1.Load(Screen, Input, Sound, ForestMap, ForestMapTop, MOVE_RIGHT, (char*)"tiles/cityguard2.bmp", 40, 40);
	TownFolk1.SetCharacterMap(&MyNPCCharacterMapStruct);
	TownFolk1.SetPosTile(8, 6);
	TownFolk1.SetArea(5, 1, 30, 20);
	TownFolk1.SetText((char*)"City Guard:\nGood to see you again, Cryn.", 1);

	TownFolk2.Load(Screen, Input, Sound, ForestMap, ForestMapTop, MOVE_RIGHT, (char*)"tiles/cityguard2.bmp", 40, 40);
	TownFolk2.SetCharacterMap(&MyNPCCharacterMapStruct);
	TownFolk2.SetPosTile(20, 1);
	TownFolk2.SetArea(5, 1, 30, 20);
	TownFolk2.SetText((char*)"City Guard:\nLooks like it's going to be another rainy day.", 1);

	TownFolk3.Load(Screen, Input, Sound, ForestMap, ForestMapTop, MOVE_RIGHT, (char*)"tiles/cityguard.bmp", 40, 40);
	TownFolk3.SetCharacterMap(&MyNPCCharacterMapStruct);
	TownFolk3.SetPosTile(31, 16);
	TownFolk3.SetArea(5, 1, 30, 20);
	TownFolk3.SetText((char*)"City Guard:\nGood day Cryn, let me know when you want to explore the forest again.", 1);

	TownFolk4.Load(Screen, Input, Sound, ForestMap, ForestMapTop, MOVE_RIGHT, (char*)"tiles/cityguard.bmp", 40, 40);
	TownFolk4.SetCharacterMap(&MyNPCCharacterMapStruct);
	TownFolk4.SetPosTile(31, 3);
	TownFolk4.SetArea(5, 1, 30, 20);
	TownFolk4.SetText((char*)"City Guard:\nBe well, Cryn.", 1);

	TownFolk7.Load(Screen, Input, Sound, ForestMap, ForestMapTop, MOVE_RIGHT, (char*)"tiles/cityguard.bmp", 40, 40);
	TownFolk7.SetCharacterMap(&MyNPCCharacterMapStruct);
	TownFolk7.SetPosTile(41, 3);
	TownFolk7.SetArea(30, 1, 45, 10);
	TownFolk7.SetText((char*)"City Guard:\nOh hello, Cryn! Did you know this game was updated in 2024?", 1);
	TownFolk7.SetText((char*)"Cryn:\nWow, has it been that long?", 2);
	TownFolk7.SetText((char*)"Beorne:\nOh for goodness sake! Who really cares?", 3);
	TownFolk7.SetText((char*)"City Guard:\nSimply amazing.", 4);

	ForestMonster.Load(Screen, Input, Sound, ForestMap, ForestMapTop, MOVE_RIGHT, (char*)"tiles/forestmonster.bmp", 40, 40);
	ForestMonster.SetCharacterMap(&MyNPCCharacterMapStruct);
	ForestMonster.SetPosTile(54, 26);
	ForestMonster.SetArea(51, 27, 57, 29);
	ForestMonster.SetText((char*)"Cryn:\nJust a story parents tell their kids huh?", 1);
	ForestMonster.SetText((char*)"Beorne:\nUh .. well maybe he's not as bad as the story tells.", 2);
	ForestMonster.SetText((char*)"Lineer:\naaarrrhhh.. dinner time my children!", 3);
	ForestMonster.SetText((char*)"Beorne:\nI was afraid he was gonna say that.", 4);

	TreeBoss.Load(Screen, Input, Sound, TreeTrunkMap, TreeTrunkMapTop, MOVE_RIGHT, (char*)"tiles/tree_boss.bmp", 40, 40);
	TreeBoss.SetCharacterMap(&MyNPCCharacterMapStruct);
	TreeBoss.SetPosTile(13, 0);
	TreeBoss.SetArea(13, 0, 13, 0);
	TreeBoss.SetText((char*)"King Tree Ent:\nI am the ancient guardian of the dark artifact. No one must be enslaved by its power again. Leave at once!", 1);
	TreeBoss.SetText((char*)"Beorne:\nYou lie! I have come to claim the artifact, now out of my way!", 2);
	TreeBoss.SetText((char*)"Cryn:\nUh, Beorne? What's going on here?", 3);
	TreeBoss.SetText((char*)"King Tree Ent:\nYou fools. I have sworn to be the guardian and have not failed in a thousand years. If defeat is what you want, then you shall have it.", 4);
	TreeBoss.SetText((char*)"Cryn:\nHey, wait a minute! I don't want ..", 5);
	TreeBoss.Die();

	MyPlayer.Load(Screen, Input, Sound, ForestMap, ForestMapTop, MOVE_NONE, (char*)"tiles/hero.bmp", 40, 40);
	MyPlayer.SetCharacterMap(&MyNPCCharacterMapStruct);
	MyPlayer.SetPosTile(37, 8);
	ForestMap->MoveTo(30*40, 0);
	ForestMapTop->MoveTo(30*40, 0);
	MyPlayer.Init(Screen, Input, Sound);
	MyPlayer.Area = FOREST;
	
	int iShade = 100;
	for (int i=0; i<MAX_FADETILES; i++)
	{
		MyTiles[i].SetScreen(Screen);
		MyTiles[i].SetShade(iShade);
		iShade -= 10;
	}

	//
	// Flash "space to start" and wait for user to hit it.
	//
	int c = 255, cup = false;
	while (Input->GetLastKeyChar() != 32)
	{
		if (cup)
		{
			if (c+2 < 255)
				c+=2;
			else
				cup = false;
		}
		else
		{
			if (c-2 > 0)
				c-=2;
			else
				cup = true;
		}

		MyBitmap.Draw(0, 0, Screen->GetBack());
		Screen->GetBack()->GetDC();
		Screen->GetBack()->SetFont();
		CDXMenu menu;
		menu.TextXY(Screen->GetBack(), 150, 250, RGB(c,0,0), "Space Bar to Start");
		menu.TextXY(Screen->GetBack(), 575, 455, RGB(255, 0, 0), VERSION);
		Screen->GetBack()->ReleaseDC();
		Screen->Flip();
		Input->Update();
		Input->UpdateLastKey(true);
	}

	// Fade out.
	Screen->GetBack()->Fill(0);
	Screen->FadeToBlack(600);

	CMenu MyMenu;
	MyMenu.Load(Screen, Input, Sound, (char*)"Cryn - The Dark Reflection       ");
	MyMenu.AddItem((char*)"[ CONTINUE ]");
	MyMenu.AddItem((char*)"[ START NEW ]");
	MyMenu.AddItem((char*)"[ QUIT ]");
	MyMenu.AddItem((char*)"Instructions:", false);
	MyMenu.AddItem((char*)"Arrow Keys = Move, Space = Talk", false);
	MyMenu.AddItem((char*)"F10 = Menu, Stats, Save, Quit", false);

	int r = -1;
	while (r != 0 && r != 1 && r != 2)
	{
		r = MyMenu.Popup();
	
		if (r == 2)
			PostMessage(g_hWnd, WM_CLOSE, 0, 0);
		else if (r == 1)
			_unlink("myplayer.dat");
	}

	StopMusic();
	
	if (r != 2)
	{
		// Load any previously saved game.
		if (MyPlayer.LoadGame())
		{
			Area = MyPlayer.Area;
			Location = MyPlayer.StoryLocation;
			//		InitLevel(MyPlayer.MapX, MyPlayer.MapY, MyPlayer.Map2X, MyPlayer.Map2Y);
			//		MyNPCCharacterMapStruct.CharacterMap[MyPlayer.GetTileX()][MyPlayer.GetTileY()] = 1;
			Beorne.SetPosTile(MyPlayer.BeorneTileX, MyPlayer.BeorneTileY);
			InitLevel(MyPlayer.MapX, MyPlayer.MapY, MyPlayer.Map2X, MyPlayer.Map2Y);
		}
		else
		{
			King.SetPosTile(5, 6);
			StartMusic((char*)"music/forestmu.s3m");
		}
		
		// Fade out.
		Screen->GetBack()->Fill(0);
		Screen->FadeToBlack(600);
		
		// Begin drawing screen.
		cdx_DoFrame(false);
		
		Screen->FadeToSource(1500);
		Screen->Flip();
	}
	
	return TRUE;
}



// ------------------------------------------------------------------
// cdx_DeInit - handles cleanup of CDX objects
// ------------------------------------------------------------------
void cdx_DeInit( void )
{
	BASS_Stop();	/* Stop digital output */
	BASS_Free();	/* Close digital sound system */

	for (int i=0; i<MAX_CLOUDS; i++)
	{
		if (Clouds[i] != NULL)
		{
			//delete(Clouds[i]);
			//Clouds[i] = NULL;
			SAFEDELETE(Clouds[i]);
			Clouds[i] = NULL;
		}
	}

	for (int i=0; i<MAX_DEMON_SOLDIERS; i++)
	{
		SAFEDELETE(DemonSoldiers[i]);
	}

	for (int i=0; i<MAX_DEMON_STATUES; i++)
	{
		SAFEDELETE(DemonStatues[i]);
	}

	for (int i=0; i<MAX_BONE_BARRIERS; i++)
	{
		SAFEDELETE(BoneBarriers[i]);
	}

	for (int i=0; i<MAX_BLOOD_CLOTS; i++)
	{
		SAFEDELETE(BloodClots[i]);
	}

	if (Possession != NULL)
	{
		SAFEDELETE(Possession);
		Possession = NULL;
	}

	SAFEDELETE( NewScreenSound );
	SAFEDELETE( Wind1Sound );
	SAFEDELETE( Wind2Sound );
	SAFEDELETE( Wind3Sound );
	SAFEDELETE( Boom1Sound );
	SAFEDELETE( Boom2Sound );
	SAFEDELETE( Rain1Sound );
	SAFEDELETE( Gnat1Sound );
	SAFEDELETE( Gnat2Sound );
	SAFEDELETE( MenuOpenSound );
	//SAFEDELETE( Sound );
	SAFEDELETE( ForestMap );
	SAFEDELETE( ForestMapTop );
	SAFEDELETE( SwampCaveMap );
	SAFEDELETE( SwampCaveMapTop );
	SAFEDELETE( TreeMap );
	SAFEDELETE( TreeMapTop );
	SAFEDELETE( TreeTrunkMap );
	SAFEDELETE( TreeTrunkMapTop );
	SAFEDELETE( ForestCampMap );
	SAFEDELETE( ForestCampMapTop );
	SAFEDELETE( ForestTiles );
	SAFEDELETE( ForestCampTiles );
	SAFEDELETE( SwampCaveTiles );
	SAFEDELETE( TreeTiles );
	SAFEDELETE( DemonPitMap);
	SAFEDELETE( DemonPitMapTop);
	SAFEDELETE( DemonPitTiles);
	SAFEDELETE( BloodChamberMap);
	SAFEDELETE( BloodChamberMapTop);
	SAFEDELETE( DemonTownMap);
	SAFEDELETE( DemonTownMapTop);
	SAFEDELETE( BloodChamberTiles);
	SAFEDELETE( NetherMap);
	SAFEDELETE( NetherMapTop);
	SAFEDELETE( NetherTiles);
	SAFEDELETE( DeepNetherMap);
	SAFEDELETE( DeepNetherMapTop);

	SAFEDELETE( Input );
	//SAFEDELETE( Screen );
}

void Talk()
{
	// Checks if player tries to talk.
	if (InCombat)
		return;

	if (Input->GetLastKey() == 57)
	{
		// Try to talk.
		if (Location < 5)
		{
			TownFolk1.Talk(MyPlayer.GetTileX(), MyPlayer.GetTileY());
			TownFolk2.Talk(MyPlayer.GetTileX(), MyPlayer.GetTileY());
			TownFolk3.Talk(MyPlayer.GetTileX(), MyPlayer.GetTileY());
			TownFolk4.Talk(MyPlayer.GetTileX(), MyPlayer.GetTileY());
			TownFolk7.Talk(MyPlayer.GetTileX(), MyPlayer.GetTileY());
		}

		if (Location < 5 && (abs(King.GetTileX() - MyPlayer.GetTileX()) == 1 &&
			King.GetTileY() == MyPlayer.GetTileY()) ||
			(abs(King.GetTileY() - MyPlayer.GetTileY()) == 1 &&
			King.GetTileX() == MyPlayer.GetTileX()))
		{
			if (Location == 0)
			{
				// Must have brother first.
				King.SetText((char*)"King:\nWhere is your brother Cryn?", 1);
				King.SetText((char*)"", 2);
				King.Speak();
			}
			else if (Location == 1)
			{
				King.SetText((char*)"King:\nMy sons I am not well at all, and it is clear one of you will be an heir to my throne. Cryn, so wise and of a kind heart. Beorne, so strong and\nknowing. You two must be strong during my final days.", 1);
				King.SetText((char*)"Cryn:\nBut dad, what will we do when you're gone?", 2);
				King.SetText((char*)"Beorne:\nOh spare me.", 3);
				King.SetText((char*)"King:\nBoys, listen to me. My decision on the heir has already been made. You\nmust take care of each other while I gather my final moments ..", 4);
				King.Speak();
				Location = 2;
				Beorne.SetText((char*)"Beorne:\nHey Cryn, I have an idea. Want to go hunting?", 1);
				Beorne.SetText((char*)"Cryn:\nOur dad is dying, and you're thinking about killing things?", 2);
				Beorne.SetText((char*)"Beorne:\nUhg Cryn, you're so naive. I know of this place .. in an ancient tree, which is supposed to house a special leaf capable of healing anything.", 3);
				Beorne.SetText((char*)"Beorne:\nThe path is riddled with monsters, and evil .. hm, you know what, never mind Cryn. You're not strong enough for this kind of thing.", 4);
				Beorne.SetText((char*)"Cryn:\nI AM strong! And if this will help father, then I'm in!", 5);
				Beorne.SetText((char*)"Beorne:\nOk then. I believe the tree is just east of the forest. If we can make it there quick enough, we should be able to help father.", 6);
			}
			else
			{
				King.SetText((char*)"King:\nI'm very weak Cryn.. let me rest. The least I can do is heal you.", 1);
				King.SetText((char*)"", 2);
				King.SetText((char*)"", 3);
				King.SetText((char*)"", 4);
				King.SetText((char*)"", 5);
				King.SetText((char*)"", 6);
				King.Speak();
				MyPlayer.HP = MyPlayer.MaxHP;
				MyPlayer.MP = MyPlayer.MaxMP;
			}
		}
		if (Location < 5 && ForestMonster.Talk(MyPlayer.GetTileX(), MyPlayer.GetTileY())/*(abs(ForestMonster.GetTileX() - MyPlayer.GetTileX()) == 1 &&
			ForestMonster.GetTileY() == MyPlayer.GetTileY()) ||
			(abs(ForestMonster.GetTileY() - MyPlayer.GetTileY()) == 1 &&
			ForestMonster.GetTileX() == MyPlayer.GetTileX())*/)
		{
			//ForestMonster.Speak();
			MyPlayer.Direction = MyPlayer.OppositeDirection(MyPlayer.Direction);
			InCombat = true;
			// Pick battle screen.
			char BattleBmp[1000];
			strcpy(BattleBmp, (char*)"graphics/forest.bmp");
			MyBattleEngine.Initialize(Screen, Input, Sound, BattleBmp, (char*)"graphics/frame.bmp", MyPlayer.Level);
			MyBattleEngine.AddPlayer((char*)"Cryn", (char*)"tiles/hero.bmp", MyPlayer.Level, MyPlayer.MaxHP, MyPlayer.HP, MyPlayer.MaxMP, MyPlayer.MP, 0, (char*)"Staff", DAGGER, (char*)"Plate Mail", ARMOR_20);
			MyBattleEngine.bCrystalClearOn = MyPlayer.bCrystalClearOn;
			MyBattleEngine.bBonusAttackOn = MyPlayer.bBonusAttackOn;
			MyBattleEngine.AddMonster((char*)"Lineer", (char*)"graphics/forestmonster.bmp", 3, 55, 8, 0, (char*)"Razors", DAGGER, (char*)"Hide", ARMOR_45, 20, 100, 150, 65, 65);
			MyBattleEngine.AddMonster((char*)"Lineer Mini", (char*)"graphics/forestmonstermini.bmp", 2, 18, 2, 0, (char*)"Razors", BITE, (char*)"Hide", ARMOR_10, 0);
			MyBattleEngine.AddMonster((char*)"Lineer Mini", (char*)"graphics/forestmonstermini.bmp", 2, 18, 2, 0, (char*)"Razors", BITE, (char*)"Hide", ARMOR_10, 0);
			MyBattleEngine.bBoss = true;
			StopMusic();
			StartMusic((char*)"music/BATTLEMU.S3M");
			strcpy(MapMusic, (char*)"music/FORESTMU.S3M");
//			MyBattleEngine.AddMonster((char*)"Lineer Mini", (char*)"graphics/forestmonstermini.bmp", 2, 25, 2, 0, (char*)"Razors", BITE, (char*)"Hide", ARMOR_10, 5);
		}
		if (Fountain.isAlive() && Fountain.Talk(MyPlayer.GetTileX(), MyPlayer.GetTileY())/*(abs(Fountain.GetTileX() - MyPlayer.GetTileX()) == 1 &&
			Fountain.GetTileY() == MyPlayer.GetTileY()) ||
			(abs(Fountain.GetTileY() - MyPlayer.GetTileY()) == 1 &&
			Fountain.GetTileX() == MyPlayer.GetTileX())*/)
		{
			//Fountain.Speak();
			MyPlayer.HP = MyPlayer.MaxHP;
			MyPlayer.MP = MyPlayer.MaxMP;
		}
		if (Location < 30 && TreeBoss.Talk(MyPlayer.GetTileX(), MyPlayer.GetTileY())/*((abs(TreeBoss.GetTileX() - MyPlayer.GetTileX()) == 1 &&
			TreeBoss.GetTileY() == MyPlayer.GetTileY()) ||
			(abs(TreeBoss.GetTileY() - MyPlayer.GetTileY()) == 1 &&
			TreeBoss.GetTileX() == MyPlayer.GetTileX()))*/)
		{
			//TreeBoss.Speak();
			MyPlayer.Direction = MyPlayer.OppositeDirection(MyPlayer.Direction);
			InCombat = true;
			// Pick battle screen.
			char BattleBmp[1000];
			strcpy(BattleBmp, (char*)"graphics/bark.bmp");
			MyBattleEngine.Initialize(Screen, Input, Sound, BattleBmp, (char*)"graphics/frame.bmp", MyPlayer.Level);
			MyBattleEngine.AddPlayer((char*)"Cryn", (char*)"tiles/hero.bmp", MyPlayer.Level, MyPlayer.MaxHP, MyPlayer.HP, MyPlayer.MaxMP, MyPlayer.MP, 0, (char*)"Staff", DAGGER, (char*)"Plate Mail", ARMOR_20);
			MyBattleEngine.bCrystalClearOn = MyPlayer.bCrystalClearOn;
			MyBattleEngine.bBonusAttackOn = MyPlayer.bBonusAttackOn;
			MyBattleEngine.AddMonster((char*)"King Tree Ent", (char*)"graphics/kingtreeent.bmp", 6, 155, 30, 0, (char*)"Razors", DAGGER, (char*)"Bark", ARMOR_45, 20, 650, 400, 60, 60);
			MyBattleEngine.AddMonster((char*)"Guardian Ent", (char*)"graphics/guardiantreeent.bmp", 4, 75, 2, 0, (char*)"Razors", BITE, (char*)"Hide", ARMOR_10, 0);
			MyBattleEngine.AddMonster((char*)"Guardian Ent", (char*)"graphics/guardiantreeent.bmp", 4, 75, 2, 0, (char*)"Razors", BITE, (char*)"Hide", ARMOR_10, 0);
			MyBattleEngine.AddMonster((char*)"Guardian Ent", (char*)"graphics/guardiantreeent.bmp", 4, 75, 2, 0, (char*)"Razors", BITE, (char*)"Hide", ARMOR_10, 0);
			MyBattleEngine.bBoss = true;
			StopMusic();
			StartMusic((char*)"music/BATTLEMU.S3M");
			strcpy(MapMusic, (char*)"music/treetrun.S3M");
		}
		else if (Location == 32 && ((abs(Beorne.GetTileX() - MyPlayer.GetTileX()) == 1 &&
			Beorne.GetTileY() == MyPlayer.GetTileY()) ||
			(abs(Beorne.GetTileY() - MyPlayer.GetTileY()) == 1 &&
			Beorne.GetTileX() == MyPlayer.GetTileX())))
		{
			Beorne.SetText((char*)"Cryn:\nBeorne .. whats going on here?", 1);
			Beorne.SetText((char*)"Beorne:\n...", 2);
			Beorne.SetText((char*)"Cryn:\nWhere is this magic leaf, to save father? You said it would be in here!", 3);
			Beorne.SetText((char*)"Beorne:\nWhat's the rush Cryn? We both know who will be the next king when father dies .. you, of course. So, of anyone, you should be happy.", 4);
			Beorne.SetText((char*)"Cryn:\nHappy? Happy of what?", 5);
			Beorne.SetText((char*)"Beorne:\nThat you let him die! It's your fault Cryn, and everyone knows you did it to become king next!", 6);
			Beorne.SetText((char*)"Cryn:\nThat's not true! This was your idea .. but ... why? Why would you do this Beorne?", 7);
			Beorne.SetText((char*)"...:\nBeorne ... is not my name ... anymore ..", 8);
			Beorne.Speak();
			Location = 33;
			Demon1.Revive();
			Demon1.SetCharacterMap(&MyNPCCharacterMapStruct);
			Demon1.Map = TreeTrunkMap;
			Demon2.Revive();
			Demon2.SetCharacterMap(&MyNPCCharacterMapStruct);
			Demon2.Map = TreeTrunkMap;
			Demon3.Revive();
			Demon3.SetCharacterMap(&MyNPCCharacterMapStruct);
			Demon3.Map = TreeTrunkMap;
			NewScreenSound->Play();
		}
		else if (Location <= 36 && Demon1.Talk(MyPlayer.GetTileX(), MyPlayer.GetTileY())/*Demon1.isAlive() && ((abs(Demon1.GetTileX() - MyPlayer.GetTileX()) == 1 &&
			Demon1.GetTileY() == MyPlayer.GetTileY()) ||
			(abs(Demon1.GetTileY() - MyPlayer.GetTileY()) == 1 &&
			Demon1.GetTileX() == MyPlayer.GetTileX()))*/)
		{
			//Demon1.Speak();
			// Battle time!
			MyPlayer.Direction = MyPlayer.OppositeDirection(MyPlayer.Direction);
			InCombat = true;
			// Pick battle screen.
			char BattleBmp[1000];
			strcpy(BattleBmp, (char*)"graphics/bark.bmp");
			MyBattleEngine.Initialize(Screen, Input, Sound, BattleBmp, (char*)"graphics/frame.bmp", MyPlayer.Level);
			MyBattleEngine.AddPlayer((char*)"Cryn", (char*)"tiles/hero.bmp", MyPlayer.Level, MyPlayer.MaxHP, MyPlayer.HP, MyPlayer.MaxMP, MyPlayer.MP, 0, (char*)"Staff", DAGGER, (char*)"Plate Mail", ARMOR_20);
			MyBattleEngine.bCrystalClearOn = MyPlayer.bCrystalClearOn;
			MyBattleEngine.bBonusAttackOn = MyPlayer.bBonusAttackOn;
			MyBattleEngine.AddMonster((char*)"Demoniz 1", (char*)"graphics/demoniz.bmp", MyPlayer.Level + 2, 90, 10, 8, (char*)"Razors", DAGGER, (char*)"Flesh", ARMOR_45, 5, 350, 150, 40, 40);
			StopMusic();
			StartMusic((char*)"music/BATTLEMU.S3M");
			strcpy(MapMusic, (char*)"music/treetrun.S3M");
			//Demon1.Die();
		}
		else if (Location <= 36 && Demon2.Talk(MyPlayer.GetTileX(), MyPlayer.GetTileY())/*Demon2.isAlive() && ((abs(Demon2.GetTileX() - MyPlayer.GetTileX()) == 1 &&
			Demon2.GetTileY() == MyPlayer.GetTileY()) ||
			(abs(Demon2.GetTileY() - MyPlayer.GetTileY()) == 1 &&
			Demon2.GetTileX() == MyPlayer.GetTileX()))*/)
		{
			//Demon2.Speak();
			// Battle time!
			MyPlayer.Direction = MyPlayer.OppositeDirection(MyPlayer.Direction);
			InCombat = true;
			// Pick battle screen.
			char BattleBmp[1000];
			strcpy(BattleBmp, (char*)"graphics/bark.bmp");
			MyBattleEngine.Initialize(Screen, Input, Sound, BattleBmp, (char*)"graphics/frame.bmp", MyPlayer.Level);
			MyBattleEngine.AddPlayer((char*)"Cryn", (char*)"tiles/hero.bmp", MyPlayer.Level, MyPlayer.MaxHP, MyPlayer.HP, MyPlayer.MaxMP, MyPlayer.MP, 0, (char*)"Staff", DAGGER, (char*)"Plate Mail", ARMOR_20);
			MyBattleEngine.bCrystalClearOn = MyPlayer.bCrystalClearOn;
			MyBattleEngine.bBonusAttackOn = MyPlayer.bBonusAttackOn;
			MyBattleEngine.AddMonster((char*)"Demoniz 2", (char*)"graphics/demoniz.bmp", MyPlayer.Level + 2, 90, 10, 8, (char*)"Razors", DAGGER, (char*)"Flesh", ARMOR_45, 5, 350, 150, 40, 40);
			StopMusic();
			StartMusic((char*)"music/BATTLEMU.S3M");
			strcpy(MapMusic, (char*)"music/treetrun.S3M");
			//Demon2.Die();
		}
		else if (Location <= 36 /*&& Demon3.isAlive() && ((abs(Demon3.GetTileX() - MyPlayer.GetTileX()) == 1 &&
			Demon3.GetTileY() == MyPlayer.GetTileY()) ||
			(abs(Demon3.GetTileY() - MyPlayer.GetTileY()) == 1 &&
			Demon3.GetTileX() == MyPlayer.GetTileX()))*/ && Demon3.Talk(MyPlayer.GetTileX(), MyPlayer.GetTileY()))
		{
			//Demon3.Speak();
			// Battle time!
			MyPlayer.Direction = MyPlayer.OppositeDirection(MyPlayer.Direction);
			InCombat = true;
			// Pick battle screen.
			char BattleBmp[1000];
			strcpy(BattleBmp, (char*)"graphics/bark.bmp");
			MyBattleEngine.Initialize(Screen, Input, Sound, BattleBmp, (char*)"graphics/frame.bmp", MyPlayer.Level);
			MyBattleEngine.AddPlayer((char*)"Cryn", (char*)"tiles/hero.bmp", MyPlayer.Level, MyPlayer.MaxHP, MyPlayer.HP, MyPlayer.MaxMP, MyPlayer.MP, 0, (char*)"Staff", DAGGER, (char*)"Plate Mail", ARMOR_20);
			MyBattleEngine.bCrystalClearOn = MyPlayer.bCrystalClearOn;
			MyBattleEngine.bBonusAttackOn = MyPlayer.bBonusAttackOn;
			MyBattleEngine.AddMonster((char*)"Demoniz 3", (char*)"graphics/demoniz.bmp", MyPlayer.Level + 2, 90, 10, 8, (char*)"Razors", DAGGER, (char*)"Flesh", ARMOR_45, 5, 350, 150, 40, 40);
			StopMusic();
			StartMusic((char*)"music/BATTLEMU.S3M");
			strcpy(MapMusic, (char*)"music/treetrun.S3M");
			//Demon3.Die();
		}
		
		if (Area == FORESTCAMP)
		{
			for (int i=0; i<MAX_DEMON_SOLDIERS; i++)
			{
				if (DemonSoldiers[i]->Talk(MyPlayer.GetTileX(), MyPlayer.GetTileY()))
				{
					// Battle time!
					MyPlayer.Direction = MyPlayer.OppositeDirection(MyPlayer.Direction);
					InCombat = true;
					// Pick battle screen.
					char BattleBmp[1000];
					strcpy(BattleBmp, (char*)"graphics/forest.bmp");
					MyBattleEngine.Initialize(Screen, Input, Sound, BattleBmp, (char*)"graphics/frame.bmp", MyPlayer.Level);
					MyBattleEngine.AddPlayer((char*)"Cryn", (char*)"tiles/hero.bmp", MyPlayer.Level, MyPlayer.MaxHP, MyPlayer.HP, MyPlayer.MaxMP, MyPlayer.MP, 0, (char*)"Staff", DAGGER, (char*)"Plate Mail", ARMOR_20);
					MyBattleEngine.bCrystalClearOn = MyPlayer.bCrystalClearOn;
					MyBattleEngine.bBonusAttackOn = MyPlayer.bBonusAttackOn;

					MyBattleEngine.AddMonster((char*)"Demon Soldier", (char*)"graphics/demonsoldier.bmp", MyPlayer.Level + 3, 90, 10, 8, (char*)"Razors", DAGGER, (char*)"Flesh", ARMOR_45, 5, 350, 150, 65, 65);
					MyBattleEngine.iTemp = i;
					MyBattleEngine.bBoss = true;
					StopMusic();
					StartMusic((char*)"music/BATTLEMU.S3M");
					strcpy(MapMusic, (char*)"music/burnshrt.s3m");
					i = MAX_DEMON_SOLDIERS; // end loop and fight
				}
			}

			if (Neacres.Talk(MyPlayer.GetTileX(), MyPlayer.GetTileY()))
			{
				if (Location < 43)
				{
					Location = 43;
					Neacres.SetText((char*)"Neacres:\nCryn! Quickly, to the front gates!", 1);

					NewScreenSound->Play();
					Ayli.Revive();
					// Girl NPC gets turned on Alive() and appears.
				}
			}

			if (Location == 43 && Ayli.Talk(MyPlayer.GetTileX(), MyPlayer.GetTileY()))
			{
				Location = 44;
				Ayli.SetText((char*)"", 1);
				Ayli.Follow(&MyPlayer);
				Ayli.ResetArea(); // allow her to follow cryn all over map now.
				BossDemon.SetText((char*)"Kaputos:\nSo boy, you think you have what it takes to get past me, do you? Well, we shall see about that.", 1);
				BossDemon.SetText((char*)"Ayli:\nYou're going back to the hell that spawned your necrotic spineless demon hide!", 2);
				BossDemon.SetText((char*)"Cryn:\nYeah! What she said!", 3);
				HenchDemon.SetText((char*)"Major Demon:\nPuny human.. step aside!", 1);
				HenchDemon.SetText((char*)"Ayli:\nI don't think so demon! I didn't just sharpen my blades for nuthin!", 2);
				Neacres.SetText((char*)"Neacres:\nI see you've found a friend, how nice.", 1);
			}

			if (BossDemon.Talk(MyPlayer.GetTileX(), MyPlayer.GetTileY()))
			{
				if (Location >= 44)
				{
					// Battle time!
					MyPlayer.Direction = MyPlayer.OppositeDirection(MyPlayer.Direction);
					InCombat = true;
					// Pick battle screen.
					char BattleBmp[1000];
					strcpy(BattleBmp, (char*)"graphics/forest.bmp");
					MyBattleEngine.Initialize(Screen, Input, Sound, BattleBmp, (char*)"graphics/frame.bmp", MyPlayer.Level);
					MyBattleEngine.AddPlayer((char*)"Cryn", (char*)"tiles/hero.bmp", MyPlayer.Level, MyPlayer.MaxHP, MyPlayer.HP, MyPlayer.MaxMP, MyPlayer.MP, 0, (char*)"Staff", DAGGER, (char*)"Plate Mail", ARMOR_20);
					MyBattleEngine.bCrystalClearOn = MyPlayer.bCrystalClearOn;
					MyBattleEngine.bBonusAttackOn = MyPlayer.bBonusAttackOn;
					MyBattleEngine.AddMonster((char*)"Kaputos", (char*)"graphics/kaputos.bmp", MyPlayer.Level + 2, 300, 50, 8, (char*)"Hell Sword", DAGGER, (char*)"Hide", ARMOR_45, 20, 1000, 1000, 65, 65);
					MyBattleEngine.AddMonster((char*)"Guardian X", (char*)"graphics/guardianx.bmp", 9, 90, 5, 0, (char*)"Bane Sword", DAGGER, (char*)"Hide", ARMOR_20, 5, 650, 400, 40, 40);
					MyBattleEngine.AddMonster((char*)"Guardian Z", (char*)"graphics/guardianx.bmp", 9, 90, 5, 0, (char*)"Bane Sword", DAGGER, (char*)"Hide", ARMOR_20, 5, 650, 400, 40, 40);
					MyBattleEngine.bBoss = true;
					StopMusic();
					StartMusic((char*)"music/BATTLEMU.S3M");
					strcpy(MapMusic, (char*)"music/burnshrt.S3M");
				}
			}

			if (HenchDemon.Talk(MyPlayer.GetTileX(), MyPlayer.GetTileY()))
			{
				if (Location >= 44)
				{
					// Battle time!
					MyPlayer.Direction = MyPlayer.OppositeDirection(MyPlayer.Direction);
					InCombat = true;
					// Pick battle screen.
					char BattleBmp[1000];
					strcpy(BattleBmp, (char*)"graphics/forest.bmp");
					MyBattleEngine.Initialize(Screen, Input, Sound, BattleBmp, (char*)"graphics/frame.bmp", MyPlayer.Level);
					MyBattleEngine.AddPlayer((char*)"Cryn", (char*)"tiles/hero.bmp", MyPlayer.Level, MyPlayer.MaxHP, MyPlayer.HP, MyPlayer.MaxMP, MyPlayer.MP, 0, (char*)"Staff", DAGGER, (char*)"Plate Mail", ARMOR_20);
					MyBattleEngine.bCrystalClearOn = MyPlayer.bCrystalClearOn;
					MyBattleEngine.bBonusAttackOn = MyPlayer.bBonusAttackOn;
					
					MyBattleEngine.AddMonster((char*)"Major Demon", (char*)"graphics/demonsoldier.bmp", MyPlayer.Level + 3, 180, 6, 8, (char*)"Minor Bane Sword", DAGGER, (char*)"Hide", ARMOR_45, 5, 350, 150, 65, 65);
					StopMusic();
					StartMusic((char*)"music/BATTLEMU.S3M");
					strcpy(MapMusic, (char*)"music/burnshrt.s3m");
				}
			}
		} // FOREST CAMP AREA
		else if (Area == DEMONPIT)
		{
			if (DemonStatues[0]->CheckTalk(MyPlayer.GetTileX(), MyPlayer.GetTileY()))
			{
				if (Location == 51 || Location == 52)
				{
					// Already heard big shpleil, just do quick one now.
					DemonStatues[0]->SetText((char*)"Demon Statue:\nThe bones are broken, to stop the flood.\nOne to cast, and two for blood.", 1);
					DemonStatues[0]->Speak();
				}
				else if (Location == 53)
				{
					// Finally, unlock!
					DemonStatues[0]->SetText((char*)"Demon Statue:\nThe bones are broken, to stop the flood.\nNow sacrifice, or swim in blood.", 1);
					DemonStatues[0]->SetText((char*)"Cryn:\nWhat? Stupid statue. That's not what you said before!", 2);
					DemonStatues[0]->SetText((char*)"Ayli:\nCryn, look! The bone wall ahead is breaking apart.", 3);
					DemonStatues[0]->Speak();

					NewScreenSound->Play();
					Location = 54;
					BoneBarriers[0]->Die();
					BoneBarriers[1]->Die();
				}
				else if (Location == 50)
				{
					// First time hearing big shpleil.
					DemonStatues[0]->Speak();
					NewScreenSound->Play();
					Location = 51;
					MyPlayer.bCrystalClearOn = true;
				}
				else
				{
					DemonStatues[0]->SetText((char*)"The Demon Statue remains silent.", 1);
					DemonStatues[0]->Speak();
				}
			}
			else if (DemonStatues[1]->CheckTalk(MyPlayer.GetTileX(), MyPlayer.GetTileY()))
			{
				if (Location >= 52)
				{
					// Already activated!
					DemonStatues[1]->SetText((char*)"The Demon Statue remains silent.", 1);
					DemonStatues[1]->Speak();
				}
				else
				{
					DemonStatues[1]->Speak();
					NewScreenSound->Play();
					Location = 52;
				}
			}
			else if (DemonStatues[2]->CheckTalk(MyPlayer.GetTileX(), MyPlayer.GetTileY()))
			{
				if (Location >= 53)
				{
					// Already activated!
					DemonStatues[2]->SetText((char*)"The Demon Statue remains silent.", 1);
					DemonStatues[2]->Speak();
				}
				else
				{
					DemonStatues[2]->Speak();
					NewScreenSound->Play();
					Location = 53;
				}
			}
			if (HenchDemon.Talk(MyPlayer.GetTileX(), MyPlayer.GetTileY()))
			{
				if (Location >= 50)
				{
					// Battle time!
					MyPlayer.Direction = MyPlayer.OppositeDirection(MyPlayer.Direction);
					InCombat = true;
					// Pick battle screen.
					char BattleBmp[1000];
					strcpy(BattleBmp, (char*)"graphics/demonpit.bmp");
					MyBattleEngine.Initialize(Screen, Input, Sound, BattleBmp, (char*)"graphics/frame.bmp", MyPlayer.Level);
					MyBattleEngine.AddPlayer((char*)"Cryn", (char*)"tiles/hero.bmp", MyPlayer.Level, MyPlayer.MaxHP, MyPlayer.HP, MyPlayer.MaxMP, MyPlayer.MP, 0, (char*)"Staff", DAGGER, (char*)"Plate Mail", ARMOR_20);
					MyBattleEngine.bCrystalClearOn = MyPlayer.bCrystalClearOn;
					MyBattleEngine.bBonusAttackOn = MyPlayer.bBonusAttackOn;
					
					MyBattleEngine.AddMonster((char*)"Major Demon", (char*)"graphics/demonsoldier.bmp", MyPlayer.Level + 3, 350, 6, 8, (char*)"Minor Bane Sword", DAGGER, (char*)"Hide", ARMOR_45, 5, 350, 150, 65, 65);
					StopMusic();
					StartMusic((char*)"music/BATTLEMU.S3M");
					strcpy(MapMusic, (char*)"music/demonpit.s3m");
				}
			}

			BoneBarriers[0]->Talk(MyPlayer.GetTileX(), MyPlayer.GetTileY());
			BoneBarriers[1]->Talk(MyPlayer.GetTileX(), MyPlayer.GetTileY());
			
			if (Location == 54 && DragonSpawn.Talk(MyPlayer.GetTileX(), MyPlayer.GetTileY()))
			{
				// Battle time!
				MyPlayer.Direction = MyPlayer.OppositeDirection(MyPlayer.Direction);
				InCombat = true;
				// Pick battle screen.
				char BattleBmp[1000];
				strcpy(BattleBmp, (char*)"graphics/demonpit.bmp");
				MyBattleEngine.Initialize(Screen, Input, Sound, BattleBmp, (char*)"graphics/frame.bmp", MyPlayer.Level);
				MyBattleEngine.AddPlayer((char*)"Cryn", (char*)"tiles/hero.bmp", MyPlayer.Level, MyPlayer.MaxHP, MyPlayer.HP, MyPlayer.MaxMP, MyPlayer.MP, 0, (char*)"Staff", DAGGER, (char*)"Plate Mail", ARMOR_20);
				MyBattleEngine.bCrystalClearOn = MyPlayer.bCrystalClearOn;
				MyBattleEngine.bBonusAttackOn = MyPlayer.bBonusAttackOn;
				MyBattleEngine.bBoss = true;
				
				MyBattleEngine.AddMonster((char*)"Pool Gaurdian", (char*)"graphics/dragonspawn_monster.bmp", MyPlayer.Level + 3, 900, 35, 8, (char*)"Flame of Hell", DAGGER, (char*)"Hide", ARMOR_45, 10, 1000, 500, 100, 100);
				StopMusic();
				StartMusic((char*)"music/BATTLEMU.S3M");
				strcpy(MapMusic, (char*)"music/demonpit.s3m");
			}
			else if (Location == 58 && DragonSpawn.CheckTalk(MyPlayer.GetTileX(), MyPlayer.GetTileY()))
			{
				DragonSpawn.SetText((char*)"Cryn:\nWhat have you done to her! Get her out of there!", 1);
				DragonSpawn.SetText((char*)"Ayli:\nCryn, help!", 2);
				DragonSpawn.SetText((char*)"Pool Gaurdian:\nWhy don't you come and join her? ha ha ha", 3);
				DragonSpawn.SetText((char*)"Cryn:\nPrepare to die demon!", 4);
				
				DragonSpawn.Speak();

				// Battle time!
				MyPlayer.Direction = MyPlayer.OppositeDirection(MyPlayer.Direction);
				InCombat = true;
				// Pick battle screen.
				char BattleBmp[1000];
				strcpy(BattleBmp, (char*)"graphics/demonpit.bmp");
				MyBattleEngine.Initialize(Screen, Input, Sound, BattleBmp, (char*)"graphics/frame.bmp", MyPlayer.Level);
				MyBattleEngine.AddPlayer((char*)"Cryn", (char*)"tiles/hero.bmp", MyPlayer.Level, MyPlayer.MaxHP, MyPlayer.HP, MyPlayer.MaxMP, MyPlayer.MP, 0, (char*)"Staff", DAGGER, (char*)"Plate Mail", ARMOR_20);
				MyBattleEngine.bCrystalClearOn = MyPlayer.bCrystalClearOn;
				MyBattleEngine.bBonusAttackOn = MyPlayer.bBonusAttackOn;
				MyBattleEngine.bBoss = true;
				
				MyBattleEngine.AddMonster((char*)"Pool Gaurdian", (char*)"graphics/dragonspawn_monster.bmp", MyPlayer.Level + 3, 200, 35, 8, (char*)"Flame of Hell", DAGGER, (char*)"Hide", ARMOR_45, 10, 1000, 500, 100, 100);
				StopMusic();
				StartMusic((char*)"music/BATTLEMU.S3M");
				strcpy(MapMusic, (char*)"music/demonpit.s3m");
			}

		} // DEMON PIT AREA
		else if (Area == BLOODCHAMBER)
		{
			for (int i=0; i<MAX_BLOOD_CLOTS; i++)
			{
				if (BloodClots[i]->Talk(MyPlayer.GetTileX(), MyPlayer.GetTileY()))
				{
					if (i == 1)
					{
						// hee hee
						BloodClots[i]->Follow(&MyPlayer);
						BloodClots[i]->SetText((char*)"");
					}
				}
			}
		} // BLOOD CHAMBER AREA
		else if (Area == DEMONTOWN)
		{
			TownFolk1.Talk(MyPlayer.GetTileX(), MyPlayer.GetTileY());
			TownFolk2.Talk(MyPlayer.GetTileX(), MyPlayer.GetTileY());
			TownFolk3.Talk(MyPlayer.GetTileX(), MyPlayer.GetTileY());
			
			if (TownFolk4.Talk(MyPlayer.GetTileX(), MyPlayer.GetTileY()) && Location == 81 )
			{
				if (Location == 81)
				{
					Location = 82;
					NewScreenSound->Play();
					TownFolk4.Die();
					MyPlayer.HP = MyPlayer.MaxHP;
					MyPlayer.MP = MyPlayer.MaxMP;
				}
			}
			else if (TownFolk5.Talk(MyPlayer.GetTileX(), MyPlayer.GetTileY()))
			{
				if (Location == 80)
				{
					Location = 81;
				}

				if (Location < 84)
				{
					TownFolk5.SetText((char*)"Narz The Ancient:\nWhat, are you afraid of the little monster in the forest? Remember, the\nentrance is in the northwest corner of town.", 1);

					TownFolk4.SetText((char*)"Demon Soldier:\nNo onez allowed pazt thiz point, human.", 1);
					TownFolk4.SetText((char*)"Cryn:\nNarz sent me to bring back the rouge monster in the forest.", 2);
					TownFolk4.SetText((char*)"Demon Soldier:\nHa ha ha. This is a good one human. But if Narz sent you, then so be it. Here human, I might as well heal you, though it won't help. ha ha", 3);
				}

				if (Location == 84)
				{
					TownFolk5.SetText((char*)"Narz The Ancient:\nHave fun down there, foolish human.", 1);
					Location = 85;
				}
			}
			else if (DemonTownBoss.Talk(MyPlayer.GetTileX(), MyPlayer.GetTileY()) && Location < 83)
			{
				// Battle time!
				MyPlayer.Direction = MyPlayer.OppositeDirection(MyPlayer.Direction);
				InCombat = true;
				// Pick battle screen.
				char BattleBmp[1000];
				strcpy(BattleBmp, (char*)"graphics/demontown.bmp");
				MyBattleEngine.Initialize(Screen, Input, Sound, BattleBmp, (char*)"graphics/frame.bmp", MyPlayer.Level);
				MyBattleEngine.AddPlayer((char*)"Cryn", (char*)"tiles/hero.bmp", MyPlayer.Level, MyPlayer.MaxHP, MyPlayer.HP, MyPlayer.MaxMP, MyPlayer.MP, 0, (char*)"Staff", DAGGER, (char*)"Plate Mail", ARMOR_20);
				MyBattleEngine.bCrystalClearOn = MyPlayer.bCrystalClearOn;
				MyBattleEngine.bBonusAttackOn = MyPlayer.bBonusAttackOn;
				MyBattleEngine.bBoss = true;
				
				MyBattleEngine.AddMonster((char*)"Rii", (char*)"graphics/demontown_rii.bmp", MyPlayer.Level + 3, 1000, 60, 12, (char*)"Thorns", LONGSWORD, (char*)"Hide", ARMOR_45, 25, 1800, 500, 90, 90);
				StopMusic();
				StartMusic((char*)"music/BATTLEMU.S3M");
				strcpy(MapMusic, (char*)"music/burnshrt.s3m");
			}
		} // DEMON TOWN AREA
		else if (Area == NETHERWORLD)
		{
			if (TownFolk1.Talk(MyPlayer.GetTileX(), MyPlayer.GetTileY()))
			{
				// Battle time!
				MyPlayer.Direction = MyPlayer.OppositeDirection(MyPlayer.Direction);
				InCombat = true;
				// Pick battle screen.
				char BattleBmp[1000];
				strcpy(BattleBmp, (char*)"graphics/netherworld.bmp");
				// THIS PICKS BEORNE AS MAIN CHARACTER, DO NOT REUSE!
				MyBattleEngine.Initialize(Screen, Input, Sound, BattleBmp, (char*)"graphics/frame.bmp", MyPlayer.Level, true); // true indicates Beorne!
				MyBattleEngine.AddPlayer((char*)"Beorne", (char*)"tiles/beorne_posessed.bmp", MyPlayer.Level, MyPlayer.MaxHP, MyPlayer.HP, MyPlayer.MaxMP, MyPlayer.MP, 0, (char*)"Slayer", DAGGER, (char*)"Plate Mail", ARMOR_20);
				MyBattleEngine.bCrystalClearOn = MyPlayer.bCrystalClearOn;
				MyBattleEngine.bBonusAttackOn = false;//MyPlayer.bBonusAttackOn;
				MyBattleEngine.bBoss = false;
				
				MyBattleEngine.AddMonster((char*)"City Guard 1", (char*)"graphics/cityguard.bmp", MyPlayer.Level, 1800, 0, 0, (char*)"Sword", LONGSWORD, (char*)"Hide", ARMOR_45, 0, 100, 0, 40, 40);
				StopMusic();
				StartMusic((char*)"music/BATTLEMU.S3M");
				strcpy(MapMusic, (char*)"music/BEORNECA.S3M");
			}
			else if (TownFolk2.Talk(MyPlayer.GetTileX(), MyPlayer.GetTileY()))
			{
				// Battle time!
				MyPlayer.Direction = MyPlayer.OppositeDirection(MyPlayer.Direction);
				InCombat = true;
				// Pick battle screen.
				char BattleBmp[1000];
				strcpy(BattleBmp, (char*)"graphics/netherworld.bmp");
				// THIS PICKS BEORNE AS MAIN CHARACTER, DO NOT REUSE!
				MyBattleEngine.Initialize(Screen, Input, Sound, BattleBmp, (char*)"graphics/frame.bmp", MyPlayer.Level, true); // true indicates Beorne!
				MyBattleEngine.AddPlayer((char*)"Beorne", (char*)"tiles/beorne_posessed.bmp", MyPlayer.Level, MyPlayer.MaxHP, MyPlayer.HP, MyPlayer.MaxMP, MyPlayer.MP, 0, (char*)"Slayer", DAGGER, (char*)"Plate Mail", ARMOR_20);
				MyBattleEngine.bCrystalClearOn = MyPlayer.bCrystalClearOn;
				MyBattleEngine.bBonusAttackOn = false;//MyPlayer.bBonusAttackOn;
				MyBattleEngine.bBoss = false;
				
				MyBattleEngine.AddMonster((char*)"City Guard 2", (char*)"graphics/cityguard.bmp", MyPlayer.Level, 1800, 0, 0, (char*)"Sword", LONGSWORD, (char*)"Hide", ARMOR_45, 0, 100, 0, 40, 40);
				StopMusic();
				StartMusic((char*)"music/BATTLEMU.S3M");
				strcpy(MapMusic, (char*)"music/BEORNECA.S3M");
			}
			else if (TownFolk3.Talk(MyPlayer.GetTileX(), MyPlayer.GetTileY()))
			{
				// Battle time!
				MyPlayer.Direction = MyPlayer.OppositeDirection(MyPlayer.Direction);
				InCombat = true;
				// Pick battle screen.
				char BattleBmp[1000];
				strcpy(BattleBmp, (char*)"graphics/netherworld.bmp");
				// THIS PICKS BEORNE AS MAIN CHARACTER, DO NOT REUSE!
				MyBattleEngine.Initialize(Screen, Input, Sound, BattleBmp, (char*)"graphics/frame.bmp", MyPlayer.Level, true); // true indicates Beorne!
				MyBattleEngine.AddPlayer((char*)"Beorne", (char*)"tiles/beorne_posessed.bmp", MyPlayer.Level, MyPlayer.MaxHP, MyPlayer.HP, MyPlayer.MaxMP, MyPlayer.MP, 0, (char*)"Slayer", DAGGER, (char*)"Plate Mail", ARMOR_20);
				MyBattleEngine.bCrystalClearOn = MyPlayer.bCrystalClearOn;
				MyBattleEngine.bBonusAttackOn = false;//MyPlayer.bBonusAttackOn;
				MyBattleEngine.bBoss = false;
				
				MyBattleEngine.AddMonster((char*)"City Guard 3", (char*)"graphics/cityguard2.bmp", MyPlayer.Level, 1800, 0, 0, (char*)"Sword", LONGSWORD, (char*)"Hide", ARMOR_45, 0, 100, 0, 40, 40);
				StopMusic();
				StartMusic((char*)"music/BATTLEMU.S3M");
				strcpy(MapMusic, (char*)"music/BEORNECA.S3M");
			}
			else if (TownFolk4.Talk(MyPlayer.GetTileX(), MyPlayer.GetTileY()))
			{
				// Battle time!
				MyPlayer.Direction = MyPlayer.OppositeDirection(MyPlayer.Direction);
				InCombat = true;
				// Pick battle screen.
				char BattleBmp[1000];
				strcpy(BattleBmp, (char*)"graphics/netherworld.bmp");
				// THIS PICKS BEORNE AS MAIN CHARACTER, DO NOT REUSE!
				MyBattleEngine.Initialize(Screen, Input, Sound, BattleBmp, (char*)"graphics/frame.bmp", MyPlayer.Level, true); // true indicates Beorne!
				MyBattleEngine.AddPlayer((char*)"Beorne", (char*)"tiles/beorne_posessed.bmp", MyPlayer.Level, MyPlayer.MaxHP, MyPlayer.HP, MyPlayer.MaxMP, MyPlayer.MP, 0, (char*)"Slayer", DAGGER, (char*)"Plate Mail", ARMOR_20);
				MyBattleEngine.bCrystalClearOn = MyPlayer.bCrystalClearOn;
				MyBattleEngine.bBonusAttackOn = false;//MyPlayer.bBonusAttackOn;
				MyBattleEngine.bBoss = false;
				
				MyBattleEngine.AddMonster((char*)"City Guard 4", (char*)"graphics/cityguard2.bmp", MyPlayer.Level + 16, 1800, 0, 0, (char*)"Sword", LONGSWORD, (char*)"Hide", ARMOR_45, 0, 100, 0, 40, 40);
				StopMusic();
				StartMusic((char*)"music/BATTLEMU.S3M");
				strcpy(MapMusic, (char*)"music/BEORNECA.S3M");
			}
			else if (Neacres.Talk(MyPlayer.GetTileX(), MyPlayer.GetTileY()))
			{
				if (Location == 90)
				{
					NewScreenSound->Play();
					Location = 91;
					Neacres.SetPosTile(1, 16);
					Neacres.StandStill();
					Neacres.SetText((char*)"Neacres:\nHe will be arriving shortly, and I will be ready, master.", 1);
				}
				else if (Location == 110)
				{
					NewScreenSound->Play();
					Location = 111;
					Neacres.SetPosTile(96, 1);
					Neacres.StandStill();
					Neacres.SetText((char*)"Neacres:\n...");
				}
			}
			else if (Possession->Talk(MyPlayer.GetTileX(), MyPlayer.GetTileY()))
			{
				if (Location < 105)
				{
					Location = 99;
					NewScreenSound->Play();
					Possession->Die();
				
					MyPlayer.HP = MyPlayer.MaxHP;
					MyPlayer.MP = MyPlayer.MaxMP;
				}
			}
			else if (Beorne.Talk(MyPlayer.GetTileX(), MyPlayer.GetTileY()))
			{
				if (Location == 112)
				{
					NewScreenSound->Play();
					Location = 113;
					Beorne.SetPosTile(23, 7);
					Beorne.StandStill();
					Beorne.SetText((char*)"Beorne:\nAre you ready, Cryn? Remember what happened the last we did this?\nha ha ha");
				}
				else if (Location == 113)
				{
					NewScreenSound->Play();
					Location = 114;
					Beorne.SetPosTile(20, 8);
					MyPlayer.SetPosTile(19, 9);
					Beorne.SetText((char*)"Beorne:\nMake your move, Cryn.");
				}
				else if (Location == 114)
				{
					// Battle time!
					MyPlayer.Direction = MyPlayer.OppositeDirection(MyPlayer.Direction);
					InCombat = true;
					// Pick battle screen.
					char BattleBmp[1000];
					strcpy(BattleBmp, (char*)"graphics/netherworld.bmp");
					MyBattleEngine.Initialize(Screen, Input, Sound, BattleBmp, (char*)"graphics/frame.bmp", MyPlayer.Level);
					MyBattleEngine.AddPlayer((char*)"Cryn", (char*)"tiles/hero.bmp", MyPlayer.Level, MyPlayer.MaxHP, MyPlayer.HP, MyPlayer.MaxMP, MyPlayer.MP, 0, (char*)"Staff", DAGGER, (char*)"Plate Mail", ARMOR_20);
					MyBattleEngine.bCrystalClearOn = MyPlayer.bCrystalClearOn;
					MyBattleEngine.bBonusAttackOn = MyPlayer.bBonusAttackOn;
					MyBattleEngine.bBoss = true;
					
					MyBattleEngine.AddMonster((char*)"Beorne", (char*)"graphics/beorne.bmp", MyPlayer.Level + 1, 1050, 75, 8, (char*)"Death Sword", DAGGER, (char*)"Platemail", ARMOR_45, 20, 550, 550);
					StopMusic();
					StartMusic((char*)"music/BATTLEMU.S3M");
					strcpy(MapMusic, (char*)"music/treetrun.s3m");
				}
				else if (Location == 121)
				{
					//
					// END OF GAME SCENE
					//
					DisplayEndOfGame();
				}
			}

			Ayli.Talk(MyPlayer.GetTileX(), MyPlayer.GetTileY());

		} // NETHER WORLD AREA
		else if (Area == DEEPNETHERWORLD)
		{
			if (Eyes->Talk(MyPlayer.GetTileX(), MyPlayer.GetTileY()))
			{
				// Battle time!
				MyPlayer.Direction = MyPlayer.OppositeDirection(MyPlayer.Direction);
				InCombat = true;
				// Pick battle screen.
				char BattleBmp[1000];
				strcpy(BattleBmp, (char*)"graphics/netherworld.bmp");
				// THIS PICKS BEORNE AS MAIN CHARACTER, DO NOT REUSE!
				MyBattleEngine.Initialize(Screen, Input, Sound, BattleBmp, (char*)"graphics/frame.bmp", MyPlayer.Level, true); // true indicates Beorne!
				MyBattleEngine.AddPlayer((char*)"Beorne", (char*)"tiles/beorne_posessed.bmp", MyPlayer.Level, MyPlayer.MaxHP, MyPlayer.HP, MyPlayer.MaxMP, MyPlayer.MP, 0, (char*)"Slayer", DAGGER, (char*)"Plate Mail", ARMOR_20);
				MyBattleEngine.bCrystalClearOn = MyPlayer.bCrystalClearOn;
				MyBattleEngine.bBonusAttackOn = false;//MyPlayer.bBonusAttackOn;
				MyBattleEngine.bBoss = true;
				
				MyBattleEngine.AddMonster((char*)"Nether Eye", (char*)"tiles/deepnethereye.bmp", 1, 2222, 0, 0, (char*)"Lashes", LONGSWORD, (char*)"Hide", ARMOR_45, 0, 100, 0, 40, 40);
				StopMusic();
				StartMusic((char*)"music/BATTLEMU.S3M");
				strcpy(MapMusic, (char*)"music/BEORNECA.S3M");
			}
			else if (Spine->Talk(MyPlayer.GetTileX(), MyPlayer.GetTileY()))
			{
				// Battle time!
				MyPlayer.Direction = MyPlayer.OppositeDirection(MyPlayer.Direction);
				InCombat = true;
				// Pick battle screen.
				char BattleBmp[1000];
				strcpy(BattleBmp, (char*)"graphics/netherworld.bmp");
				// THIS PICKS BEORNE AS MAIN CHARACTER, DO NOT REUSE!
				MyBattleEngine.Initialize(Screen, Input, Sound, BattleBmp, (char*)"graphics/frame.bmp", MyPlayer.Level, true); // true indicates Beorne!
				MyBattleEngine.AddPlayer((char*)"Beorne", (char*)"tiles/beorne_posessed.bmp", MyPlayer.Level, MyPlayer.MaxHP, MyPlayer.HP, MyPlayer.MaxMP, MyPlayer.MP, 0, (char*)"Slayer", DAGGER, (char*)"Plate Mail", ARMOR_20);
				MyBattleEngine.bCrystalClearOn = MyPlayer.bCrystalClearOn;
				MyBattleEngine.bBonusAttackOn = false;//MyPlayer.bBonusAttackOn;
				MyBattleEngine.bBoss = true;
				
				MyBattleEngine.AddMonster((char*)"Nether Spine", (char*)"tiles/deepnetherspine.bmp", 1, 4444, 0, 0, (char*)"Spines", LONGSWORD, (char*)"Hide", ARMOR_45, 0, 100, 0, 40, 40);
				StopMusic();
				StartMusic((char*)"music/BATTLEMU.S3M");
				strcpy(MapMusic, (char*)"music/BEORNECA.S3M");
			}
			else if (Heart->Talk(MyPlayer.GetTileX(), MyPlayer.GetTileY()))
			{
				// Battle time!
				MyPlayer.Direction = MyPlayer.OppositeDirection(MyPlayer.Direction);
				InCombat = true;
				// Pick battle screen.
				char BattleBmp[1000];
				strcpy(BattleBmp, (char*)"graphics/netherworld.bmp");
				// THIS PICKS BEORNE AS MAIN CHARACTER, DO NOT REUSE!
				MyBattleEngine.Initialize(Screen, Input, Sound, BattleBmp, (char*)"graphics/frame.bmp", MyPlayer.Level, true); // true indicates Beorne!
				MyBattleEngine.AddPlayer((char*)"Beorne", (char*)"tiles/beorne_posessed.bmp", MyPlayer.Level, MyPlayer.MaxHP, MyPlayer.HP, MyPlayer.MaxMP, MyPlayer.MP, 0, (char*)"Slayer", DAGGER, (char*)"Plate Mail", ARMOR_20);
				MyBattleEngine.bCrystalClearOn = MyPlayer.bCrystalClearOn;
				MyBattleEngine.bBonusAttackOn = false;//MyPlayer.bBonusAttackOn;
				MyBattleEngine.bBoss = true;
				
				MyBattleEngine.AddMonster((char*)"Nether Heart", (char*)"tiles/deepnetherheart.bmp", 1, 6666, 0, 0, (char*)"Blood", LONGSWORD, (char*)"Hide", ARMOR_45, 0, 100, 0, 40, 40);
				StopMusic();
				StartMusic((char*)"music/BATTLEMU.S3M");
				strcpy(MapMusic, (char*)"music/BEORNECA.S3M");
			}
			else if (Brain->Talk(MyPlayer.GetTileX(), MyPlayer.GetTileY()))
			{
				// Battle time!
				MyPlayer.Direction = MyPlayer.OppositeDirection(MyPlayer.Direction);
				InCombat = true;
				// Pick battle screen.
				char BattleBmp[1000];
				strcpy(BattleBmp, (char*)"graphics/netherworld.bmp");
				// THIS PICKS BEORNE AS MAIN CHARACTER, DO NOT REUSE!
				MyBattleEngine.Initialize(Screen, Input, Sound, BattleBmp, (char*)"graphics/frame.bmp", MyPlayer.Level, true); // true indicates Beorne!
				MyBattleEngine.AddPlayer((char*)"Beorne", (char*)"tiles/beorne_posessed.bmp", MyPlayer.Level, MyPlayer.MaxHP, MyPlayer.HP, MyPlayer.MaxMP, MyPlayer.MP, 0, (char*)"Slayer", DAGGER, (char*)"Plate Mail", ARMOR_20);
				MyBattleEngine.bCrystalClearOn = MyPlayer.bCrystalClearOn;
				MyBattleEngine.bBonusAttackOn = false;//MyPlayer.bBonusAttackOn;
				MyBattleEngine.bBoss = true;
				
				MyBattleEngine.AddMonster((char*)"Nether Brain", (char*)"tiles/deepnetherbrain.bmp", 1, 9999, 0, 0, (char*)"Thoughts", LONGSWORD, (char*)"Hide", ARMOR_45, 0, 100, 0, 40, 40);
				StopMusic();
				StartMusic((char*)"music/BATTLEMU.S3M");
				strcpy(MapMusic, (char*)"music/BEORNECA.S3M");
			}
			else if (Possession->Talk(MyPlayer.GetTileX(), MyPlayer.GetTileY()))
			{
				NewScreenSound->Play();
				Possession->Die();
				Location = 107;
			}
		}

	}
}

// ------------------------------------------------------------------
// cdx_DoFrame - performs drawing of the current frame
// ------------------------------------------------------------------
void cdx_DoFrame(bool bFlip)
{
	MyTimer.Start_Clock();

	if (!InCombat)
	{
		Input->Update();
		Input->UpdateLastKey(true);
		if (Input->GetLastKey() == 68)
		{
			CMenu MyMenu;
			ShowMenu(&MyMenu);
			OperateMenu(&MyMenu);
		}
	}

	if (Input->GetLastKey() == 67)
	{
		Screen->GetFront()->SaveAsBMP("\\rpg_screencap.bmp");
	}

	// clear the current frame
	Screen->GetBack()->Fill(0);

	if (/*Location < 10 || Location == 15 || */Area == FOREST || Area == SWAMP)
	{
		// Castle / Forest Area
		CombatOn = true;

		ForestMap->AnimateMap(30);
		ForestMap->DrawTrans(Screen->GetBack());

		if (MyPlayer.GetTileX() > 37 || MyPlayer.GetTileY() > 18)
		for (int i=0; i<MAX_MIST_SPOTS; i++)
		{
			MistSpots[i].Move();
			MistSpots[i].Draw();
		}

		// Move characters
   		if (!InCombat) Beorne.Move();
		ForestMonster.Move();
		Fountain.Move();
		TownFolk1.Move();
		TownFolk2.Move();
		TownFolk3.Move();
		TownFolk4.Move();
		TownFolk7.Move();

		// Draw characters
   		Beorne.Draw();
		King.Draw();
		ForestMonster.Draw();
		Fountain.Draw();
		TownFolk1.Draw();
		TownFolk2.Draw();
		TownFolk3.Draw();
		TownFolk4.Draw();
		TownFolk7.Draw();

		// When beorne first appears, let him say his piece.
		if ((Beorne.GetTileX() > MyPlayer.GetTileX() - 2) && (Beorne.GetTileX() < MyPlayer.GetTileX() + 2) &&
			(Beorne.GetTileY() > MyPlayer.GetTileY() - 2) && (Beorne.GetTileY() < MyPlayer.GetTileY() + 2) &&
			Location < 1)
		{
			Beorne.SetText((char*)"Beorne:\nDad wants to see us. I wonder what he wants this time.", 1);
			Beorne.SetText((char*)"Cryn:\nYeh well, don't give him a hard time Beorne.", 2);
			Beorne.SetText((char*)"Beorne:\nWhat are you talking about? You are the one not meeting his expectations of a warrior.", 3);
			Beorne.SetText((char*)"Cryn:\nAnd you are the one always causing trouble and getting into fights.", 4);
			Beorne.SetText((char*)"Beorne:\nUhg, I don't have time for this Cryn. Let's just see what he wants.", 5);
			Beorne.Speak();
			Location = 1;
		}

		// When king is done talking, beorne says next peice.
		if (MyPlayer.GetTileX() > 17 && Location == 2)
		{
			Beorne.Speak();
			Location = 3;
			MyPlayer.HP = MyPlayer.MaxHP;
			MyPlayer.MP = MyPlayer.MaxMP;
			SaveGame();
		}
		
		if (MyPlayer.GetTileX() == 69 && MyPlayer.GetTileY() == 12 && Location < 4 && MyPlayer.isFinishedMoving())
		{
			Beorne.SetText((char*)"Cryn:\nLook, those tracks look like the footprints of a Lineer. We should be careful.", 1);
			Beorne.SetText((char*)"Beorne:\nGod Cryn, you are so gullible. Thats just a story parents tell their kids so they stay out of the forest.", 2);
			Beorne.SetText((char*)"", 3);
			Beorne.SetText((char*)"", 4);
			Beorne.SetText((char*)"", 5);
			Beorne.SetText((char*)"", 6);
			Beorne.Speak();
			Location = 4;
		}

		if (MyPlayer.GetTileX() > 37 || MyPlayer.GetTileY() > 18)
		{		
			// We're in the forest, so draw foresty things.
			DrawRain();
		}
		else
		{
			// We're in the castle, so do castley things.
			CombatOn = false;
		}

		if (MyPlayer.GetTileY() > 31 && /*Location < 10*/ Area == SWAMP)
		{
			DrawGnats();
		}

		if (Location < 2 && MyPlayer.GetTileX() == 60 && MyPlayer.GetTileY() == 3 && MyPlayer.isFinishedMoving())
		{
			// Don't let player go in woods without finding Beorne and talking to King first.
			Beorne.SetText((char*)"Cryn:\nI really wonder whats past these trees, but I probably shouldn't venture that far.", 1);
			Beorne.Speak();
			MyPlayer.SetPosTile(59, 3);
		}

		Talk();
	}
	else if (/*Location < 15*/Area == SWAMPCAVE)
	{
		// Swamp Cave Area
		CombatOn = true;
		SwampCaveMap->AnimateMap(30);
		SwampCaveMap->DrawTrans(Screen->GetBack());

		// Move characters
		Beorne.Move();
		Fountain.Move();

		// Draw characters
		Beorne.Draw();
		Fountain.Draw();

		if (MyPlayer.GetTileX() > 35 && MyPlayer.GetTileX() < 50 && MyPlayer.GetTileY() > 15 && MyPlayer.GetTileY() < 25)
		{
			DrawGnats();
		}
		else
		{
			DrawBats();
		}

		DrawFogOfWar();

		Talk();
	}
	else if (/*Location < 25 ||*/ Area == TREE)
	{
		// Tree Area
		CombatOn = true;
		//TreeMap->AnimateMap(30);
		TreeMap->DrawTrans(Screen->GetBack());

		// Move characters
		Beorne.Move();
		Fountain.Move();

		// Draw characters
		Beorne.Draw();
		Fountain.Draw();

		if (MyPlayer.GetTileY() > 11 && Location == 20 && MyPlayer.isFinishedMoving())
		{
			Beorne.SetText((char*)"Beorne:\nUhg! I should have known this tree would be nothing but a labryinth .. keep your eyes open Cryn.", 1);
			Beorne.SetText((char*)"Cryn:\nWhich way do you think we should go first?", 2);
			Beorne.SetText((char*)"Beorne:\nHm, lets try South.", 3);
			Beorne.SetText((char*)"", 4);
			Beorne.Speak();
			Location = 21;
			SaveGame();
		}

		Talk();
	}
	else if (/*Location < 30*/Area == TREETRUNK)
	{
		// Tree Trunk Area
		CombatOn = true;
		//TreeTrunkMap->AnimateMap(30);
		TreeTrunkMap->DrawTrans(Screen->GetBack());

		// Move characters
		Beorne.Move();
		Fountain.Move();
		TreeBoss.Move();

		// Draw characters
		Beorne.Draw();
		Fountain.Draw();
		TreeBoss.Draw();

		// When arrives, where is beorne?
		if (Location == 25)
		{
			MyPlayer.SetText((char*)"Cryn\nBeorne? Hey, where are you?", 1);
			MyPlayer.Speak();
			Location = 26;
		}

		// When beorne appears next, let him say his piece.
		if ((Beorne.GetTileX() > MyPlayer.GetTileX() - 2) && (Beorne.GetTileX() < MyPlayer.GetTileX() + 2) &&
			(Beorne.GetTileY() > MyPlayer.GetTileY() - 2) && (Beorne.GetTileY() < MyPlayer.GetTileY() + 2) &&
			Location == 26)
		{
			Beorne.SetText((char*)"Cryn:\nBeorne! Why are you running ahead so fast?", 1);
			Beorne.SetText((char*)"Beorne:\nCryn, it's here! I can almost feel it ..", 2);
			Beorne.SetText((char*)"Cryn:\nYou can almost feel it? What are you talking about?", 3);
			Beorne.SetText((char*)"Beorne:\nCome on Cryn, remember father is waiting.", 4);
			Beorne.Speak();
			Location = 27;
			SaveGame();
		}

		Talk();
	}
	else if (/*Location < 40*/Area == TREETRUNKFINAL)
	{
		// After Tree Boss, finish demo story.
		CombatOn = false;

		TreeTrunkMap->AnimateMap(30);
		TreeTrunkMap->DrawTrans(Screen->GetBack());

		// Move characters
		Beorne.Move();
		TreeBoss.Move();
		Demon1.Move();
		Demon2.Move();
		Demon3.Move();
		Fountain.Move();

		// Draw characters
		Beorne.Draw();
		TreeBoss.Draw();
		Demon1.Draw();
		Demon2.Draw();
		Demon3.Draw();
		Fountain.Draw();

		// When tree boss dies, let him speak his mind.
		if (Location == 30 && MyPlayer.isFinishedMoving())
		{
			TreeBoss.SetText((char*)"King Tree Ent:\nYou .. can not ..", 1);
			TreeBoss.SetText((char*)"Cryn:\nWhat?", 2);
			TreeBoss.SetText((char*)"King Tree Ent:\n.. set him .. free ..", 3);
			TreeBoss.SetText((char*)"Cryn:\n...", 4);
			TreeBoss.SetText((char*)"Cryn:\nHuh? Where did Beorne go?", 5);
			TreeBoss.Speak();
			Location = 31;
			TreeBoss.Die();
			NewScreenSound->Play();
			SaveGame();
		}

		if (MyPlayer.GetTileX() > Beorne.GetTileX() - 3 && Location == 31)
		{
			Beorne.SetText((char*)"Beorne:\nmshriptiyou, omahodomina .. etimaa .. etimaa ..", 1);
			Beorne.SetText((char*)"Cryn:\nBeorne?? Is that you?", 2);
			Beorne.SetText((char*)"Beorne:\n...", 3);
			Beorne.SetText((char*)"", 4);
			Beorne.SetText((char*)"", 5);
			Beorne.Speak();

			Location = 32;
			SaveGame();
		}

		if (Location == 37 && MyPlayer.isFinishedMoving())
		{
			Beorne.SetText((char*)"Beorne:\nYou fool! Don't you understand? You can not stop us now! Soon he will be here, and you will be forgotten.", 1);
			Beorne.SetText((char*)"Cryn:\nI don't know what you have become or what is going on here, but I know one thing .. YOU are not my brother!", 2);
			Beorne.SetText((char*)"Beorne:\nAre you sure enough about that to raise your blade ...", 3);
			Beorne.Speak();
			// Battle time!
			MyPlayer.Direction = MyPlayer.OppositeDirection(MyPlayer.Direction);
			InCombat = true;
			// Pick battle screen.
			char BattleBmp[1000];
			strcpy(BattleBmp, (char*)"graphics/bark.bmp");
			MyBattleEngine.Initialize(Screen, Input, Sound, BattleBmp, (char*)"graphics/frame.bmp", MyPlayer.Level);
			MyBattleEngine.AddPlayer((char*)"Cryn", (char*)"tiles/hero.bmp", MyPlayer.Level, MyPlayer.MaxHP, MyPlayer.HP, MyPlayer.MaxMP, MyPlayer.MP, 0, (char*)"Staff", DAGGER, (char*)"Plate Mail", ARMOR_20);
			MyBattleEngine.bCrystalClearOn = MyPlayer.bCrystalClearOn;
			MyBattleEngine.bBonusAttackOn = MyPlayer.bBonusAttackOn;
			MyBattleEngine.bBoss = true;
			MyBattleEngine.AddMonster((char*)"Beorne", (char*)"graphics/beorne.bmp", MyPlayer.Level + 8, 5250, 500, 8, (char*)"Death Sword", DAGGER, (char*)"Platemail", ARMOR_45, 20, 550, 550);
			StopMusic();
			StartMusic((char*)"music/BATTLEMU.S3M");
			strcpy(MapMusic, (char*)"music/treetrun.S3M");
			Beorne.Die();
			Location = 40;
			//SaveGame();
		}

		Talk();
	}
	else if (/*Location < 50 ||*/ Area == FORESTCAMP)
	{
		// Forest Camp Area
		//ForestCampMap->AnimateMap(30);
		ForestCampMap->DrawTrans(Screen->GetBack());

		// Move characters
		//Fountain.Move();
		for (int i=0; i<MAX_DEMON_SOLDIERS; i++)
		{
			if (i > 5)
				DemonSoldiers[i]->Move();

			DemonSoldiers[i]->Draw();
		}

		// Draw characters
		Fountain.Draw();
		
		Neacres.Move();
		Neacres.Draw();
		Ayli.Move();
		Ayli.Draw();
		BossDemon.Draw();
		HenchDemon.Draw();

		if (Location < 42 && MyPlayer.isFinishedMoving())
		{
			MyPlayer.SetText((char*)"Cryn:\nUhg, uhmm.. why do I ache all over?", 1);
			MyPlayer.SetText((char*)"Cryn:\nWhat .. ohh no, I remember now.. Beorne..\n\n.. my own brother ..", 2);
			MyPlayer.SetText((char*)"", 3);
			MyPlayer.SetText((char*)"", 4);
			MyPlayer.SetText((char*)"", 5);
			MyPlayer.SetText((char*)"", 6);
			MyPlayer.Speak();
			Location = 42;
			//SaveGame();
		}

		if (Location < 43 && MyPlayer.GetTileY() > 17 && MyPlayer.isFinishedMoving())
		{
			MyPlayer.SetText((char*)"Cryn:\nMy god, what has happened here. The trees, they look as if they've been\nstained by blood.. I must speak to someone and find out what has happened to our castle.", 1);
			MyPlayer.Speak();
			MyPlayer.SetPosTile(MyPlayer.GetTileX(), MyPlayer.GetTileY() - 1);
		}

		if (Location == 43 && MyPlayer.GetTileX() == 30 && MyPlayer.GetTileY() == 8 && MyPlayer.isFinishedMoving())
		{
			// In front of girl, see girl screaming and running around.
			MyPlayer.SetText((char*)"Ayli:\n[SLASH!] [SLASH!]", 1);
			MyPlayer.SetText((char*)"Cryn:\nHey hang on! I'm coming!", 2);
			MyPlayer.Speak();
		}

		if (MyPlayer.GetTileX() > 37 || MyPlayer.GetTileY() > 18)
		{		
			// We're in the forest, so draw foresty things.
			DrawThunder();

			int r = rand() % 1000;
			if (r == 999 || r == 1)
				Wind3Sound->Play();
		}

		// Combat turns off when inside castle.
		if (MyPlayer.GetTileY() > 19 || MyPlayer.GetTileX() > 35)
		{
			CombatOn = true;
		}
		else
		{
			CombatOn = false;
		}

		Talk();
	}
	else if (Area == DEMONPIT)
	{
		// Demon Pit Area
		// After doing final statue, no more random battles.
		if (Location >= 54)
			CombatOn = false;
		else
			CombatOn = true;

		DemonPitMap->DrawTrans(Screen->GetBack());

		// Move characters
		Ayli.Move();
		Fountain.Move();

		// Draw characters
		Ayli.Draw();
		Fountain.Draw();

		for (int i=0; i<MAX_DEMON_STATUES; i++)
		{
			DemonStatues[i]->Move();
			DemonStatues[i]->Draw();
		}

		for (int i=0; i<MAX_BONE_BARRIERS; i++)
		{
			BoneBarriers[i]->Draw();
		}

		HenchDemon.Move();
		HenchDemon.Draw();
		DragonSpawn.Move();
		DragonSpawn.Draw();

		DrawFireDrops();

		if (Location == 49 && MyPlayer.GetTileX() == 24 && MyPlayer.isFinishedMoving())
		{
			Location = 50;
			Ayli.SetText((char*)"Ayli:\nCryn, do you hear that?", 1);
			Ayli.SetText((char*)"Cryn:\nYes, it sounds kind of like a gurgling pond.", 2);
			Ayli.SetText((char*)"Ayli:\nOr a growling stomach! The sound is coming from the North, maybe we\nshould check it out.", 3);
			Ayli.SetText((char*)"Ayli:\nBy the way, I meant to give you this Cryn. It is a necklace from my home\nused to aid soldiers in battle.", 4);
			Ayli.SetText((char*)"Cryn:\nThis certainly seems like the place to use it. Wow, I don't know what to say Ayli. Thank you.", 5);
			Ayli.SetText((char*)"You feel your eyes sting a bit when you put the necklace on.\n\nYou can now see your enemy's hit points while in battle.", 6);
			Ayli.Speak();
			MyPlayer.bCrystalClearOn = true;
		}
		else if (Location == 55 && MyPlayer.GetTileX() == 55 && MyPlayer.isFinishedMoving())
		{
			DragonSpawn.Speak();

			DragonSpawn.SetPosTile(46, 1);
			Ayli.SetPosTile(45, 1);
			Ayli.StandStill();
			DragonSpawn.StandStill();
		
			NewScreenSound->Play();

			Location = 56;
		}
		else if (Location == 56 && MyPlayer.GetTileX() == 49 && MyPlayer.isFinishedMoving())
		{
			DragonSpawn.SetText((char*)"Pool Gaurdian:\nHa ha ha ..", 1);
			DragonSpawn.SetText((char*)"Ayli:\nAHHHH!", 2);
			DragonSpawn.SetText((char*)"Cryn:\nAyli, I'm coming!", 3);
			
			DragonSpawn.Speak();

			DragonSpawn.SetPosTile(44, 4);
			Ayli.SetPosTile(44, 5);
			Ayli.StandStill();
			DragonSpawn.StandStill();

			NewScreenSound->Play();
			
			Location = 57;
		}
		else if (Location == 57 && MyPlayer.GetTileY() == 2 && MyPlayer.isFinishedMoving())
		{
			DragonSpawn.SetText((char*)"Pool Gaurdian:\nHa ha ha ..", 1);
			
			DragonSpawn.Speak();

			DragonSpawn.SetPosTile(34, 4);
			Ayli.SetPosTile(34, 2);
			Ayli.StandStill();
			DragonSpawn.StandStill();

			NewScreenSound->Play();

			Location = 58;
		}
		else if (Location == 59)
		{
			Location = 60;
		}
		else if (Location == 60)
		{
			Ayli.SetText((char*)"Ayli:\nCryn, help! I'm sinking!", 1);
			Ayli.SetText((char*)"Cryn:\nAyli! No! .. just hang on!", 2);
			Ayli.SetText((char*)"Ayli:\nCryn.. I can't, I'm sin.. grpplezzzz", 3);
			Ayli.SetText((char*)"Cryn:\nAYLI!!!", 4);
			Ayli.SetText((char*)"Cryn:\nOk ok.. I can do this, I can do this.", 5);
			Ayli.SetText((char*)"Cryn:\n[JUMP!] .. [SPLASH!]", 6);

			Ayli.Speak();
			NewScreenSound->Play();

			Ayli.Die();
			MyPlayer.SetPosTile(34, 3);
			Location = 61;
		}
		else if (Location == 61)
		{
			// Done, going to next level.
			Location = 62;
		}

		Talk();
	}
	else if (Area == BLOODCHAMBER)
	{
		// Blood Chamber Area
		CombatOn = false;
		BloodChamberMap->DrawTrans(Screen->GetBack());

		for (int i=0; i<MAX_BLOOD_CLOTS; i++)
		{
			BloodClots[i]->Move();
			BloodClots[i]->Draw();
		}

		Talk();
	}
	else if (Area == DEMONTOWN)
	{
		// Demon Town Area
		if (MyPlayer.GetTileX() >= 85)
			CombatOn = false;
		else
			CombatOn = true;

		DemonTownMap->DrawTrans(Screen->GetBack());

		TownFolk1.Move();
		TownFolk2.Move();
		TownFolk3.Move();
		TownFolk4.Move();
		TownFolk5.Move();
		Fountain.Move();
		DemonTownBoss.Move();

		TownFolk1.Draw();
		TownFolk2.Draw();
		TownFolk3.Draw();
		TownFolk4.Draw();
		TownFolk5.Draw();
		Fountain.Draw();
		DemonTownBoss.Draw();

//		DrawBlackRain();

		if (Location == 83 && MyPlayer.isFinishedMoving())
		{
			DemonTownBoss.SetText((char*)"Rii:\nGrrr, alright.. you winzz thiz time human. Rii goez back to pesky Narz, but I go alone.", 1);
			DemonTownBoss.SetText((char*)"Cryn:\nI will meet you back with Narz then, but don't make me have to put the smack down on you! (whew)", 2);
			DemonTownBoss.Speak();

			Location = 84;

			DemonTownBoss.SetPosTile(116, 2);
			DemonTownBoss.SetArea(114, 2, 117, 4);
			DemonTownBoss.SetText((char*)"Cryn:\nRemember me, big guy?", 1);
			DemonTownBoss.SetText((char*)"Rii:\nGrrrrowl, Grummmble ..", 2);

			TownFolk5.SetText((char*)"Narz The Ancient:\nI am quite surprised that you returned human. I surely thought my pet, Rii, would have been too much for you. But alas, a deal is a deal.", 1);
			TownFolk5.SetText((char*)"Cryn:\nSo you'll let me enter the dark gate?", 2);
			TownFolk5.SetText((char*)"Narz The Ancient:\nYes, yes, that was the agreement. But I should warn you, the dark gate is no place for a human.", 3);
			TownFolk5.SetText((char*)"Cryn:\nWe'll see about that ..", 4);

			NewScreenSound->Play();
		}

		Talk();
	}
	else if (Area == NETHERWORLD)
	{
		// Nether World Area
		CombatOn = false;
		NetherMap->DrawTrans(Screen->GetBack());

		for (int i=0; i<MAX_MIST_SPOTS; i++)
		{
//			// Make the spots appear around the player.
//			MistSpots[i].SetBoundry(MyPlayer.GetTileX() - 5, MyPlayer.GetTileY() - 5, MyPlayer.GetTileX() + 5, MyPlayer.GetTileY() + 5);
			MistSpots[i].Move();
			MistSpots[i].Draw();
		}

		TownFolk1.Move();
		TownFolk2.Move();
		TownFolk3.Move();
		TownFolk4.Move();
		Neacres.Move();
		Ayli.Move();
		Possession->Move();
		Beorne.Move();

		TownFolk1.Draw();
		TownFolk2.Draw();
		TownFolk3.Draw();
		TownFolk4.Draw();
		Neacres.Draw();
		Ayli.Draw();
		Possession->Draw();
		Beorne.Draw();

		DrawFireDrops();

		Talk();

		if (Location == 91 && Ayli.GetTileX() >= MyPlayer.GetTileX()-1 && Ayli.GetTileX() <= MyPlayer.GetTileX()+1 && Ayli.GetTileY() >= MyPlayer.GetTileY()-1 && Ayli.GetTileY() <= MyPlayer.GetTileY()+1)
		{
			Ayli.Speak();
			Location = 92;
			Ayli.UnFollow(&MyPlayer);
			Ayli.SetText((char*)"Ayli:\nI have nothing more to say to you.", 1);
		}
		else if (Location == 96 && MyPlayer.isFinishedMoving())
		{
			MyPlayer.SetText((char*)"Beorne:\nFinally, it is done. I have slayed the last city guard. Now it is time to complete the sacrifice. I must return to the sacrificial altar.", 1);
			MyPlayer.Speak();
			Location = 97;
		}
		else if (Location == 111 && Ayli.GetTileX() >= MyPlayer.GetTileX()-1 && Ayli.GetTileX() <= MyPlayer.GetTileX()+1 && Ayli.GetTileY() >= MyPlayer.GetTileY()-1 && Ayli.GetTileY() <= MyPlayer.GetTileY()+1)
		{
			Ayli.Speak();
			Location = 112;
			Ayli.SetText((char*)"Ayli:\nBe careful, Cryn.", 1);
		}
		else if (Location == 115)
		{
			Beorne.SetText((char*)"Beorne:\narg... uhhh...", 1);
			Beorne.SetText((char*)"Cryn:\nMy.. own.. brother..", 2);
			Beorne.SetText((char*)"Cryn:\nNo, I will not kill him.", 3);
			Beorne.Speak();

			Location = 116;
		}
		else if (Location == 116)
		{
			Possession->Revive();
			Possession->SetMap(NetherMap);
			Possession->Map2 = NetherMapTop;
			Possession->SetPosTile(19, 8);
			Possession->StandStill();
			Possession->SetAlphaMax(0); // turn off fading
			Possession->SetText((char*)"Possession:\nYou will finish him, Cryn. Think about all the pain he has caused your\nworld. Finish him now, Cryn.", 1);
			Possession->SetText((char*)"Cryn:\nNo. I know my brother is still there, somewhere inside. Even through all he has done, he is still my brother.", 2);
			Possession->SetText((char*)"Possession:\nFinish him, Cryn! Do not let him torment another soul! Put an end to his misery!", 3);
			Possession->SetText((char*)"Cryn:\nNo, I won't kill him!", 4);
			Possession->SetText((char*)"Possession:\nYou fool! Don't you see? It doesn't matter which one of you kills the other so long as one of you dies by the other's hand!", 5);
			Possession->SetText((char*)"Cryn:\nThis is your doing! You poisoned his mind and controlled him all along! You knew in his weakened state that I would beat him and you lead him to his death!", 6);
			Possession->SetText((char*)"Possession:\nYou will kill him, if not by your own free will.. then by mine!", 7);
			Possession->SetText((char*)"[ The possession begins morhping into a huge monster constructed of\nbody parts.. It is the Ultimate Destructor ]", 8);
			
			NewScreenSound->Play();
			Location = 117;
		}
		else if (Location == 117)
		{
			Location = 118; // skip one more frame to draw Possession properly.
		}
		else if (Location == 118)
		{
			Possession->Speak();
			Location = 118;

			// Battle time!
			MyPlayer.Direction = MyPlayer.OppositeDirection(MyPlayer.Direction);
			InCombat = true;
			// Pick battle screen.
			char BattleBmp[1000];
			strcpy(BattleBmp, (char*)"graphics/netherworld.bmp");
			MyBattleEngine.Initialize(Screen, Input, Sound, BattleBmp, (char*)"graphics/frame.bmp", MyPlayer.Level);
			MyBattleEngine.AddPlayer((char*)"Cryn", (char*)"tiles/hero.bmp", MyPlayer.Level, MyPlayer.MaxHP, MyPlayer.HP, MyPlayer.MaxMP, MyPlayer.MP, 0, (char*)"Staff", DAGGER, (char*)"Plate Mail", ARMOR_20);
			MyBattleEngine.bCrystalClearOn = MyPlayer.bCrystalClearOn;
			MyBattleEngine.bBonusAttackOn = MyPlayer.bBonusAttackOn;
			MyBattleEngine.bBoss = true;
			MyBattleEngine.AddMonster((char*)"Ultimate Destructor", (char*)"tiles/possession.bmp", MyPlayer.Level + 5, 600, 0, 8, (char*)"Fist", DAGGER, (char*)"Platemail", ARMOR_45, 0, 0, 0);
			StopMusic();
			StartMusic((char*)"music/BATTLEMU.S3M");
			strcpy(MapMusic, (char*)"music/treetrun.S3M");

			Location = 119;
		}
		else if (Location == 120)
		{
			Possession->SetText((char*)"Possession:\nNOOO! This is not possible! ahhhhh", 1);
			Possession->SetText((char*)"Cryn:\nWithout a host to control, you're nothing but a meaningless parasite. Leave this world, forever!", 2);
			Possession->SetText((char*)"Possession:\nI will return.. one day..\nwhen.. humans are weak.. again..", 3);
			Possession->Speak();
			Possession->Die();
			NewScreenSound->Play();

			Beorne.SetText((char*)"Cryn:\nBeorne ..", 1);
			Beorne.SetText((char*)"Beorne:\nCryn, I.. am.. sorry.. [ dies ]", 2);
			Location = 121;
		}
	}
	else if (Area == DEEPNETHERWORLD)
	{
		// Deep Nether World Area
		CombatOn = true;
		DeepNetherMap->DrawTrans(Screen->GetBack());

		for (int i=0; i<4; i++)
		{
			// Make the spots appear around the player.
			MistSpots[i].SetBoundry(MyPlayer.GetTileX() - 3, MyPlayer.GetTileY() - 3, MyPlayer.GetTileX() + 3, MyPlayer.GetTileY() + 3);
			MistSpots[i].Move();
			MistSpots[i].Draw();
		}

		Eyes->Move();
		Spine->Move();
		Brain->Move();
		Heart->Move();
		Fountain.Move();
		Possession->Move();

		Fountain.Draw();
		Eyes->Draw();
		Spine->Draw();
		Brain->Draw();
		Heart->Draw();
		Possession->Draw();
		
		DrawFogOfWar();

		if (Location == 104)
		{
			MyPlayer.SetText((char*)"Beorne:\nFinally, it is done. You hear me, Possession? I'm done doing your dirty\nwork! Come and claim your organs.", 1);
			MyPlayer.Speak();
			Location = 105;
		}
		else if (Location == 105)
		{
			Possession->Revive();
			Possession->SetMap(DeepNetherMap);
			Possession->Map2 = DeepNetherMapTop;
			Possession->SetPosTile(126, 18);
			Possession->StandStill();

			NewScreenSound->Play();
			Location = 106;
		}

		Talk();
	}


	if (InCombat)
	{
		DoCombatFrames();
	}
	else
	{
		// Not in combat, so let player walk around.
		MyPlayer.Move();
		MyPlayer.Draw();

		if (Area == TREE || Area == TREETRUNK /*|| Area == TREETRUNKFINAL*/)
			DrawFallingLeaf();

		if (Area == FORESTCAMP && (MyPlayer.GetTileX() > 37 || MyPlayer.GetTileY() > 18))
			DrawClouds();

		// Draw hidden walkable bushes in forest area.
		if (Location < 10)
			ForestMapTop->DrawTrans(Screen->GetBack());

		if (Area == DEMONPIT)
			DemonPitMapTop->DrawTrans(Screen->GetBack());

		if (!COMBAT_OFF)
		if (Area != TREETRUNK)
		if (CombatOn && MyPlayer.isFinishedMoving())
		{
			DoEngageCombat();
		}
				
		// Check for special locations.
		if (Area == SWAMP && /*Location < 10 &&*/ MyPlayer.GetTileX() == 16 && MyPlayer.GetTileY() == 26)
		{
			// Entering The Forest.
			Area = FOREST;
		}
		else if (Area == FOREST && /*Location < 10 &&*/ MyPlayer.GetTileX() == 16 && MyPlayer.GetTileY() == 27)
		{
			// Entering The Swamp.
			Area = SWAMP;
			King.Die();
		}
		else if (/*Location < 10*/Area == SWAMP && MyPlayer.GetTileX() == 19 && MyPlayer.GetTileY() == 37 && MyPlayer.isFinishedMoving())
		{
			if (!MyPlayer.bBonusAttackOn)
			{
				CInfoBox MyBox(Screen, Input, Sound, 2);
				MyBox.Display2((char*)"Beorne:\nOh, you think you can go in the caves, do you Cryn? You wouldn't survive a minute down there. I wonder where that Lineer monster is?");
			}
			else
			{
				// Entering The Swamp Cave.
				StopMusic();
				
				// Clear out character map array.
				ClearArray();

				Screen->GetBack()->Fill(0);
				Screen->FadeToBlack(600);
				CMessage MyMessage;
				MyMessage.NewText(Screen->GetFront(), (char*)"Entering the Swamp Cave");
				MyMessage.Draw();
				Sleep(1000);
				
				// Begin drawing new screen.
				MyPlayer.Map = SwampCaveMap;
				MyPlayer.Map2 = SwampCaveMapTop;
				MyPlayer.SetPosTile(0, 19);
				Beorne.Map = SwampCaveMap;
				Beorne.Map2 = SwampCaveMapTop;
				Beorne.SetPosTile(2, 20);
				Fountain.Map = SwampCaveMap;
				Fountain.Map2 = SwampCaveMapTop;
				Fountain.SetPosTile(41, 20);
				Fountain.SetArea(41, 20, 41, 20);
				
				SwampCaveMap->MoveTo(0, 14*40);
				SwampCaveMapTop->MoveTo(0, 14*40);
				
				SwampCaveMap->DrawTrans(Screen->GetBack());
				MyPlayer.Draw();
				Beorne.Draw();
				Screen->FadeToSource(1500);
				Area = SWAMPCAVE;
				CombatOn = true;
				
				StartMusic((char*)"music/dungeon1.s3m");
				
				NewScreenSound->Play();
				
				if (Location < 10)
				{
					Beorne.SetText((char*)"Beorne:\nCryn, keep your eyes open. There is no telling what monsters have taken\nhaven in these caves.", 1);
					Beorne.SetText((char*)"", 2);
					Beorne.SetText((char*)"", 3);
					Beorne.Speak();
					Location = 10;
				}
			}
		}
		else if (Area == SWAMPCAVE && MyPlayer.GetTileX() == 0 && MyPlayer.GetTileY() == 19 && MyPlayer.isFinishedMoving())
		{
			// Entering The Forest again, guess it was too tough down there.
			StopMusic();
			
			// Clear out character map array.
			ClearArray();
			
			Screen->GetBack()->Fill(0);
			Screen->FadeToBlack(600);
			CMessage MyMessage;
			MyMessage.NewText(Screen->GetFront(), (char*)"Entering the Forest");
			MyMessage.Draw();
			Sleep(1000);
			
			// Begin drawing new screen.
			MyPlayer.Map = ForestMap;
			MyPlayer.Map2 = ForestMapTop;
			MyPlayer.SetPosTile(19, 37);
			Beorne.Map = ForestMap;
			Beorne.Map2 = ForestMapTop;
			Beorne.SetPosTile(18, 37);
			Fountain.Map = ForestMap;
			Fountain.Map2 = ForestMapTop;
			Fountain.SetPosTile(9, 36);
			Fountain.SetArea(9, 36, 9, 36);
			
			ForestMap->MoveTo(8*40, 30*40);
			ForestMapTop->MoveTo(8*40, 30*40);
			
			ForestMap->DrawTrans(Screen->GetBack());
			MyPlayer.Draw();
			Beorne.Draw();
			Screen->FadeToSource(1500);
			//Location = 9;
			Area = SWAMP;
			CombatOn = true;
			
			StartMusic((char*)"music/forestmu.s3m");
		}
		else if (/*Location < 15*/Area == SWAMPCAVE && MyPlayer.GetTileX() == 79 && MyPlayer.GetTileY() == 19 && MyPlayer.isFinishedMoving())
		{
			// Entering The Forest again at new location closer to tree.
			StopMusic();
			
			// Clear out character map array.
			ClearArray();

			Screen->GetBack()->Fill(0);
			Screen->FadeToBlack(600);
			CMessage MyMessage;
			MyMessage.NewText(Screen->GetFront(), (char*)"Entering the Forest");
			MyMessage.Draw();
			Sleep(1000);
			
			// Begin drawing new screen.
			MyPlayer.Map = ForestMap;
			MyPlayer.Map2 = ForestMapTop;
			MyPlayer.SetPosTile(24, 34);
			ForestMap->MoveTo(15*40, 27*40);
			ForestMapTop->MoveTo(15*40, 27*40);
			Beorne.Map = ForestMap;
			Beorne.Map2 = ForestMapTop;
			Beorne.SetPosTile(25, 34);
			Fountain.Map = ForestMap;
			Fountain.Map2 = ForestMapTop;
			Fountain.SetPosTile(9, 36);
			Fountain.SetArea(9, 36, 9, 36);
			
			ForestMap->DrawTrans(Screen->GetBack());
			MyPlayer.Draw();
			Beorne.Draw();
			//ForestMap->DrawTrans(Screen->GetBack());
			Screen->FadeToSource(1500);
			if (Location < 15)
				Location = 15;
			Area = FOREST;
			CombatOn = true;
			
			StartMusic((char*)"music/forestmu.s3m");
		}
		else if (/*Location == 15*/Area == FOREST && MyPlayer.GetTileX() == 24 && MyPlayer.GetTileY() == 34 && MyPlayer.isFinishedMoving())
		{
			// Entering The Swamp Cave at exit location.
			StopMusic();
			
			// Clear out character map array.
			ClearArray();
			
			Screen->GetBack()->Fill(0);
			Screen->FadeToBlack(600);
			CMessage MyMessage;
			MyMessage.NewText(Screen->GetFront(), (char*)"Entering the Swamp Cave");
			MyMessage.Draw();
			Sleep(1000);
			
			// Begin drawing new screen.
			MyPlayer.Map = SwampCaveMap;
			MyPlayer.Map2 = SwampCaveMapTop;
			MyPlayer.SetPosTile(79, 19);
			Beorne.Map = SwampCaveMap;
			Beorne.Map2 = SwampCaveMapTop;
			Beorne.SetPosTile(78, 19);
			Fountain.Map = SwampCaveMap;
			Fountain.Map2 = SwampCaveMapTop;
			Fountain.SetPosTile(41, 20);
			Fountain.SetArea(41, 20, 41, 20);
			
			SwampCaveMap->MoveTo(64*40, 13*40);
			SwampCaveMapTop->MoveTo(64*40, 13*40);
			
			SwampCaveMap->DrawTrans(Screen->GetBack());
			MyPlayer.Draw();
			Beorne.Draw();
			Screen->FadeToSource(1500);
			if (Location < 10)
				Location = 10;
			Area = SWAMPCAVE;
			CombatOn = true;
			
			StartMusic((char*)"music/dungeon1.s3m");
		}
		else if (/*Location == 15*/Area == FOREST && MyPlayer.GetTileX() == 79 && MyPlayer.GetTileY() == 37 && MyPlayer.isFinishedMoving())
		{
			// Entering The Tree.
			StopMusic();
			
			// Clear out character map array.
			ClearArray();
			
			Screen->GetBack()->Fill(0);
			Screen->FadeToBlack(600);
			CMessage MyMessage;
			MyMessage.NewText(Screen->GetFront(), (char*)"Entering the Ancient Tree");
			MyMessage.Draw();
			Sleep(1000);
			
			// Begin drawing new screen.
			MyPlayer.Map = TreeMap;
			MyPlayer.Map2 = TreeMapTop;
			MyPlayer.SetPosTile(35, 0);
			Beorne.Map = TreeMap;
			Beorne.Map2 = TreeMapTop;
			Beorne.SetPosTile(34, 1);
			Fountain.Map = TreeMap;
			Fountain.Map2 = TreeMapTop;
			Fountain.SetPosTile(35, 16);
			Fountain.SetArea(35, 16, 35, 16);
			
			TreeMap->MoveTo(28*40, 0);
			TreeMapTop->MoveTo(28*40, 0);
			
			TreeMap->DrawTrans(Screen->GetBack());
			MyPlayer.Draw();
			Beorne.Draw();
			Screen->FadeToSource(1500);
			if (Location < 20)
				Location = 20;
			Area = TREE;
			CombatOn = true;

			StartMusic((char*)"music/insect.s3m");
		}
		else if (/*Location < 25*/Area == TREE && MyPlayer.GetTileX() == 35 && MyPlayer.GetTileY() == 0 && MyPlayer.isFinishedMoving())
		{
			// Entering The Forest again just outside tree.
			StopMusic();
			
			// Clear out character map array.
			ClearArray();

			Screen->GetBack()->Fill(0);
			Screen->FadeToBlack(600);
			CMessage MyMessage;
			MyMessage.NewText(Screen->GetFront(), (char*)"Entering the Forest");
			MyMessage.Draw();
			Sleep(1000);
			
			// Begin drawing new screen.
			MyPlayer.Map = ForestMap;
			MyPlayer.Map2 = ForestMapTop;
			MyPlayer.SetPosTile(79, 37);
			ForestMap->MoveTo(65*40, 30*40);
			ForestMapTop->MoveTo(65*40, 30*40);
			Beorne.Map = ForestMap;
			Beorne.Map2 = ForestMapTop;
			Beorne.SetPosTile(78, 37);
			Fountain.Map = ForestMap;
			Fountain.Map2 = ForestMapTop;
			Fountain.SetPosTile(9, 36);
			Fountain.SetArea(9, 36, 9, 36);
			
			ForestMap->DrawTrans(Screen->GetBack());
			MyPlayer.Draw();
			Beorne.Draw();
			//ForestMap->DrawTrans(Screen->GetBack());
			Screen->FadeToSource(1500);
			if (Location < 15)
				Location = 15;
			Area = FOREST;
			CombatOn = true;
			
			StartMusic((char*)"music/forestmu.s3m");
		}
		else if (/*Location < 25*/Area == TREE && MyPlayer.GetTileX() == 3 && MyPlayer.GetTileY() == 0 && MyPlayer.isFinishedMoving())
		{
			// Entering tree hole at top left position.
			// Wrong hole, so back to start position in tree.
			Screen->GetBack()->Fill(0);
			Screen->FadeToBlack(600);
			CMessage MyMessage;
			MyMessage.NewText(Screen->GetFront(), (char*)"Entering Tree Root");
			MyMessage.Draw();
			Sleep(1000);
			
			MyPlayer.SetPosTile(35, 0);
			Beorne.SetPosTile(34, 1);

			TreeMap->MoveTo(28*40, 0);
			TreeMapTop->MoveTo(28*40, 0);
			
			TreeMap->DrawTrans(Screen->GetBack());
			MyPlayer.Draw();
			Beorne.Draw();
			Screen->FadeToSource(1500);
			NewScreenSound->Play();
		}
		else if (/*Location < 25*/Area == TREE && MyPlayer.GetTileX() == 0 && MyPlayer.GetTileY() == 33 && MyPlayer.isFinishedMoving())
		{
			// Entering tree hole at bottom left position.
			// Wrong hole, so back to start position in tree.
			Screen->GetBack()->Fill(0);
			Screen->FadeToBlack(600);
			CMessage MyMessage;
			MyMessage.NewText(Screen->GetFront(), (char*)"Entering Tree Root");
			MyMessage.Draw();
			Sleep(1000);
			
			MyPlayer.SetPosTile(35, 0);
			Beorne.SetPosTile(34, 1);

			TreeMap->MoveTo(28*40, 0);
			TreeMapTop->MoveTo(28*40, 0);
			
			TreeMap->DrawTrans(Screen->GetBack());
			MyPlayer.Draw();
			Beorne.Draw();
			Screen->FadeToSource(1500);
			NewScreenSound->Play();
		}
		else if (/*Location < 25*/Area == TREE && MyPlayer.GetTileX() == 75 && MyPlayer.GetTileY() == 38 && MyPlayer.isFinishedMoving())
		{
			// Entering tree hole at bottom right position.
			// Wrong hole, so back to start position in tree.
			Screen->GetBack()->Fill(0);
			Screen->FadeToBlack(600);
			CMessage MyMessage;
			MyMessage.NewText(Screen->GetFront(), (char*)"Entering Tree Root");
			MyMessage.Draw();
			Sleep(1000);
			
			MyPlayer.SetPosTile(35, 0);
			Beorne.SetPosTile(34, 1);

			TreeMap->MoveTo(28*40, 0);
			TreeMapTop->MoveTo(28*40, 0);
			
			TreeMap->DrawTrans(Screen->GetBack());
			MyPlayer.Draw();
			Beorne.Draw();
			Screen->FadeToSource(1500);
			NewScreenSound->Play();
		}
		else if (/*Location < 25*/Area == TREE && MyPlayer.GetTileX() == 24 && MyPlayer.GetTileY() == 37 && MyPlayer.isFinishedMoving())
		{
			// Entering tree hole at center/left position.
			// Wrong hole, so back to start position in tree.
			Screen->GetBack()->Fill(0);
			Screen->FadeToBlack(600);
			CMessage MyMessage;
			MyMessage.NewText(Screen->GetFront(), (char*)"Entering Tree Root");
			MyMessage.Draw();
			Sleep(1000);
			
			MyPlayer.SetPosTile(35, 0);
			Beorne.SetPosTile(34, 1);

			TreeMap->MoveTo(28*40, 0);
			TreeMapTop->MoveTo(28*40, 0);
			
			TreeMap->DrawTrans(Screen->GetBack());
			MyPlayer.Draw();
			Beorne.Draw();
			Screen->FadeToSource(1500);
			NewScreenSound->Play();
		}
		else if (/*Location < 25*/Area == TREE && MyPlayer.GetTileX() == 76 && MyPlayer.GetTileY() == 0 && MyPlayer.isFinishedMoving())
		{
			// Entering tree hole at top right position.
			// Right hole, so moving on!
			Screen->GetBack()->Fill(0);
			Screen->FadeToBlack(600);
			CMessage MyMessage;
			MyMessage.NewText(Screen->GetFront(), (char*)"Entering Tree Root");
			MyMessage.Draw();
			Sleep(1000);
			
			MyPlayer.SetPosTile(69, 15);
			Beorne.SetPosTile(68, 15);

			TreeMap->MoveTo(62*40, 8*40);
			TreeMapTop->MoveTo(62*40, 8*40);
			
			TreeMap->DrawTrans(Screen->GetBack());
			MyPlayer.Draw();
			Beorne.Draw();
			Screen->FadeToSource(1500);
			NewScreenSound->Play();
		}
		else if (/*Location < 25*/Area == TREE && MyPlayer.GetTileX() == 47 && MyPlayer.GetTileY() == 15 && MyPlayer.isFinishedMoving())
		{
			// Entering tree hole at middle right position.
			// Right hole, so moving on!
			Screen->GetBack()->Fill(0);
			Screen->FadeToBlack(600);
			CMessage MyMessage;
			MyMessage.NewText(Screen->GetFront(), (char*)"Entering Tree Root");
			MyMessage.Draw();
			Sleep(1000);
			
			MyPlayer.SetPosTile(10, 14);
			Beorne.SetPosTile(11, 14);

			TreeMap->MoveTo(4*40, 9*40);
			TreeMapTop->MoveTo(4*40, 9*40);
			
			TreeMap->DrawTrans(Screen->GetBack());
			MyPlayer.Draw();
			Beorne.Draw();
			Screen->FadeToSource(1500);
			NewScreenSound->Play();
		}
		else if (/*Location < 25*/Area == TREE && MyPlayer.GetTileX() == 25 && MyPlayer.GetTileY() == 14 && MyPlayer.isFinishedMoving())
		{
			// Entering tree hole at middle left position.
			// Right hole, so moving on!
			Screen->GetBack()->Fill(0);
			Screen->FadeToBlack(600);
			CMessage MyMessage;
			MyMessage.NewText(Screen->GetFront(), (char*)"Entering Tree Root");
			MyMessage.Draw();
			Sleep(1000);
			
			MyPlayer.SetPosTile(35, 20);
			Beorne.SetPosTile(35, 21);

			TreeMap->MoveTo(30*40, 15*40);
			TreeMapTop->MoveTo(30*40, 15*40);
			
			TreeMap->DrawTrans(Screen->GetBack());
			MyPlayer.Draw();
			Beorne.Draw();
			Screen->FadeToSource(1500);
			NewScreenSound->Play();
		}
		else if (/*Location < 25*/Area == TREE && MyPlayer.GetTileX() == 49 && MyPlayer.GetTileY() == 38 && MyPlayer.isFinishedMoving())
		{
			// Entering The Tree Trunk.
			StopMusic();
			
			// Clear out character map array.
			ClearArray();

			Screen->GetBack()->Fill(0);
			Screen->FadeToBlack(600);
			CMessage MyMessage;
			MyMessage.NewText(Screen->GetFront(), (char*)"Entering The Tree Trunk");
			MyMessage.Draw();
			Sleep(1000);

			MyPlayer.Map = TreeTrunkMap;
			MyPlayer.Map2 = TreeTrunkMapTop;
			Beorne.Map = TreeTrunkMap;
			Beorne.Map2 = TreeTrunkMapTop;
			Fountain.Map = TreeTrunkMap;
			Fountain.Map2 = TreeTrunkMapTop;
			Fountain.SetPosTile(2, 5);
			Fountain.SetArea(2, 5, 2, 5);
			
			MyPlayer.SetPosTile(13, 14);
			Beorne.SetPosTile(11, 6);
			TreeBoss.Revive();
			TreeBoss.SetPosTile(13, 0);

			TreeTrunkMap->MoveTo(6*40, 3*40);
			TreeTrunkMapTop->MoveTo(6*40, 3*40);
			
			TreeTrunkMap->DrawTrans(Screen->GetBack());
			MyPlayer.Draw();
			Beorne.Draw();
			Screen->FadeToSource(1500);
			
			if (Location < 25)
				Location = 25;

			Area = TREETRUNK;
			CombatOn = false;
			
			StartMusic((char*)"music/treetrun.s3m");

			NewScreenSound->Play();
		}
		else if (Area == TREETRUNK && MyPlayer.GetTileX() == 13 && MyPlayer.GetTileY() == 14 && MyPlayer.isFinishedMoving())
		{
			// Returning to the Tree from the trunk, guess it was too hard?
			StopMusic();
			
			// Clear out character map array.
			ClearArray();
			
			Screen->GetBack()->Fill(0);
			Screen->FadeToBlack(600);
			CMessage MyMessage;
			MyMessage.NewText(Screen->GetFront(), (char*)"Entering a Tree Root");
			MyMessage.Draw();
			Sleep(1000);
			
			// Begin drawing new screen.
			MyPlayer.Map = TreeMap;
			MyPlayer.Map2 = TreeMapTop;
			MyPlayer.ResetBorders();
			Beorne.ResetBorders();
			MyPlayer.SetPosTile(49, 38);
			Beorne.Map = TreeMap;
			Beorne.Map2 = TreeMapTop;
			Beorne.SetPosTile(48, 38);
			Fountain.Map = TreeMap;
			Fountain.Map2 = TreeMapTop;
			Fountain.SetPosTile(35, 16);
			Fountain.SetArea(35, 16, 35, 16);
			TreeBoss.Die();
			
			TreeMap->MoveTo(35*40, 28*40);
			TreeMapTop->MoveTo(35*40, 28*40);
			
			TreeMap->DrawTrans(Screen->GetBack());
			MyPlayer.Draw();
			Beorne.Draw();
			Screen->FadeToSource(1500);
			Area = TREE;
			CombatOn = false;

			StartMusic((char*)"music/insect.s3m");
		}
		else if (Area == DEMONPIT && MyPlayer.GetTileX() == 5 && MyPlayer.GetTileY() == 19 && MyPlayer.isFinishedMoving())
		{
			// Entering The Forest Camp.
			StopMusic();
			
			// Clear out character map array.
			ClearArray();
			
			Screen->GetBack()->Fill(0);
			Screen->FadeToBlack(600);
			CMessage MyMessage;
			MyMessage.NewText(Screen->GetFront(), (char*)"Entering the Tainted Forest");
			MyMessage.Draw();
			Sleep(1000);
			
			// Begin drawing new screen.
			MyPlayer.Map = ForestCampMap;
			MyPlayer.Map2 = ForestCampMapTop;
			Ayli.Map = ForestCampMap;
			Ayli.Map2 = ForestCampMapTop;
			
			MyPlayer.SetPosTile(37, 39);
			MyPlayer.ResetBorders();

			if (Location < 55)
			{
				Ayli.SetPosTile(37, 40);
				Ayli.ResetBorders();
			}

			BossDemon.Die();

			Fountain.Map = ForestCampMap;
			Fountain.Map2 = ForestCampMapTop;
			Fountain.SetPosTile(20, 16);
			Fountain.SetArea(20, 16, 20, 16);
			
			ForestCampMap->MoveTo(32*40, 30*40);
			ForestCampMapTop->MoveTo(32*40, 30*40);
			
			ForestCampMap->DrawTrans(Screen->GetBack());
			MyPlayer.Draw();
			Ayli.Draw();
			Screen->FadeToSource(1500);
			CombatOn = true;
			
			Area = FORESTCAMP;
			
			StartMusic((char*)"music/burnswoo.s3m");
		}
		else if (Area == FORESTCAMP && MyPlayer.GetTileX() == 37 && MyPlayer.GetTileY() == 41 && MyPlayer.isFinishedMoving())
		{
			// Entering the demon pit under the earth.
			if (Location < 49)
			{
				MyPlayer.SetText((char*)"Ayli:\nYou know Cryn.. this could get a bit dangerous down there.", 1);
				MyPlayer.SetText((char*)"Cryn:\nI'm not afraid, I have a score to settle.", 2);
				MyPlayer.SetText((char*)"Ayli:\nhm ..", 3);
				MyPlayer.Speak();
				Location = 49;
			}

			StopMusic();
			
			// Clear out character map array.
			ClearArray();
			
			Screen->GetBack()->Fill(0);
			Screen->FadeToBlack(600);
			CMessage MyMessage;
			MyMessage.NewText(Screen->GetFront(), (char*)"Entering the Demon Pit");
			MyMessage.Draw();
			Sleep(1000);
			
			// Begin drawing new screen.
			MyPlayer.Map = DemonPitMap;
			MyPlayer.Map2 = DemonPitMapTop;
			MyPlayer.ResetBorders();
			MyPlayer.SetPosTile(6, 19);

			Ayli.ResetBorders();
			Ayli.Map = DemonPitMap;
			Ayli.Map2 = DemonPitMapTop;

			if (Location < 55)
			{
				Ayli.SetPosTile(5, 19);
			}

			Fountain.Map = DemonPitMap;
			Fountain.Map2 = DemonPitMapTop;
			Fountain.SetPosTile(20, 19);
			Fountain.SetArea(20, 19, 20, 20);
			Fountain.isAnimated = true;

			for (int i=0; i<MAX_DEMON_SOLDIERS; i++)
			{
				if (DemonSoldiers[i] != NULL)
					DemonSoldiers[i]->Die();
			}

			// He will guard the first statue CAST exit.
			HenchDemon.Revive();
			HenchDemon.Map = DemonPitMap;
			HenchDemon.Map2 = DemonPitMapTop;
			HenchDemon.SetPosTile(15, 29);
			HenchDemon.SetArea(15, 29, 16, 29);
			HenchDemon.SetText((char*)"Major Demon:\nHa ha ha.. I figured you would come this way human. This is the perfect place for you to die.", 1);

			DemonStatues[0]->SetPosTile(32, 9);
			DemonStatues[0]->SetText((char*)"Cryn:\nStrange, it looks like some kind of demon statue. It looks like its wing is some kind of lever.", 1); 
			DemonStatues[0]->SetText((char*)"Ayli:\nWell, only one thing to do then, pull its wing.", 2);
			DemonStatues[0]->SetText((char*)"Cryn:\nOk, here goes. [CLICK]", 3);
			DemonStatues[0]->SetText((char*)"Demon Statue:\nThe bones are broken, to stop the flood.\nOne to cast, and two for blood.", 4);
			DemonStatues[0]->SetText((char*)"Cryn:\nUh ok. I was afraid he would say something like that.", 5);
			DemonStatues[0]->SetText((char*)"Ayli:\nCome on Cryn, it is some kind of riddle. Lets look around and see what we can find.", 6);
			DemonStatues[0]->Revive();

			DemonStatues[1]->SetPosTile(9, 28); 
			DemonStatues[1]->SetText((char*)"Demon Statue:\nCAST", 1);
			DemonStatues[1]->Revive();

			DemonStatues[2]->SetText((char*)"Demon Statue:\nBLOOD", 1); 
			DemonStatues[2]->SetPosTile(67, 27);
			DemonStatues[2]->Revive();

			for (int i=0; i<3; i++)
			{
				DemonStatues[i]->SetCharacterMap(&MyNPCCharacterMapStruct);
				MyNPCCharacterMapStruct.CharacterMap[DemonStatues[i]->GetTileX()][DemonStatues[i]->GetTileY()] = 1;
				DemonStatues[i]->SetArea(DemonStatues[i]->GetTileX(), DemonStatues[i]->GetTileY(), DemonStatues[i]->GetTileX(), DemonStatues[i]->GetTileY());
				DemonStatues[i]->isAnimated = true;
			}

			Neacres.Die();

			if (Location >= 54)
			{
				BoneBarriers[0]->Die();
				BoneBarriers[1]->Die();
			}
			else
			{
				BoneBarriers[0]->Revive();
				BoneBarriers[1]->Revive();
				BoneBarriers[0]->SetPosTile(32, 7);
				BoneBarriers[1]->SetPosTile(33, 7);
			}

			if (Location < 59)
				DragonSpawn.Revive();
			
			if (Location == 55)
			{
				DragonSpawn.SetPosTile(52, 1);
				Ayli.UnFollow(&MyPlayer);
				Ayli.SetPosTile(51, 1);
				Ayli.StandStill();
				Ayli.Revive();
				DragonSpawn.StandStill();
				
				DragonSpawn.SetText((char*)"Cryn:\nAyli!", 1);
				DragonSpawn.SetText((char*)"Ayli:\nCryn, HELP!", 2);
				DragonSpawn.SetText((char*)"Pool Gaurdian:\nHa ha ha, one way or another, you're coming with me.", 3);
			}
			else if (Location == 56)
			{
				DragonSpawn.SetPosTile(46, 1);
				Ayli.SetPosTile(45, 1);
				Ayli.StandStill();
				Ayli.Revive();
				DragonSpawn.StandStill();
			}
			else if (Location == 57)
			{
				DragonSpawn.SetText((char*)"Pool Gaurdian:\nHa ha ha ..", 1);
				DragonSpawn.SetText((char*)"Ayli:\nAHHHH!", 2);
				DragonSpawn.SetText((char*)"Cryn:\nAyli, I'm coming!", 3);
				DragonSpawn.SetPosTile(44, 4);
				Ayli.SetPosTile(44, 5);
				Ayli.StandStill();
				Ayli.Revive();
				DragonSpawn.StandStill();
			}
			else if (Location == 58 || Location == 59 || Location == 60)
			{
				
				DragonSpawn.SetText((char*)"Pool Gaurdian:\nHa ha ha ..", 1);
				DragonSpawn.SetPosTile(34, 4);
				Ayli.SetPosTile(34, 2);
				Ayli.StandStill();
				Ayli.Revive();
				DragonSpawn.StandStill();
			}

			DemonPitMap->MoveTo(0*40, 13*40);
			DemonPitMapTop->MoveTo(0*40, 13*40);
			
			DemonPitMap->DrawTrans(Screen->GetBack());
			MyPlayer.Draw();
			Ayli.Draw();
			Screen->FadeToSource(1500);
			Area = DEMONPIT;
			CombatOn = true;

			SaveGame();

			StartMusic((char*)"music/demonpit.s3m");
		}
		else if (Area == DEMONPIT && MyPlayer.GetTileX() == 2 && MyPlayer.GetTileY() == 56 && MyPlayer.isFinishedMoving())
		{
			// Entering mini blood pool.
			Screen->GetBack()->Fill(0);
			Screen->FadeToBlack(600);
			CMessage MyMessage;
			MyMessage.NewText(Screen->GetFront(), (char*)"Entering Blood Pool");
			MyMessage.Draw();
			Sleep(1000);
			
			MyPlayer.SetPosTile(4, 29);
			Ayli.SetPosTile(3, 29);

			DemonPitMap->MoveTo(0*40, 23*40);
			DemonPitMapTop->MoveTo(0*40, 23*40);
			
			DemonPitMap->DrawTrans(Screen->GetBack());
			DemonPitMapTop->DrawTrans(Screen->GetBack());
			MyPlayer.Draw();
			Ayli.Draw();
			Screen->FadeToSource(1500);
			NewScreenSound->Play();
		}
		else if (Area == DEMONPIT && MyPlayer.GetTileX() == 16 && MyPlayer.GetTileY() == 29 && MyPlayer.isFinishedMoving())
		{
			// Entering mini blood pool.
			Screen->GetBack()->Fill(0);
			Screen->FadeToBlack(600);
			CMessage MyMessage;
			MyMessage.NewText(Screen->GetFront(), (char*)"Entering Blood Pool");
			MyMessage.Draw();
			Sleep(1000);

			if (Location >= 52)
			{
				// Used statue, ok to continue.
				MyPlayer.SetPosTile(60, 18);
				Ayli.SetPosTile(61, 18);
				
				DemonPitMap->MoveTo(52*40, 12*40);
				DemonPitMapTop->MoveTo(52*40, 12*40);
			}
			else
			{
				MyPlayer.SetPosTile(61, 35);
				Ayli.SetPosTile(60, 35);
				
				DemonPitMap->MoveTo(54*40, 28*40);
				DemonPitMapTop->MoveTo(54*40, 28*40);
			}

			if (Location <= 52)
				HenchDemon.Revive();

			DemonPitMap->DrawTrans(Screen->GetBack());
			DemonPitMapTop->DrawTrans(Screen->GetBack());
			MyPlayer.Draw();
			Ayli.Draw();
			Screen->FadeToSource(1500);
			NewScreenSound->Play();
		}
		else if (Area == DEMONPIT && MyPlayer.GetTileX() == 18 && MyPlayer.GetTileY() == 56 && MyPlayer.isFinishedMoving())
		{
			// Entering wrong mini blood pool.
			Screen->GetBack()->Fill(0);
			Screen->FadeToBlack(600);
			CMessage MyMessage;
			MyMessage.NewText(Screen->GetFront(), (char*)"Entering Blood Pool");
			MyMessage.Draw();
			Sleep(1000);
			
			MyPlayer.SetPosTile(61, 35);
			Ayli.SetPosTile(60, 35);

			DemonPitMap->MoveTo(54*40, 28*40);
			DemonPitMapTop->MoveTo(54*40, 28*40);
			
			DemonPitMap->DrawTrans(Screen->GetBack());
			DemonPitMapTop->DrawTrans(Screen->GetBack());
			MyPlayer.Draw();
			Ayli.Draw();
			Screen->FadeToSource(1500);
			NewScreenSound->Play();
		}
		else if (Area == DEMONPIT && MyPlayer.GetTileX() == 56 && MyPlayer.GetTileY() == 56 && MyPlayer.isFinishedMoving())
		{
			// Entering wrong mini blood pool.
			Screen->GetBack()->Fill(0);
			Screen->FadeToBlack(600);
			CMessage MyMessage;
			MyMessage.NewText(Screen->GetFront(), (char*)"Entering Blood Pool");
			MyMessage.Draw();
			Sleep(1000);
			
			MyPlayer.SetPosTile(61, 35);
			Ayli.SetPosTile(60, 35);

			DemonPitMap->MoveTo(54*40, 28*40);
			DemonPitMapTop->MoveTo(54*40, 28*40);
			
			DemonPitMap->DrawTrans(Screen->GetBack());
			DemonPitMapTop->DrawTrans(Screen->GetBack());
			MyPlayer.Draw();
			Ayli.Draw();
			Screen->FadeToSource(1500);
			NewScreenSound->Play();
		}
		else if (Area == DEMONPIT && ((MyPlayer.GetTileX() == 71 && MyPlayer.GetTileY() == 35 && MyPlayer.isFinishedMoving()) ||
									  (MyPlayer.GetTileX() == 74 && MyPlayer.GetTileY() == 28 && MyPlayer.isFinishedMoving())))
		{
			// Entering wrong mini blood pool.
			Screen->GetBack()->Fill(0);
			Screen->FadeToBlack(600);
			CMessage MyMessage;
			MyMessage.NewText(Screen->GetFront(), (char*)"Entering Blood Pool");
			MyMessage.Draw();
			Sleep(1000);
			
			MyPlayer.SetPosTile(6, 19);
			Ayli.SetPosTile(5, 19);

			DemonPitMap->MoveTo(0*40, 13*40);
			DemonPitMapTop->MoveTo(0*40, 13*40);
			
			DemonPitMap->DrawTrans(Screen->GetBack());
			DemonPitMapTop->DrawTrans(Screen->GetBack());
			MyPlayer.Draw();
			Ayli.Draw();
			Screen->FadeToSource(1500);
			NewScreenSound->Play();
		}
		else if (Area == DEMONPIT && MyPlayer.GetTileX() == 78 && MyPlayer.GetTileY() == 48 && MyPlayer.isFinishedMoving())
		{
			// Entering mini blood pool.
			Screen->GetBack()->Fill(0);
			Screen->FadeToBlack(600);
			CMessage MyMessage;
			MyMessage.NewText(Screen->GetFront(), (char*)"Entering Blood Pool");
			MyMessage.Draw();
			Sleep(1000);
			
			MyPlayer.SetPosTile(61, 28);
			Ayli.SetPosTile(60, 28);

			DemonPitMap->MoveTo(55*40, 23*40);
			DemonPitMapTop->MoveTo(55*40, 23*40);
			
			DemonPitMap->DrawTrans(Screen->GetBack());
			DemonPitMapTop->DrawTrans(Screen->GetBack());
			MyPlayer.Draw();
			Ayli.Draw();
			Screen->FadeToSource(1500);
			NewScreenSound->Play();
		}
		else if (Area == DEMONPIT && MyPlayer.GetTileX() == 74 && MyPlayer.GetTileY() == 28 && MyPlayer.isFinishedMoving())
		{
			// Entering final mini blood pool.
			Screen->GetBack()->Fill(0);
			Screen->FadeToBlack(600);
			CMessage MyMessage;
			MyMessage.NewText(Screen->GetFront(), (char*)"Entering Blood Pool");
			MyMessage.Draw();
			Sleep(1000);
			
			MyPlayer.SetPosTile(61, 28);
			Ayli.SetPosTile(60, 28);

			DemonPitMap->MoveTo(55*40, 23*40);
			DemonPitMapTop->MoveTo(55*40, 23*40);
			
			DemonPitMap->DrawTrans(Screen->GetBack());
			DemonPitMapTop->DrawTrans(Screen->GetBack());
			MyPlayer.Draw();
			Ayli.Draw();
			Screen->FadeToSource(1500);
			NewScreenSound->Play();
		}
		else if (Area == DEMONPIT && Location == 62)
		{
			// Entering the Blood Pool Chamber
			StopMusic();
			
			// Clear out character map array.
			ClearArray();
			
			Ayli.Die();
			Ayli.UnFollow(&MyPlayer);
			DragonSpawn.Die();
			Fountain.Die();
			HenchDemon.Die();

			Screen->GetBack()->Fill(0);
			Screen->FadeToBlack(600);
			CMessage MyMessage;
			MyMessage.NewText(Screen->GetFront(), (char*)"Entering the Blood Pool Chamber");
			MyMessage.Draw();
			Sleep(1000);
			
			// Begin drawing new screen.
			MyPlayer.Map = BloodChamberMap;
			MyPlayer.Map2 = BloodChamberMapTop;
			MyPlayer.ResetBorders();
			MyPlayer.SetPosTile(105, 5);

			for (int i=0; i<MAX_BLOOD_CLOTS; i++)
			{
				BloodClots[i]->Revive();
			}

			BloodChamberMap->MoveTo(90*40, 0*40);
			BloodChamberMapTop->MoveTo(90*40, 0*40);
			
			BloodChamberMap->DrawTrans(Screen->GetBack());
			MyPlayer.Draw();
			Screen->FadeToSource(1500);
			CombatOn = true;
			
			Area = BLOODCHAMBER;
			Location = 70;			
			StartMusic((char*)"music/bloodchamber.s3m");
		}
		else if (Area == BLOODCHAMBER && MyPlayer.GetTileX() == 0 && MyPlayer.GetTileY() == 5 && MyPlayer.isFinishedMoving())
		{
			// Entering the Demon Town
			StopMusic();
			
			// Clear out character map array.
			ClearArray();
			
			Screen->GetBack()->Fill(0);
			Screen->FadeToBlack(600);
			CMessage MyMessage;
			MyMessage.NewText(Screen->GetFront(), (char*)"Entering the Demon Town");
			MyMessage.Draw();
			Sleep(1000);
			
			// Begin drawing new screen.
			MyPlayer.Map = DemonTownMap;
			MyPlayer.Map2 = DemonTownMapTop;
			MyPlayer.ResetBorders();
			MyPlayer.SetPosTile(122, 37);

			Fountain.Revive();
			Fountain.Map = DemonTownMap;
			Fountain.Map2 = DemonTownMapTop;
			Fountain.SetPosTile(23, 12);
			Fountain.SetArea(23, 12, 23, 12);

			for (int i=0; i<MAX_BLOOD_CLOTS; i++)
			{
				BloodClots[i]->Die();
				if (i == 1)
					BloodClots[i]->UnFollow(&MyPlayer);
			}

			DemonTownMap->MoveTo(108*40, 28*40);
			DemonTownMapTop->MoveTo(108*40, 28*40);
			
			DemonTownMap->DrawTrans(Screen->GetBack());
			MyPlayer.Draw();
			Screen->FadeToSource(1500);
			CombatOn = false;
			
			Area = DEMONTOWN;
			if (Location < 80)
				Location = 80;

			StartMusic((char*)"music/burnswoo.s3m");
		}
		else if (Area == DEMONTOWN && MyPlayer.GetTileX() == 123 && MyPlayer.GetTileY() == 37 && MyPlayer.isFinishedMoving())
		{
			// Entering the Blood Pool Chamber from the demon town
			StopMusic();
			
			// Clear out character map array.
			ClearArray();
			
			Screen->GetBack()->Fill(0);
			Screen->FadeToBlack(600);
			CMessage MyMessage;
			MyMessage.NewText(Screen->GetFront(), (char*)"Entering the Blood Pool Chamber");
			MyMessage.Draw();
			Sleep(1000);
			
			// Begin drawing new screen.
			MyPlayer.Map = BloodChamberMap;
			MyPlayer.Map2 = BloodChamberMapTop;
			MyPlayer.ResetBorders();
			MyPlayer.SetPosTile(0, 5);

			for (int i=0; i<MAX_BLOOD_CLOTS; i++)
			{
				BloodClots[i]->Revive();
			}

			BloodClots[1]->SetText((char*)"Cryn:\nHey there little fella ..", 1);
			BloodClots[1]->SetText((char*)"Mysterious Blood Clot:\ngurgle, gurgle ..", 2);

			BloodChamberMap->MoveTo(0*40, 0*40);
			BloodChamberMapTop->MoveTo(0*40, 0*40);
			
			BloodChamberMap->DrawTrans(Screen->GetBack());
			MyPlayer.Draw();
			Screen->FadeToSource(1500);
			CombatOn = true;
			
			Area = BLOODCHAMBER;
			StartMusic((char*)"music/bloodchamber.s3m");
		}
		else if (Area == DEMONTOWN && MyPlayer.GetTileX() == 118 && MyPlayer.GetTileY() == 4 && MyPlayer.isFinishedMoving())
		{
			CInfoBox MyBox(Screen, Input, Sound, 2);
			if (Location < 85)
			{
				if (Location < 81)
					MyBox.Display2((char*)"Narz The Ancient:\nAhem, going somewhere human?");
				else
					MyBox.Display2((char*)"Narz The Ancient:\nYou may not enter the dark gate yet, human. I thought we had a deal.");
			}
			else
			{
				// Entering the Nether World
				StopMusic();
				
				// Clear out character map array.
				ClearArray();
				
				StartMusic((char*)"music/diesong.s3m");

				Screen->FadeToBlack(600);
				Screen->GetBack()->Fill(0);

				CDXTile MyTile;
				if( MyTile.Create(Screen, (char*)"graphics/enterbeornecastle.bmp", 300, 395, 0) == FALSE )
					CDXError( Screen , (char*)"could not load tiles from file enterbeornecastle.bmp." );
				// set the top left pixel in tiles bitmap as transparent color
				MyTile.SetColorKey(0);
				
				CDXSprite MySprite;
				MySprite.Create(&MyTile);
				MySprite.SetFrame(0);
				MySprite.SetPos(170, 25);
				MySprite.SetAlphaValue(/*160*/90);
				MySprite.Draw(Screen->GetBack() , 0, 0, CDXBLT_TRANSALPHA);
				
				Screen->GetBack()->GetDC();
				Screen->GetBack()->SetFont();
				CDXMenu menu; menu.TextXY(Screen->GetBack(), 100, 350, 255, "Cryn decends into the Nether World in search of Ayli.");
				menu.TextXY(Screen->GetBack(), 100, 365, 255, "Meanwhile, Beorne makes the final preparations for his own agenda ..");
				menu.TextXY(Screen->GetBack(), 100, 380, 255, "Press Space to continue");
				Screen->GetBack()->ReleaseDC();
				
				// Fade in.
				Screen->FadeToSource(1500);
				
				int c = 255, cup = false;
				Input->Update();
				Input->UpdateLastKey(true);
				while (Input->GetLastKeyChar() != 32)
				{
					if (cup)
					{
						if (c+3 < 255)
							c+=3;
						else
							cup = false;
					}
					else
					{
						if (c-3 > 0)
							c-=3;
						else
							cup = true;
					}
					
					MySprite.SetPos(170, 25);
					MySprite.Draw(Screen->GetBack() , 0, 0, CDXBLT_TRANSALPHA);
					Screen->GetBack()->GetDC();
					CDXMenu menu; menu.TextXY(Screen->GetBack(), 100, 350, 255, "Cryn decends into the Nether World in search of Ayli.");
					menu.TextXY(Screen->GetBack(), 100, 365, 255, "Meanwhile, Beorne makes the final preparations for his own agenda ..");
					menu.TextXY(Screen->GetBack(), 100, 380, RGB(c,0,0), "Press Space to continue");
					Screen->GetBack()->ReleaseDC();
					Screen->Flip();
					
					Input->Update();
					Input->UpdateLastKey(true);
				}

				// Fade out again.
				StopMusic();

				Screen->FadeToBlack(600);
				CMessage MyMessage;
				MyMessage.NewText(Screen->GetBack(), (char*)"Entering the Nether World");
				MyMessage.Draw();
				Screen->FadeToSource(1500);
				Sleep(1000);
				Screen->FadeToBlack(600);

				Screen->GetBack()->Fill(0);

				//
				// Change character to Beorne.
				//
				CDXTile *Tile = new CDXTile();
				if (Tile->Create(Screen, (char*)"tiles/beorne_posessed.bmp", 40, 40, 0) == FALSE)
					CDXError( Screen , (char*)"could not load tiles from file beorne_posessed.bmp" );
				MyPlayer.LoadedTile = Tile;
				MyPlayer.Load(Screen, Input, Sound, NetherMap, NetherMapTop, MOVE_NONE, (char*)"tiles/beorne_posessed.bmp", 40, 40);

				// Begin drawing new screen.
				MyPlayer.Map = NetherMap;
				MyPlayer.Map2 = NetherMapTop;
				MyPlayer.ResetBorders();
				MyPlayer.SetPosTile(98, 1);
				MyPlayer.HP = MyPlayer.MaxHP;
				MyPlayer.MP = MyPlayer.MaxMP;

				// Changing townfolk into cityguard and setting him up.
				Tile = new CDXTile();
				if (Tile->Create(Screen, (char*)"tiles/cityguard.bmp", 40, 40, 0) == FALSE)
					CDXError( Screen , (char*)"could not load tiles from file cityguard.bmp" );
				TownFolk1.LoadedTile = Tile;
				TownFolk1.Load(Screen, Input, Sound, NetherMap, NetherMapTop, MOVE_RIGHT, (char*)"tiles/demonsoldier.bmp", 40, 40);
				TownFolk1.SetPosTile(27, 18);
				TownFolk1.StandStill();
				TownFolk1.SetText((char*)"City Guard:\nYou will never get away with your evil plans, Beorne.", 1);
				TownFolk1.SetText((char*)"Beorne:\nThat is no longer any of your concern.", 2);

				TownFolk2.LoadedTile = Tile;
				TownFolk2.Load(Screen, Input, Sound, NetherMap, NetherMapTop, MOVE_RIGHT, (char*)"tiles/demonsoldier.bmp", 40, 40);
				TownFolk2.SetPosTile(15, 16);
				TownFolk2.StandStill();
				TownFolk2.SetText((char*)"City Guard:\nJustice always prevails, Beorne.", 1);
				TownFolk2.SetText((char*)"Beorne:\nYes, it does.. and here is yours.", 2);

				Tile = new CDXTile();
				if (Tile->Create(Screen, (char*)"tiles/cityguard2.bmp", 40, 40, 0) == FALSE)
					CDXError( Screen , (char*)"could not load tiles from file cityguard2.bmp" );

				TownFolk3.LoadedTile = Tile;
				TownFolk3.Load(Screen, Input, Sound, NetherMap, NetherMapTop, MOVE_RIGHT, (char*)"tiles/demonsoldier.bmp", 40, 40);
				TownFolk3.SetPosTile(13, 1);
				TownFolk3.StandStill();
				TownFolk3.SetText((char*)"City Guard:\nBeorne, why?", 1);
				
				TownFolk4.Revive();
				TownFolk4.LoadedTile = Tile;
				TownFolk4.Load(Screen, Input, Sound, NetherMap, NetherMapTop, MOVE_RIGHT, (char*)"tiles/demonsoldier.bmp", 40, 40);
				TownFolk4.SetPosTile(27, 2);
				TownFolk4.StandStill();
				TownFolk4.SetText((char*)"City Guard:\nI will not go down without a fight, Beorne. FOR MY KING!", 1);

				Neacres.Revive();
				Neacres.SetPosTile(92, 9);
				Neacres.StandStill();
				Neacres.Map = NetherMap;
				Neacres.Map2 = NetherMapTop;
				Neacres.SetText((char*)"Neacres:\nI trust you meditated well, master? What are our final plans?", 1);
				Neacres.SetText((char*)"Beorne:\nThe ceremony is almost complete, but one final task remains. Has my\nbrother received his.. invitation?", 2);
				Neacres.SetText((char*)"Neacres:\nYes, master. He will be entering the nether world at any moment. Shall I greet him?", 3);
				Neacres.SetText((char*)"Beorne:\nYes. He has already followed right along with my plan from the beginning. There is no reason to hold back the inevitable now.", 4);
				Neacres.SetText((char*)"Neacres:\nI will make it so, master. Before I go, four capital city guards remain in your prison. What will you have me do with them?", 5);
				Neacres.SetText((char*)"Beorne:\nI suppose they have rotted in their cells long enough. I will deal with them myself. They will serve as the initial sacrifice.", 6);
				Neacres.SetText((char*)"Neacres:\nVery well, master. Enjoy slaying them all. I will go and await Cryn in the Entry Chamber.", 7);

				Ayli.Revive();
				Ayli.SetPosTile(51, 6);
				Ayli.SetArea(45, 0, 51, 20);
				Ayli.Follow(&MyPlayer);
				Ayli.Map = NetherMap;
				Ayli.Map2 = NetherMapTop;
				Ayli.SetText((char*)"Ayli:\nBeorne, you liar! I overheard everything you told Neacres! You said\nyou would not hurt him!", 1);
				Ayli.SetText((char*)"Beorne:\nDon't be so dramatic, Ayli. You didn't really expect me to let him go, did you?", 2);
				Ayli.SetText((char*)"Ayli:\nThis was not part of the deal! After I faked the demon scene at the castle, you were supposed to ..", 3);
				Ayli.SetText((char*)"Beorne:\nHush, sweet Ayli. Soon, none of this will matter to you. Just enjoy the fact that your good deed has assured the safety of your homeland.", 4);
				Ayli.SetText((char*)"Ayli:\nYou're a monster, Beorne!", 5);
				Ayli.SetText((char*)"Beorne:\nI wish I could indulge in this futher, but there is work to be done and\ncityguards to slay.", 6);

				NetherMap->MoveTo(84*40, 0*40);
				NetherMapTop->MoveTo(84*40, 0*40);
				
				NetherMap->DrawTrans(Screen->GetBack());
				MyPlayer.Draw();
				Screen->FadeToSource(1500);
				CombatOn = false;
				
				Area = NETHERWORLD;
				Location = 90;

				StartMusic((char*)"music/BEORNECA.S3M");
			}
		}
		else if (Area == NETHERWORLD && MyPlayer.GetTileX() == 94 && MyPlayer.GetTileY() == 15 && MyPlayer.isFinishedMoving())
		{
			if (Location < 96)
			{
				CInfoBox MyBox(Screen, Input, Sound, 2);
				MyBox.Display2((char*)"It is not yet time to make a sacrifice.");
			}
			else if (Location == 97)
			{
				CDXSoundBuffer s;
				s.Load(Sound, (char*)"music/battleeffects/desecrate.wav", 4);
				s.Play();

				MyPlayer.SetText((char*)"Beorne:\nI summon thy dark energy! I offer this glorious sacrifice in your name!", 1);
				MyPlayer.SetText((char*)"...   ...", 2);
				MyPlayer.SetText((char*)"Beorne:\nCome forth from thy altar, all demons, lost souls, and the forgotten!", 3);
				MyPlayer.SetText((char*)"... ... ...", 4);
				MyPlayer.Speak();
				NewScreenSound->Play();
				Possession->Revive();
				Location = 98;
			}
			else if (Location == 99)
			{
				// Entering the Deep Nether World
				// Entering the Blood Pool Chamber from the demon town
				StopMusic();
				
				// Clear out character map array.
				ClearArray();
				
				Screen->GetBack()->Fill(0);
				Screen->FadeToBlack(600);
				CMessage MyMessage;
				MyMessage.NewText(Screen->GetFront(), (char*)"Entering the Deep Nether World");
				MyMessage.Draw();
				Sleep(1000);
				
				// Begin drawing new screen.
				MyPlayer.Map = DeepNetherMap;
				MyPlayer.Map2 = DeepNetherMapTop;
				MyPlayer.ResetBorders();
				MyPlayer.SetPosTile(0, 0);

				Fountain.Map = DeepNetherMap;
				Fountain.Map2 = DeepNetherMapTop;
				Fountain.SetPosTile(69, 8);
				Fountain.StandStill();
				Fountain.Revive();
				
				TownFolk1.Die();
				TownFolk2.Die();
				TownFolk3.Die();
				TownFolk4.Die();
				Ayli.Die();
				Neacres.Die();

				Eyes->Revive();
				Spine->Revive();
				Brain->Revive();
				Heart->Revive();

				for (int i=0; i<MAX_MIST_SPOTS; i++)
				{
					MistSpots[i].Map = DeepNetherMap;
					MistSpots[i].Map2 = DeepNetherMapTop;
					MistSpots[i].MoveRandomSpot();
				}

				DeepNetherMap->MoveTo(0*40, 0*40);
				DeepNetherMapTop->MoveTo(0*40, 0*40);
				
				DeepNetherMap->DrawTrans(Screen->GetBack());
				MyPlayer.Draw();
				Screen->FadeToSource(1500);
				CombatOn = false;
				
				Area = DEEPNETHERWORLD;
				Location = 100;

				StartMusic((char*)"music/BEORNECA.S3M");
			}
		}
		else if (Area == DEEPNETHERWORLD && Location == 107 && MyPlayer.GetTileX() == 125 && MyPlayer.GetTileY() == 17 && MyPlayer.isFinishedMoving())
		{
			// Enter Beorne's Castle For Final Showdown
			MyPlayer.SetText((char*)"Beorne:\nCryn.. you have plagued me long enough. I am coming, little.. brother..", 1);
			MyPlayer.Speak();
			
			StopMusic();
			
			// Clear out character map array.
			ClearArray();
			
			StartMusic((char*)"music/diesong.s3m");
			
			Screen->FadeToBlack(600);
			Screen->GetBack()->Fill(0);
			
			CDXTile MyTile;
			if( MyTile.Create(Screen, (char*)"graphics/firecrown.bmp", 300, 300, 0) == FALSE )
				CDXError( Screen , (char*)"could not load tiles from file firecrown.bmp." );
			// set the top left pixel in tiles bitmap as transparent color
			MyTile.SetColorKey(0);
			
			CDXSprite MySprite;
			MySprite.Create(&MyTile);
			MySprite.SetFrame(0);
			MySprite.SetPos(170, 25);
			MySprite.SetAlphaValue(/*160*/90);
			MySprite.Draw(Screen->GetBack() , 0, 0, CDXBLT_TRANSALPHA);

			Screen->GetBack()->GetDC();
			Screen->GetBack()->SetFont();
			CDXMenu menu; menu.TextXY(Screen->GetBack(), 100, 350, 255, "Beorne, worn from the organ hunt, returns to his castle to meet Cryn.");
			menu.TextXY(Screen->GetBack(), 100, 365, 255, "Meanwhile, Cryn approaches the castle gates and a showdown is at hand ..");
			menu.TextXY(Screen->GetBack(), 100, 380, 255, "Press Space to continue");
			Screen->GetBack()->ReleaseDC();
			
			// Fade in.
			Screen->FadeToSource(1500);
			
			int c = 255, cup = false;
			Input->Update();
			Input->UpdateLastKey(true);
			while (Input->GetLastKeyChar() != 32)
			{
				if (cup)
				{
					if (c+3 < 255)
						c+=3;
					else
						cup = false;
				}
				else
				{
					if (c-3 > 0)
						c-=3;
					else
						cup = true;
				}
				
				MySprite.SetPos(170, 25);
				MySprite.Draw(Screen->GetBack() , 0, 0, CDXBLT_TRANSALPHA);
				Screen->GetBack()->GetDC();
				CDXMenu menu; menu.TextXY(Screen->GetBack(), 100, 350, 255, "Beorne, worn from the organ hunt, returns to his castle to meet Cryn.");
				menu.TextXY(Screen->GetBack(), 100, 365, 255, "Meanwhile, Cryn approaches the castle gates and a showdown is at hand ..");
				menu.TextXY(Screen->GetBack(), 100, 380, RGB(c,0,0), "Press Space to continue");
				Screen->GetBack()->ReleaseDC();
				Screen->Flip();
				
				Input->Update();
				Input->UpdateLastKey(true);
			}
			
			// Fade out again.
			StopMusic();
			
			Screen->FadeToBlack(600);
			CMessage MyMessage;
			MyMessage.NewText(Screen->GetBack(), (char*)"Entering the Nether World");
			MyMessage.Draw();
			Screen->FadeToSource(1500);
			Sleep(1000);
			Screen->FadeToBlack(600);
			
			Screen->GetBack()->Fill(0);
			
			//
			// Change character to Cryn.
			//
			CDXTile *Tile = new CDXTile();
			if (Tile->Create(Screen, (char*)"tiles/hero.bmp", 40, 40, 0) == FALSE)
				CDXError( Screen , (char*)"could not load tiles from file hero.bmp" );
			MyPlayer.LoadedTile = Tile;
			MyPlayer.Load(Screen, Input, Sound, NetherMap, NetherMapTop, MOVE_NONE, (char*)"tiles/hero.bmp", 40, 40);

			// Begin drawing new screen.
			MyPlayer.Map = NetherMap;
			MyPlayer.Map2 = NetherMapTop;
			MyPlayer.ResetBorders();
			MyPlayer.SetPosTile(4, 18);

			MyPlayer.HP = MyPlayer.MaxHP;
			MyPlayer.MP = MyPlayer.MaxMP;

			for (int i=0; i<MAX_MIST_SPOTS; i++)
			{
				MistSpots[i].Map = NetherMap;
				MistSpots[i].Map2 = NetherMapTop;
				MistSpots[i].MoveRandomSpot();
			}
			
			// Changing townfolk into cityguard and setting him up.
			TownFolk1.Die();
			TownFolk2.Die();
			TownFolk3.Die();
			TownFolk4.Die();
			
			Neacres.Revive();
			Neacres.SetPosTile(1, 16);
			Neacres.StandStill();
			Neacres.Map = NetherMap;
			Neacres.Map2 = NetherMapTop;
			Neacres.SetText((char*)"Cryn:\nNeacres! What are you doing down here!", 1);
			Neacres.SetText((char*)"Neacres:\nCryn, my boy. I have a surprise for you. My, my, the brotherly rivalry is amazing, isnt' it?", 2);
			Neacres.SetText((char*)"Cryn:\nYou know where Beorne is, don't you! And what have you done with Ayli?", 3);
			Neacres.SetText((char*)"Neacres:\nYes, yes, all those questions shall be answered. Ayli is here, on her own free will. So is Beorne.. and he's been waiting for you.", 4);
			Neacres.SetText((char*)"Cryn:\nThen I won't make him wait any longer!", 5);
			Neacres.SetText((char*)"Neacres:\nI just love a good fight of family fueds. See you soon.", 6);
			
			Ayli.Revive();
			Ayli.SetPosTile(51, 6);
			//Ayli.SetPosTile(53, 5);
			Ayli.SetArea(45, 3, 96, 20);
			Ayli.Map = NetherMap;
			Ayli.Map2 = NetherMapTop;
			Ayli.SetText((char*)"Ayli:\nOh, Cryn! Please, listen to me! It was not my fault, I.. I..", 1);
			Ayli.Follow(&MyPlayer);

			Beorne.Revive();
			Beorne.SetPosTile(98, 1);
			Beorne.StandStill();
			Beorne.Map = NetherMap;
			Beorne.Map2 = NetherMapTop;
			Beorne.SetText((char*)"Cryn:\nBeorne..", 1);
			Beorne.SetText((char*)"Beorne:\nWelcome to my castle, Cryn. For a moment there, I didn't think you would make it here, but Ayli is so skilled at her work.", 2);
			Beorne.SetText((char*)"Cryn:\nAyli would never work for you!", 3);
			Beorne.SetText((char*)"Beorne:\nha ha, thats funny, Cryn. She was all too eager to assist me in leading you here. Did you really think the trapped demon scene at the castle ruins was real?", 4);
			Beorne.SetText((char*)"Cryn:\nWhat do you want, Beorne? Why are you doing this!", 5);
			Beorne.SetText((char*)"Beorne:\nYou are so gullible, Cryn. I've kept you alive long enough for me to complete my final offerings. Only one last offering remains, Cryn. Can you guess what that might be?", 6);
			Beorne.SetText((char*)"Cryn:\nYou are completely mad, Beorne! I am no longer the child you fought in the ancient tree and I will use all of my might to stop you!", 7);
			Beorne.SetText((char*)"Beorne:\nYou are pathetic, Cryn. You almost make this too easy. I will be waiting for you at the entrance of the battle platform. Don't even think about running. After all, there is no way out.", 8);
			
			NetherMap->MoveTo(0*40, 8*40);
			NetherMapTop->MoveTo(0*40, 8*40);
			
			NetherMap->DrawTrans(Screen->GetBack());
			MyPlayer.Draw();
			Screen->FadeToSource(1500);
			CombatOn = false;
			
			Area = NETHERWORLD;
			Location = 110;
			
			StartMusic((char*)"music/treetrun.s3m");
		}

	} // not in combat
	
	// Frame rate calculations
	CurTime   = timeGetTime();
	DeltaTime = CurTime - LastTime;
	LastTime  = CurTime;
	FpsTime  += DeltaTime;
	FramesRendered++;
	if (FpsTime > 1000)
	{
		Fps = FramesRendered;
		FramesRendered  = 0;
		FpsTime = 0;
	}

/*	char str[12];
	sprintf(str, (char*)"FPS: %d", Fps);
	// Print the frame rate to the screen
	Screen->GetBack()->GetDC();
//	Screen->GetBack()->SetFont();
	CDXMenu menu; menu.TextXY(Screen->GetBack(), 5, 5, 255, str);
	sprintf(str, (char*)"X = %d, Y = %d", MyPlayer.GetTileX(), MyPlayer.GetTileY());
	CDXMenu menu; menu.TextXY(Screen->GetBack(), 5, 18, 255, str);
//	sprintf(str, (char*)"aX = %d, aY = %d", Ayli.GetTileX(), Ayli.GetTileY());
//	CDXMenu menu; menu.TextXY(Screen->GetBack(), 5, 32, 255, str);
	sprintf(str, (char*)"Area = %d, Location = %d", Area, Location);
	CDXMenu menu; menu.TextXY(Screen->GetBack(), 5, 32, 255, str);
//	sprintf(str, (char*)"CxCy = %d", MyNPCCharacterMapStruct.CharacterMap[MyPlayer.GetTileX()+1][Beorne.GetTileY()]);
//	CDXMenu menu; menu.TextXY(Screen->GetBack(), 5, 60, 255, str);
	Screen->GetBack()->ReleaseDC();
*/
	if (bFlip)
	{
    	Screen->Flip();	 // Flip the back buffer to the front
	}

	// We want battle FPS rate to be around 16-20.
	static int iAdjustment = 0;

	if (InCombat && Fps > 20)
	{
		// Slow down FPS to below 20.
		iAdjustment += 2;
	}
	else if (InCombat && Fps < 15 && iAdjustment > 0)
	{
		// Speed up FPS to above 16.
		iAdjustment--;
	}
	else if (!InCombat && Fps < 50 && iAdjustment > -10)
	{
		// Speed up FPS above 40.
		iAdjustment--;
	}

/*	if (!InCombat)
		iAdjustment = 0;

	MyTimer.Wait_Clock(MyPlayer.GameSpeed + iAdjustment);*/
	int adder = 0;
	if (InCombat)
		adder += 25;

	MyTimer.Wait_Clock(MyPlayer.GameSpeed + adder);
}

void InitLevel(int MapX, int MapY, int Map2X, int Map2Y)
{
	bool bInit = false;

	//
	// Depending on our location, clear up unneeded memory objects.
	//
	CleanupMemory();

	if (Location > 4)
	{
		// Lineer is dead.
		ForestMonster.Die();
		King.Die();
	}
	if (Location >= 31)
	{
		TreeBoss.Die();
		Beorne.Load(Screen, Input, Sound, TreeTrunkMap, TreeTrunkMapTop, MOVE_RIGHT, (char*)"tiles/beorne_posessed.bmp", 40, 40);
	}

	if (Area == FOREST || Area == SWAMP)
	{
		bInit = true;
		
		Beorne.Map = ForestMap;
		Beorne.Map2 = ForestMapTop;
		Beorne.SetPosTile(MyPlayer.BeorneTileX, MyPlayer.BeorneTileY);
		Fountain.SetPosTile(9, 36);
		Fountain.SetArea(9, 36, 9, 36);
		Fountain.Map = ForestMap;
		MyPlayer.Map = ForestMap;
		MyPlayer.Map2 = ForestMapTop;
		CombatOn = true;

		StartMusic((char*)"music/forestmu.s3m");
		//ClearArray();
	}
	else if (Area == SWAMPCAVE)
	{
		// Entering the Swamp Cave area.
		bInit = true;
		StopMusic();
		// Clear out character map array.
		ClearArray();

		Beorne.Map = SwampCaveMap;
		Beorne.Map2 = SwampCaveMapTop;
		Beorne.SetPosTile(MyPlayer.BeorneTileX, MyPlayer.BeorneTileY);
		Fountain.Map = SwampCaveMap;
		Fountain.Map2 = SwampCaveMapTop;
		Fountain.SetPosTile(41, 20);
		Fountain.SetArea(41, 20, 41, 20);

		// Begin drawing new screen.
		MyPlayer.Map = SwampCaveMap;
		MyPlayer.Map2 = SwampCaveMapTop;
		
		SwampCaveMap->DrawTrans(Screen->GetBack());
		MyPlayer.Draw();
		CombatOn = true;

		StartMusic((char*)"music/dungeon1.s3m");
	} // Swamp Cave Area	
	else if (Area == TREE)
	{
		// Entering the Tree area.
		bInit = true;
		StopMusic();
		// Clear out character map array.
		ClearArray();

		Beorne.Map = TreeMap;
		Beorne.Map2 = TreeMapTop;
		Beorne.SetPosTile(MyPlayer.BeorneTileX, MyPlayer.BeorneTileY);
		Fountain.Map = TreeMap;
		Fountain.Map2 = TreeMapTop;
		Fountain.SetPosTile(35, 16);
		Fountain.SetArea(35, 16, 35, 16);

		// Begin drawing new screen.
		MyPlayer.Map = TreeMap;
		MyPlayer.Map2 = TreeMapTop;
		
		TreeMap->DrawTrans(Screen->GetBack());
		MyPlayer.Draw();
		CombatOn = true;

		StartMusic((char*)"music/insect.s3m");
	} // Tree Area	
	else if (Area == TREETRUNK)
	{
		// Entering the Tree Trunk area.
		bInit = true;
		StopMusic();
		// Clear out character map array.
		ClearArray();

		Beorne.Map = TreeTrunkMap;
		Beorne.Map2 = TreeTrunkMapTop;
		Beorne.SetPosTile(MyPlayer.BeorneTileX, MyPlayer.BeorneTileY);
		Fountain.Map = TreeTrunkMap;
		Fountain.Map2 = TreeTrunkMapTop;
		Fountain.SetPosTile(2, 5);
		Fountain.SetArea(2, 5, 2, 5);
		TreeBoss.Revive();
		TreeBoss.SetPosTile(13, 0);

		// Begin drawing new screen.
		MyPlayer.Map = TreeTrunkMap;
		MyPlayer.Map2 = TreeTrunkMapTop;
		
		TreeTrunkMap->DrawTrans(Screen->GetBack());
		MyPlayer.Draw();
		CombatOn = false;

		StartMusic((char*)"music/treetrun.s3m");
	} // Tree Trunk Area
	else if (Area == TREETRUNKFINAL)
	{
		bInit = true;
		StopMusic();
		// Clear out character map array.
		ClearArray();

		Beorne.Map = TreeTrunkMap;
		Beorne.Map2 = TreeTrunkMapTop;
		Fountain.Map = TreeTrunkMap;
		Fountain.Map2 = TreeTrunkMapTop;
		Fountain.SetPosTile(2, 5);
		Fountain.SetArea(2, 5, 2, 5);

		Beorne.SetPosTile(26, 5);
		Beorne.UnFollow(&MyPlayer);
		Beorne.SetArea(26, 5, 26, 5);
		TreeBoss.SetPosTile(13, 0);

		// Begin drawing new screen.
		MyPlayer.Map = TreeTrunkMap;
		MyPlayer.Map2 = TreeTrunkMapTop;
		
		TreeTrunkMap->DrawTrans(Screen->GetBack());
		MyPlayer.Draw();
		CombatOn = false;

		if (Location == 34)
		{
			Demon2.Revive();
			Demon2.SetCharacterMap(&MyNPCCharacterMapStruct);
			Demon2.Map = TreeTrunkMap;
			Demon3.Revive();
			Demon3.SetCharacterMap(&MyNPCCharacterMapStruct);
			Demon3.Map = TreeTrunkMap;
		}
		else if (Location == 35)
		{
			Demon3.Revive();
			Demon3.SetCharacterMap(&MyNPCCharacterMapStruct);
			Demon3.Map = TreeTrunkMap;
		}
		if (Location == 33)
		{
			Demon1.Revive();
			Demon1.SetCharacterMap(&MyNPCCharacterMapStruct);
			Demon1.Map = TreeTrunkMap;
			Demon2.Revive();
			Demon2.SetCharacterMap(&MyNPCCharacterMapStruct);
			Demon2.Map = TreeTrunkMap;
			Demon3.Revive();
			Demon3.SetCharacterMap(&MyNPCCharacterMapStruct);
			Demon3.Map = TreeTrunkMap;
		}

		StartMusic((char*)"music/treetrun.s3m");
	}
	else if (Area == FORESTCAMP)
	{
		// Entering the Forest Camp area.
		bInit = true;
		StopMusic();
		// Clear out character map array.

		Beorne.Die();
		Beorne.UnFollow(&MyPlayer);
		Fountain.Map = ForestCampMap;
		Fountain.Map2 = ForestCampMapTop;
		Fountain.SetPosTile(20, 16);
		Fountain.SetArea(20, 16, 20, 16);

		if (Location <= 42)
		{
			Ayli.Die(); // not visible just yet
		}

		if (Location == 43)
		{
			Neacres.SetText((char*)"Neacres:\nCryn! Quickly, to the front gates!", 1);
		}

		if (Location > 43)
		{
			Neacres.SetText((char*)"Neacres:\nI see you've found a friend, how nice.", 1);
			Ayli.SetPosTile(MyPlayer.AyliTileX, MyPlayer.AyliTileY);
			Ayli.Follow(&MyPlayer);
			BossDemon.SetText((char*)"Kaputos:\nSo boy, you think you have what it takes to get past me, do you? Well, we shall see about that.", 1);
			BossDemon.SetText((char*)"Ayli:\nYou're going back to the hell that spawned your necrotic spineless demon hide!", 2);
			BossDemon.SetText((char*)"Cryn:\nYeah! What she said!", 3);
			HenchDemon.SetText((char*)"Major Demon:\nPuny human.. step aside!", 1);
			HenchDemon.SetText((char*)"Ayli:\nI don't think so demon! I didn't just sharpen my blades for nuthin!", 2);
		}
		else
		{
			Ayli.UnFollow(&MyPlayer);
			MyNPCCharacterMapStruct.CharacterMap[35][9] = 0;
		}

		BossDemon.Revive();
		HenchDemon.Revive();
		Neacres.Revive();

		if (Location >= 45)
		{
			HenchDemon.Die();
		}

		if (Location >= 46)
		{
			BossDemon.Die();
		}

		for (int i=0; i<MAX_DEMON_SOLDIERS; i++)
		{
			DemonSoldiers[i]->Revive();
		}

		// Begin drawing new screen.
		MyPlayer.Map = ForestCampMap;
		MyPlayer.Map2 = ForestCampMapTop;
		
		ForestCampMap->DrawTrans(Screen->GetBack());
		MyPlayer.Draw();
		CombatOn = true;

		StartMusic((char*)"music/burnswoo.s3m");
	} // Forest Camp Area
	else if (Area == DEMONPIT)
	{
		// Entering the Demon Pit area.
		bInit = true;
		StopMusic();
		// Clear out character map array.

		Beorne.Die();
		HenchDemon.Die();
		Neacres.Die();

		Ayli.SetPosTile(MyPlayer.AyliTileX, MyPlayer.AyliTileY);
		Ayli.Follow(&MyPlayer);

		Fountain.Map = DemonPitMap;
		Fountain.Map2 = DemonPitMapTop;
		Fountain.SetPosTile(20, 19);
		Fountain.SetArea(20, 19, 20, 20);

		// Begin drawing new screen.
		MyPlayer.Map = DemonPitMap;
		MyPlayer.Map2 = DemonPitMapTop;
		Ayli.Map = DemonPitMap;
		Ayli.Map2 = DemonPitMapTop;

		DemonPitMap->DrawTrans(Screen->GetBack());
		DemonPitMapTop->DrawTrans(Screen->GetBack());
		MyPlayer.Draw();
		Ayli.Draw();

		CombatOn = true;

		DemonStatues[0]->SetPosTile(32, 9);
		DemonStatues[0]->SetText((char*)"Cryn:\nStrange, it looks like some kind of demon statue. It looks like its wing is some kind of lever.", 1); 
		DemonStatues[0]->SetText((char*)"Ayli:\nWell, only one thing to do then, pull its wing.", 2);
		DemonStatues[0]->SetText((char*)"Cryn:\nOk, here goes. [CLICK]", 3);
		DemonStatues[0]->SetText((char*)"Demon Statue:\nThe bones are broken, to stop the flood.\nOne to cast, and two for blood.", 4);
		DemonStatues[0]->SetText((char*)"Cryn:\nUh ok. I was afraid he would say something like that.", 5);
		DemonStatues[0]->SetText((char*)"Ayli:\nCome on Cryn, it is some kind of riddle. Lets look around and see what we can find.", 6);
		DemonStatues[0]->Revive();
		
		DemonStatues[1]->SetPosTile(9, 28); 
		DemonStatues[1]->SetText((char*)"Demon Statue:\nCAST", 1);
		DemonStatues[1]->Revive();
		
		DemonStatues[2]->SetText((char*)"Demon Statue:\nBLOOD", 1); 
		DemonStatues[2]->SetPosTile(67, 27);
		DemonStatues[2]->Revive();

		for (int i=0; i<3; i++)
		{
			DemonStatues[i]->SetCharacterMap(&MyNPCCharacterMapStruct);
			MyNPCCharacterMapStruct.CharacterMap[DemonStatues[i]->GetTileX()][DemonStatues[i]->GetTileY()] = 1;
			DemonStatues[i]->SetArea(DemonStatues[i]->GetTileX(), DemonStatues[i]->GetTileY(), DemonStatues[i]->GetTileX(), DemonStatues[i]->GetTileY());
			DemonStatues[i]->isAnimated = true;
		}

		for (int i=0; i<MAX_DEMON_SOLDIERS; i++)
		{
			if (DemonSoldiers[i] != NULL)
				DemonSoldiers[i]->Die();
		}

		if (Location > 50)
		{
			DemonStatues[0]->SetText((char*)"Demon Statue:\nThe bones are broken, to stop the flood.\nOne to cast, and two for blood.", 1);
		}

		if (Location < 52)
		{
			// He will guard the first statue CAST exit.
			HenchDemon.Revive();
			HenchDemon.Map = DemonPitMap;
			HenchDemon.Map2 = DemonPitMapTop;
			HenchDemon.SetPosTile(15, 29);
			HenchDemon.SetArea(15, 29, 16, 29);
			HenchDemon.SetText((char*)"Major Demon:\nHa ha ha.. I figured you would come this way human. This is the perfect place for you to die.", 1);
		}
		else if (Location == 52)
		{
			// He will guard the second entrance to statue BLOOD.
			HenchDemon.Revive();
			HenchDemon.Map = DemonPitMap;
			HenchDemon.Map2 = DemonPitMapTop;
			HenchDemon.SetPosTile(77, 48);
			HenchDemon.SetArea(77, 48, 76, 48);
			HenchDemon.SetText((char*)"Major Demon:\nYou will not pass this time boy!", 1);
			HenchDemon.SetText((char*)"Cryn:\nYou again? Didn't I already kill you on the other platform?", 2);
			HenchDemon.SetText((char*)"Ayli:\nDon't let him mess with your mind Cryn. These demons are manufactured\nand all seem the same.", 3);
			HenchDemon.SetText((char*)"Cryn:\nGood, then we should have no problem killing them all the same!", 4);
		}

		if (Location >= 54)
		{
			BoneBarriers[0]->Die();
			BoneBarriers[1]->Die();
		}
		else
		{
			BoneBarriers[0]->Revive();
			BoneBarriers[1]->Revive();
			BoneBarriers[0]->SetPosTile(32, 7);
			BoneBarriers[1]->SetPosTile(33, 7);
		}

		if (Location < 59)
			DragonSpawn.Revive();

		if (Location == 55)
		{
			DragonSpawn.SetPosTile(52, 1);
			Ayli.UnFollow(&MyPlayer);
			Ayli.SetPosTile(51, 1);
			Ayli.StandStill();
			DragonSpawn.StandStill();
			
			DragonSpawn.SetText((char*)"Cryn:\nAyli!", 1);
			DragonSpawn.SetText((char*)"Ayli:\nCryn, HELP!", 2);
			DragonSpawn.SetText((char*)"Pool Gaurdian:\nHa ha ha, one way or another, you're coming with me.", 3);
		}
		else if (Location == 56)
		{
			DragonSpawn.SetPosTile(46, 1);
			Ayli.SetPosTile(45, 1);
			Ayli.StandStill();
			DragonSpawn.StandStill();
		}
		else if (Location == 57)
		{
			DragonSpawn.SetText((char*)"Pool Gaurdian:\nHa ha ha ..", 1);
			DragonSpawn.SetText((char*)"Ayli:\nAHHHH!", 2);
			DragonSpawn.SetText((char*)"Cryn:\nAyli, I'm coming!", 3);
			DragonSpawn.SetPosTile(44, 4);
			Ayli.SetPosTile(44, 5);
			Ayli.StandStill();
			DragonSpawn.StandStill();
		}
		else if (Location == 58 || Location == 59 || Location == 60)
		{

			DragonSpawn.SetText((char*)"Pool Gaurdian:\nHa ha ha ..", 1);
			DragonSpawn.SetPosTile(34, 4);
			Ayli.SetPosTile(34, 2);
			Ayli.StandStill();
			DragonSpawn.StandStill();
		}

		StartMusic((char*)"music/demonpit.s3m");
	} // Demon Pit Area
	else if (Area == BLOODCHAMBER)
	{
		// Entering the Blood Chamber area.
		bInit = true;
		StopMusic();
		
		// Clear out character map array.
		ClearArray();

		Ayli.Die();
		DragonSpawn.Die();
		Fountain.Die();
		HenchDemon.Die();

		// Begin drawing new screen.
		MyPlayer.Map = BloodChamberMap;
		MyPlayer.Map2 = BloodChamberMapTop;
		
		for (int i=0; i<MAX_BLOOD_CLOTS; i++)
		{
			BloodClots[i]->Revive();
		}

		BloodChamberMap->DrawTrans(Screen->GetBack());
		MyPlayer.Draw();
		CombatOn = false;

		StartMusic((char*)"music/bloodchamber.s3m");
	} // Blood Chamber Area
	else if (Area == DEMONTOWN)
	{
		// Entering the Demon Town area.
		bInit = true;
		StopMusic();

		Ayli.Die();
		DragonSpawn.Die();
		HenchDemon.Die();

		// Clear out character map array.
		ClearArray();

		// Begin drawing new screen.
		MyPlayer.Map = DemonTownMap;
		MyPlayer.Map2 = DemonTownMapTop;
		
		DemonTownMap->DrawTrans(Screen->GetBack());
		MyPlayer.Draw();
		CombatOn = false;

		Fountain.Revive();
		Fountain.Map = DemonTownMap;
		Fountain.Map2 = DemonTownMapTop;
		Fountain.SetPosTile(23, 12);
		Fountain.SetArea(23, 12, 23, 12);

		if (Location == 80)
		{
		}
		else if (Location == 81)
		{
			TownFolk4.SetText((char*)"Demon Soldier:\nNo onez allowed pazt thiz point, human.", 1);
			TownFolk4.SetText((char*)"Cryn:\nNarz sent me to bring back the rouge monster in the forest.", 2);
			TownFolk4.SetText((char*)"Demon Soldier:\nHa ha ha. This is a good one human. But if Narz sent you, then so be it. Nice knowing you human.", 3);
			TownFolk5.SetText((char*)"Narz The Ancient:\nWhat, are you afraid of the little monster in the forest? Remember, the\nentrance is in the northwest corner of town.", 1);
		}
		else if (Location <= 83)
		{
			// 82, 83
			TownFolk5.SetText((char*)"Narz The Ancient:\nWhat, are you afraid of the little monster in the forest? Remember, the\nentrance is in the northwest corner of town.", 1);
		}
		
		if (Location >= 82)
		{
			TownFolk4.Die();
		}

		if (Location >= 84)
		{
			// Rii was defeated.
			DemonTownBoss.SetPosTile(116, 2);
			DemonTownBoss.SetArea(114, 2, 117, 4);
			DemonTownBoss.SetText((char*)"Cryn:\nRemember me, big guy?", 1);
			DemonTownBoss.SetText((char*)"Rii:\nGrrrrowl, Grummmble ..", 2);

			TownFolk5.SetText((char*)"Narz The Ancient:\nI am quite surprised that you returned human. I surely thought my pet, Rii, would have been too much for you. But alas, a deal is a deal.", 1);
			TownFolk5.SetText((char*)"Cryn:\nSo you'll let me enter the dark gate?", 2);
			TownFolk5.SetText((char*)"Narz The Ancient:\nYes, yes, that was the agreement. But I should warn you, the dark gate is no place for a human.", 3);
			TownFolk5.SetText((char*)"Cryn:\nWe'll see about that ..", 4);
		}
		
		if (Location >= 85)
		{
			// Rii was defeated and returned.
			TownFolk5.SetText((char*)"Narz The Ancient:\nHave fun down there, foolish human.", 1);
		}

		StartMusic((char*)"music/burnswoo.s3m");
	} // Demon Town Area
	else if (Area == NETHERWORLD && Location < 100)
	{
		// Entering the Nether World area.
		bInit = true;
		StopMusic();
		
		// Clear out character map array.
		ClearArray();

		Ayli.Die();
		DragonSpawn.Die();
		Fountain.Die();
		HenchDemon.Die();
		TownFolk5.Die();
		DemonTownBoss.Die();

		//
		// Change character to Beorne.
		//
		CDXTile *Tile = new CDXTile();
		if (Tile->Create(Screen, (char*)"tiles/beorne_posessed.bmp", 40, 40, 0) == FALSE)
			CDXError( Screen , (char*)"could not load tiles from file beorne_posessed.bmp" );
		MyPlayer.LoadedTile = Tile;
		MyPlayer.Load(Screen, Input, Sound, NetherMap, NetherMapTop, MOVE_RIGHT, (char*)"tiles/demonsoldier.bmp", 40, 40);

		MyPlayer.Map = NetherMap;
		MyPlayer.Map2 = NetherMapTop;

		Tile = new CDXTile();
		if (Tile->Create(Screen, (char*)"tiles/cityguard.bmp", 40, 40, 0) == FALSE)
			CDXError( Screen , (char*)"could not load tiles from file cityguard.bmp" );

		TownFolk1.LoadedTile = Tile;
		TownFolk1.Load(Screen, Input, Sound, NetherMap, NetherMapTop, MOVE_RIGHT, (char*)"tiles/demonsoldier.bmp", 40, 40);
		TownFolk1.SetPosTile(27, 18);
		TownFolk1.StandStill();
		TownFolk1.SetText((char*)"City Guard:\nYou will never get away with your evil plans, Beorne.", 1);
		TownFolk1.SetText((char*)"Beorne:\nThat is no longer any of your concern.", 2);
		
		TownFolk2.LoadedTile = Tile;
		TownFolk2.Load(Screen, Input, Sound, NetherMap, NetherMapTop, MOVE_RIGHT, (char*)"tiles/demonsoldier.bmp", 40, 40);
		TownFolk2.SetPosTile(15, 16);
		TownFolk2.StandStill();
		TownFolk2.SetText((char*)"City Guard:\nJustice always prevails, Beorne.", 1);
		TownFolk2.SetText((char*)"Beorne:\nYes, it does.. and here is yours.", 2);

		Tile = new CDXTile();
		if (Tile->Create(Screen, (char*)"tiles/cityguard2.bmp", 40, 40, 0) == FALSE)
			CDXError( Screen , (char*)"could not load tiles from file cityguard2.bmp" );
		
		TownFolk3.LoadedTile = Tile;
		TownFolk3.Load(Screen, Input, Sound, NetherMap, NetherMapTop, MOVE_RIGHT, (char*)"tiles/demonsoldier.bmp", 40, 40);
		TownFolk3.SetPosTile(13, 1);
		TownFolk3.StandStill();
		TownFolk3.SetText((char*)"City Guard:\nBeorne, why?", 1);
		
		TownFolk4.LoadedTile = Tile;
		TownFolk4.Load(Screen, Input, Sound, NetherMap, NetherMapTop, MOVE_RIGHT, (char*)"tiles/demonsoldier.bmp", 40, 40);
		TownFolk4.SetPosTile(27, 3);
		TownFolk4.StandStill();
		TownFolk4.SetText((char*)"City Guard:\nI will not go down without a fight, Beorne. FOR MY KING!", 1);

		Neacres.Revive();
		Neacres.SetPosTile(92, 9);
		Neacres.StandStill();
		Neacres.Map = NetherMap;
		Neacres.Map2 = NetherMapTop;
		Neacres.SetText((char*)"Neacres:\nI trust you meditated well, master? What are our final plans?", 1);
		Neacres.SetText((char*)"Beorne:\nThe ceremony is almost complete, but one final task remains. Has my\nbrother received his.. invitation?", 2);
		Neacres.SetText((char*)"Neacres:\nYes, master. He will be entering the nether world at any moment. Shall I greet him?", 3);
		Neacres.SetText((char*)"Beorne:\nYes. He has already followed right along with my plan from the beginning. There is no reason to hold back the inevitable now.", 4);
		Neacres.SetText((char*)"Neacres:\nI will make it so, master. Before I go, four capital city guards remain in your prison. What will you have me do with them?", 5);
		Neacres.SetText((char*)"Beorne:\nI suppose they have rotted in their cells long enough. I will deal with them myself. They will serve as the initial sacrifice.", 6);
		Neacres.SetText((char*)"Neacres:\nVery well, master. Enjoy slaying them all. I will go and await Cryn in the Entry Chamber.", 7);

		Ayli.Revive();
		Ayli.SetPosTile(51, 6);
		Ayli.SetArea(45, 0, 51, 20);
		Ayli.Follow(&MyPlayer);
		Ayli.Map = NetherMap;
		Ayli.Map2 = NetherMapTop;
		Ayli.SetText((char*)"Ayli:\nBeorne, you liar! I overheard everything you told Neacres! You said\nyou would not hurt him!", 1);
		Ayli.SetText((char*)"Beorne:\nDon't be so dramatic, Ayli. You didn't really expect me to let him go, did you?", 2);
		Ayli.SetText((char*)"Ayli:\nThis was not part of the deal! After I faked the demon scene at the castle, you were supposed to ..", 3);
		Ayli.SetText((char*)"Beorne:\nHush, sweet Ayli. Soon, none of this will matter to you. Just enjoy the fact that your good deed has assured the safety of your homeland.", 4);
		Ayli.SetText((char*)"Ayli:\nYou're a monster, Beorne!", 5);
		Ayli.SetText((char*)"Beorne:\nI wish I could indulge in this futher, but there is work to be done and\ncityguards to slay.", 6);

		if (Location >= 91)
		{
			Neacres.SetPosTile(1, 16);
			Neacres.StandStill();
			Neacres.SetText((char*)"Neacres:\nHe will be arriving shortly, and I will be ready, master.", 1);
		}

		if (Location >= 92)
		{
			Ayli.UnFollow(&MyPlayer);
			Ayli.SetText((char*)"Ayli:\nI have nothing more to say to you.", 1);
		}

		if (Location >= 93)
		{
			TownFolk1.Die();
		}

		if (Location >= 94)
		{
			TownFolk2.Die();
		}

		if (Location >= 95)
		{
			TownFolk3.Die();
		}

		if (Location >= 96)
		{
			TownFolk4.Die();
		}

		if (Location == 98)
		{
			Possession->Revive();
		}

		NetherMap->DrawTrans(Screen->GetBack());
		MyPlayer.Draw();
		CombatOn = false;

		StartMusic((char*)"music/BEORNECA.S3M");
	} // Nether World Area
	else if (Area == DEEPNETHERWORLD)
	{
		// Entering the Deep Nether World
		bInit = true;
		StopMusic();
		
		// Clear out character map array.
		ClearArray();

		Ayli.Die();
		DragonSpawn.Die();
		HenchDemon.Die();
		TownFolk5.Die();
		DemonTownBoss.Die();
		Neacres.Die();
		TownFolk1.Die();
		TownFolk2.Die();
		TownFolk3.Die();
		TownFolk4.Die();
		Possession->Die();

		Possession->SetText((char*)"Beorne:\nI have had enough of your games, possession!", 1);
		Possession->SetText((char*)"Possession:\nAh, Beorne. Your rage fuels the fires of this world. Now that my body is complete, I will summon forth the ultimate destructor. The souls of this world shall be mine!", 2);
		Possession->SetText((char*)"Beorne:\nI have no time to enjoy our pending victory. I have one more item to deal with and my plan will be complete.", 3);
		Possession->SetText((char*)"Possession:\nCryn is of no concern to me. I must leave now to summon the fate of this world. Enter the demon gate when you are ready to leave.", 4);

		Fountain.Revive();
		Fountain.Map = DeepNetherMap;
		Fountain.Map2 = DeepNetherMapTop;
		Fountain.SetPosTile(69, 8);
		Fountain.StandStill();

		Eyes->Revive();
		Spine->Revive();
		Brain->Revive();
		Heart->Revive();

		for (int i=0; i<MAX_MIST_SPOTS; i++)
		{
			MistSpots[i].Map = DeepNetherMap;
			MistSpots[i].Map2 = DeepNetherMapTop;
			MistSpots[i].MoveRandomSpot();
		}

		//
		// Change character to Beorne.
		//
		CDXTile *Tile = new CDXTile();
		if (Tile->Create(Screen, (char*)"tiles/beorne_posessed.bmp", 40, 40, 0) == FALSE)
			CDXError( Screen , (char*)"could not load tiles from file beorne_posessed.bmp" );
		MyPlayer.LoadedTile = Tile;
		MyPlayer.Load(Screen, Input, Sound, DeepNetherMap, DeepNetherMapTop, MOVE_RIGHT, (char*)"tiles/demonsoldier.bmp", 40, 40);

		MyPlayer.Map = DeepNetherMap;
		MyPlayer.Map2 = DeepNetherMapTop;

		DeepNetherMap->DrawTrans(Screen->GetBack());

		MyPlayer.Draw();
		CombatOn = true;

		if (Location >= 101)
		{
			Eyes->Die();
		}

		if (Location >= 102)
		{
			Spine->Die();
		}

		if (Location >= 103)
		{
			Heart->Die();
		}

		if (Location >= 104)
		{
			Brain->Die();
		}

		if (Location >= 105)
		{
			Possession->Revive();
			Possession->SetMap(DeepNetherMap);
			Possession->Map2 = DeepNetherMapTop;
			Possession->SetPosTile(126, 18);
			Possession->StandStill();
		}

		if (Location >= 107)
		{
			Possession->Die();
		}

		StartMusic((char*)"music/BEORNECA.S3M");
	}
	else if (Area == NETHERWORLD && Location > 99)
	{
		// Entering the Nether World area for final showdown.
		bInit = true;
		StopMusic();
		
		// Clear out character map array.
		ClearArray();

		DragonSpawn.Die();
		Fountain.Die();
		HenchDemon.Die();
		TownFolk5.Die();
		DemonTownBoss.Die();

		MyPlayer.Map = NetherMap;
		MyPlayer.Map2 = NetherMapTop;

		// Changing townfolk into cityguard and setting him up.
		TownFolk1.Die();
		TownFolk2.Die();
		TownFolk3.Die();
		TownFolk4.Die();
		
		Neacres.Revive();
		Neacres.SetPosTile(1, 16);
		Neacres.StandStill();
		Neacres.Map = NetherMap;
		Neacres.Map2 = NetherMapTop;
		Neacres.SetText((char*)"Cryn:\nNeacres! What are you doing down here!", 1);
		Neacres.SetText((char*)"Neacres:\nCryn, my boy. I have a surprise for you. My, my, the brotherly rivalry is amazing, isnt' it?", 2);
		Neacres.SetText((char*)"Cryn:\nYou know where Beorne is, don't you! And what have you done with Ayli?", 3);
		Neacres.SetText((char*)"Neacres:\nYes, yes, all those questions shall be answered. Ayli is here, on her own free will. So is Beorne.. and he's been waiting for you.", 4);
		Neacres.SetText((char*)"Cryn:\nThen I won't make him wait any longer!", 5);
		Neacres.SetText((char*)"Neacres:\nI just love a good fight of family fueds. See you soon.", 6);
		
		Ayli.Revive();
		Ayli.SetPosTile(51, 6);
		//Ayli.SetPosTile(53, 5);
		Ayli.SetArea(45, 3, 96, 20);
		Ayli.Map = NetherMap;
		Ayli.Map2 = NetherMapTop;
		Ayli.SetText((char*)"Ayli:\nOh, Cryn! Please, listen to me! It was not my fault, I.. I..", 1);
		Ayli.Follow(&MyPlayer);

		Beorne.Revive();
		Beorne.SetPosTile(98, 1);
		Beorne.StandStill();
		Beorne.Map = NetherMap;
		Beorne.Map2 = NetherMapTop;
		Beorne.SetText((char*)"Cryn:\nBeorne..", 1);
		Beorne.SetText((char*)"Beorne:\nWelcome to my castle, Cryn. For a moment there, I didn't think you would make it here, but Ayli is so skilled at her work.", 2);
		Beorne.SetText((char*)"Cryn:\nAyli would never work for you!", 3);
		Beorne.SetText((char*)"Beorne:\nha ha, thats funny, Cryn. She was all too eager to assist me in leading you here. Did you really think the trapped demon scene at the castle ruins was real?", 4);
		Beorne.SetText((char*)"Cryn:\nWhat do you want, Beorne? Why are you doing this!", 5);
		Beorne.SetText((char*)"Beorne:\nYou are so gullible, Cryn. I've kept you alive long enough for me to complete my final offerings. Only one last offering remains, Cryn. Can you guess what that might be?", 6);
		Beorne.SetText((char*)"Cryn:\nYou are completely mad, Beorne! I am no longer the child you fought in the ancient tree and I will use all of my might to stop you!", 7);
		Beorne.SetText((char*)"Beorne:\nYou are pathetic, Cryn. You almost make this too easy. I will be waiting for you at the entrance of the battle platform. Don't even think about running. After all, there is no way out.", 8);

		if (Location >= 111)
		{
			Neacres.SetPosTile(96, 1);
			Neacres.StandStill();
			Neacres.SetText((char*)"Neacres:\n...");
		}

		if (Location >= 112)
		{
			Ayli.SetText((char*)"Ayli:\nBe careful, Cryn.");
			Ayli.SetPosTile(96, 3);
			Ayli.UnFollow(&MyPlayer);
			Ayli.StandStill();
		}

		if (Location >= 113)
		{
			Beorne.SetPosTile(23, 7);
			Beorne.StandStill();
			Beorne.SetText((char*)"Beorne:\nAre you ready, Cryn? Remember what happened the last we did this?\nha ha ha");
		}

		if (Location >= 114)
		{
			Beorne.SetPosTile(20, 8);
			Beorne.SetText((char*)"Beorne:\nMake your move, Cryn.");
		}

		if (Location >= 115)
		{
			Beorne.SetText((char*)"Beorne:\narg... uhhh...", 1);
			Beorne.SetText((char*)"Cryn:\nMy.. own.. brother..", 2);
			Beorne.SetText((char*)"Cryn:\nNo, I will not kill him.", 3);
		}

		if (Location >= 116)
		{
			Possession->Revive();
			Possession->SetMap(NetherMap);
			Possession->Map2 = NetherMapTop;
			Possession->SetPosTile(19, 8);
			Possession->StandStill();
			Possession->SetText((char*)"Possession:\nYou will finish him, Cryn. Think about all the pain he has caused your\nworld. Finish him now, Cryn.", 1);
			Possession->SetText((char*)"Cryn:\nNo. I know my brother is still there, somewhere inside. Even through all he has done, he is still my brother.", 2);
			Possession->SetText((char*)"Possession:\nFinish him, Cryn! Do not let him torment another soul! Put an end to his misery!", 3);
			Possession->SetText((char*)"Cryn:\nNo, I won't kill him!", 4);
			Possession->SetText((char*)"Possession:\nYou fool! Don't you see? It doesn't matter which one of you kills the other so long as one of you dies by the other's hand!", 5);
			Possession->SetText((char*)"Cryn:\nThis is your doing! You poisoned his mind and controlled him all along! You knew in his weakened state that I would beat him and you lead him to his death!", 6);
			Possession->SetText((char*)"Possession:\nYou will kill him, if not by your own free will.. then by mine!", 7);
			Possession->SetText((char*)"[ The possession begins morhping into a huge monster constructed of\nbody parts.. It is the Ultimate Destructor ]", 8);
		}

		if (Location >= 120)
		{
			Possession->Die();
			Beorne.SetText((char*)"Cryn:\nBeorne ..", 1);
			Beorne.SetText((char*)"Beorne:\nCryn, I.. am.. sorry.. [ dies ]", 2);
		}

		NetherMap->DrawTrans(Screen->GetBack());
		MyPlayer.Draw();
		CombatOn = false;

		StartMusic((char*)"music/treetrun.s3m");
	} // Nether World Area

	if (bInit)
	{
		// Align map to proper saved position.
		MyPlayer.Map->MoveTo(MapX, MapY);
		MyPlayer.Map2->MoveTo(Map2X, Map2Y);
		MyNPCCharacterMapStruct.CharacterMap[MyPlayer.GetTileX()][MyPlayer.GetTileY()] = 1;
	}
}


void CheckBossWins()
{
	// This checks for special stuff after a battle is over.
	if (strcmp(MyBattleEngine.Monsters[0].Name, (char*)"Lineer")==0 && Location < 5 && !MyBattleEngine.isRun())
	{
		// Defeated Lineer, you gain Bonus Attack skill.
		ForestMonster.Die();
		Location = 5;
		MyPlayer.bBonusAttackOn = true;
		SaveGame();
		CInfoBox MyBox(Screen, Input, Sound, 2);
		MyBox.Display2((char*)"You find a firey red jewel on Lineer. You feel your muscles surge and your mind clear.\n\nYou can now gain a bonus attack when striking at the right time in battle.");
	}
	else if (strcmp(MyBattleEngine.Monsters[0].Name, (char*)"King Tree Ent")==0 && Location < 35 && !MyBattleEngine.isRun())
	{
		// Defeated King Tree Ent, story unfolds.
		Location = 30;
		Area = TREETRUNKFINAL;
		SaveGame();
		Beorne.SetPosTile(26, 5);
		Beorne.UnFollow(&MyPlayer);
		Beorne.SetArea(25, 3, 28, 7);
		Beorne.Load(Screen, Input, Sound, TreeTrunkMap, TreeTrunkMapTop, MOVE_RIGHT, (char*)"tiles/beorne_posessed.bmp", 40, 40);
	}
	else if (strcmp(MyBattleEngine.Monsters[0].Name, (char*)"Demoniz 1")==0 && Location < 40 && !MyBattleEngine.isRun())
	{
		Demon1.Die();
		Location++;
	}
	else if (strcmp(MyBattleEngine.Monsters[0].Name, (char*)"Demoniz 2")==0 && Location < 40 && !MyBattleEngine.isRun())
	{
		Demon2.Die();
		Location++;
	}
	else if (strcmp(MyBattleEngine.Monsters[0].Name, (char*)"Demoniz 3")==0 && Location < 40 && !MyBattleEngine.isRun())
	{
		Demon3.Die();
		Location++;
	}
	
	if (Location == 36 &&
		!Demon1.isAlive() && !Demon2.isAlive() && !Demon3.isAlive())
	{
		// Killed all 3 demonizs, now Beorne attacks.
		Location = 37;
	}
	else if (Location == 44 && strcmp(MyBattleEngine.Monsters[0].Name, (char*)"Major Demon")==0 && !MyBattleEngine.isRun())
	{
		HenchDemon.Die();
		Location = 45;
	}
	else if (Location >= 44 && strcmp(MyBattleEngine.Monsters[0].Name, (char*)"Kaputos")==0 && !MyBattleEngine.isRun())
	{
		HenchDemon.Die();
		BossDemon.Die();
		Location = 46;
	}

	if (Area == FORESTCAMP)
	{
		for (int i=0; i<MAX_DEMON_SOLDIERS; i++)
		{
			if (strcmp(MyBattleEngine.Monsters[0].Name, (char*)"Demon Soldier")==0 && Area == FORESTCAMP && !MyBattleEngine.isRun())
			{
				if (MyBattleEngine.iTemp > -1)
					DemonSoldiers[MyBattleEngine.iTemp]->Die();
			}
		}
	}

	if (Area == DEMONPIT && strcmp(MyBattleEngine.Monsters[0].Name, (char*)"Major Demon")==0 && !MyBattleEngine.isRun())
	{
		// Move to next battle location.
		HenchDemon.SetPosTile(77, 48);
		HenchDemon.SetArea(77, 48, 76, 48);
		HenchDemon.SetText((char*)"Major Demon:\nYou will not pass this time boy!", 1);
		HenchDemon.SetText((char*)"Cryn:\nYou again? Didn't I already kill you on the other platform?", 2);
		HenchDemon.SetText((char*)"Ayli:\nDon't let him mess with your mind Cryn. These demons are manufactured\nand all seem the same.", 3);
		HenchDemon.SetText((char*)"Cryn:\nGood, then we should have no problem killing them all the same!", 4);

		HenchDemon.Die();
	}
	else if (Area == DEMONPIT && strcmp(MyBattleEngine.Monsters[0].Name, (char*)"Pool Gaurdian")==0 && !MyBattleEngine.isRun() && Location < 55)
	{
		// Time for dragon spawn to capture Ayli.
		DragonSpawn.SetPosTile(52, 1);
		Ayli.UnFollow(&MyPlayer);
		Ayli.SetPosTile(51, 1);
		Ayli.StandStill();
		DragonSpawn.StandStill();

		DragonSpawn.SetText((char*)"Cryn:\nAyli!", 1);
		DragonSpawn.SetText((char*)"Ayli:\nCryn, HELP!", 2);
		DragonSpawn.SetText((char*)"Pool Gaurdian:\nHa ha ha, one way or another, you're coming with me.", 3);

		NewScreenSound->Play();
		
		Location = 55;
	}
	else if (Area == DEMONPIT && strcmp(MyBattleEngine.Monsters[0].Name, (char*)"Pool Gaurdian")==0 && !MyBattleEngine.isRun() && Location == 58)
	{
		DragonSpawn.Die();
		Location = 59;
	}
	else if (Area == DEMONTOWN && strcmp(MyBattleEngine.Monsters[0].Name, (char*)"Rii")==0 && !MyBattleEngine.isRun() && Location < 85)
	{
		Location = 83;
	}
	else if (Area == NETHERWORLD && strcmp(MyBattleEngine.Monsters[0].Name, (char*)"City Guard 1")==0 && !MyBattleEngine.isRun())
	{
		TownFolk1.Die();
		Location = 93;
		Ayli.UnFollow(&MyPlayer);
		Ayli.SetText((char*)"Ayli:\nI have nothing more to say to you.", 1);
	}
	else if (Area == NETHERWORLD && strcmp(MyBattleEngine.Monsters[0].Name, (char*)"City Guard 2")==0 && !MyBattleEngine.isRun())
	{
		TownFolk2.Die();
		Location = 94;
	}
	else if (Area == NETHERWORLD && strcmp(MyBattleEngine.Monsters[0].Name, (char*)"City Guard 3")==0 && !MyBattleEngine.isRun())
	{
		TownFolk3.Die();
		Location = 95;
	}
	else if (Area == NETHERWORLD && strcmp(MyBattleEngine.Monsters[0].Name, (char*)"City Guard 4")==0 && !MyBattleEngine.isRun())
	{
		TownFolk4.Die();
		Location = 96;
	}
	else if (Area == DEEPNETHERWORLD && strcmp(MyBattleEngine.Monsters[0].Name, (char*)"Nether Eye")==0 && !MyBattleEngine.isRun())
	{
		Eyes->Die();
		Location = 101;
	}
	else if (Area == DEEPNETHERWORLD && strcmp(MyBattleEngine.Monsters[0].Name, (char*)"Nether Spine")==0 && !MyBattleEngine.isRun())
	{
		Spine->Die();
		Location = 102;
	}
	else if (Area == DEEPNETHERWORLD && strcmp(MyBattleEngine.Monsters[0].Name, (char*)"Nether Heart")==0 && !MyBattleEngine.isRun())
	{
		Heart->Die();
		Location = 103;
	}
	else if (Area == DEEPNETHERWORLD && strcmp(MyBattleEngine.Monsters[0].Name, (char*)"Nether Brain")==0 && !MyBattleEngine.isRun())
	{
		Brain->Die();
		Location = 104;
	}
	else if (Area == NETHERWORLD && strcmp(MyBattleEngine.Monsters[0].Name, (char*)"Beorne")==0 && !MyBattleEngine.isRun())
	{
		Location = 115;
	}
	else if (Area == NETHERWORLD && strcmp(MyBattleEngine.Monsters[0].Name, (char*)"Ultimate Destructor")==0 && !MyBattleEngine.isRun())
	{
		Location = 120;
	}

}

void DrawSnow()
{
	static int iDirection = 0;
	static int iTicker = 0;

	if (iTicker++ > 100)
	{
		// Minimum snow must blow for at least 100 ticks in same direction.

		int r = rand() % 30;
		if (r < 8)
		{
			// Blowing snow left.
			iDirection = -1;
			iTicker = 0;
		}
		else if (r > 22)
		{
			// Blowing snow right.
			iDirection = 1;
			iTicker = 0;
		}
		else
		{
			// Straight down.
			iDirection = 0;
			iTicker = 0;
		}
	}

	// Show some of snow falling.
/*	if (1)
	{
		for (int i=0; i<5; i++)
		{
			Blizzard[i].Move(iDirection);
			Blizzard[i].Draw();
		}
	}
	else if ((Location >= 6.1 && Location < 6.3) ||
		     (Location > 8.6 && Location < 9.0))
	{
		for (int i=0; i<30; i++)
		{
			Blizzard[i].Move(iDirection);
			Blizzard[i].Draw();
		}
	}
	else if (Location > 6.2 && Location < 6.4)
	{
		for (int i=0; i<MAX_SNOWFLAKES; i++)
		{
			Blizzard[i].Move(iDirection);
			Blizzard[i].Draw();
		}
	}
	else if (Location >= 7.0 && Location < 8.0)
	{
		for (int i=0; i<10; i++)
		{
			Blizzard[i].Move(iDirection);
			Blizzard[i].Draw();
		}
	}*/
}

void DrawFireDrops()
{
	static int iDirection = 0;
	static int iTicker = 0;

	if (iTicker++ > 100)
	{
		// Minimum fire must blow for at least 100 ticks in same direction.
		int r = rand() % 30;
		if (r < 8)
		{
			// Blowing snow left.
			iDirection = -1;
			iTicker = 0;
		}
		else if (r > 22)
		{
			// Blowing snow right.
			iDirection = 1;
			iTicker = 0;
		}
		else
		{
			// Straight down.
			iDirection = 0;
			iTicker = 0;
		}
	}

	// Show some of fire falling.
	for (int i=0; i<5; i++)
	{
		FireDrops[i].Move(iDirection);
		FireDrops[i].Draw();
	}
}

void DrawThunder()
{
	int r = rand() % 500;
	if (r < 3)
	{
		Screen->Fill(RGB(255,255,255)); // flash white
		Boom1Sound->Play();
	}
}

void DrawRain()
{
	static int iDirection = 0;
	static int iTicker = 0, iTicker2 = 0, iUntilRain = 0;
	static bool isRaining = false;
	static int SoftRain = 5;
	static int MediumRain = 10;
	static int HardRain = 12; // 25

//	char msg[100];
//	sprintf(msg, (char*)"iUntilRain = %d", iUntilRain);
//	CDXMenu menu; menu.TextXY(Screen->GetBack(), 10, 400, RGB(255,255,0), msg);

	if (iUntilRain++ > 600)
	{
		iUntilRain = 0;
		if (isRaining)
			isRaining = false;
		else
			isRaining = true;
	}

	if (!isRaining)
		return;

	if (iTicker++ > 100)
	{
		iTicker2++;
		if (iTicker2 > 16)
		{
			// Reset for big rain.
			iTicker2 = 0;
		}

		// Minimum rain must fall for at least 100 ticks in same direction.
		int r = rand() % 30;
		if (r < 8)
		{
			// Raining left.
			iDirection = -1;
			iTicker = 0;
		}
		else if (r > 22)
		{
			// Raining right.
			iDirection = 1;
			iTicker = 0;
		}
		else
		{
			// Straight down.
			iDirection = 0;
			iTicker = 0;
		}
	}

	// Show rain falling.
	if (iTicker2 < 4)
	{
		for (int i=0; i<SoftRain; i++)
		{
			Rain[i].SoftRain();
			Rain[i].Move(iDirection);
			Rain[i].Draw();
		}
	}
	else if (iTicker2 < 8)
	{
		for (int i=0; i<MediumRain; i++)
		{
			Rain[i].Move(iDirection);
			Rain[i].Draw();
		}
	}
	else
	{
		for (int i=0; i<HardRain; i++)
		{
			Rain[i].HardRain();
			Rain[i].Move(iDirection);
			Rain[i].Draw();
		}
		if (iUntilRain > 995) iUntilRain = 995;
	}
	
	if (iTicker2 == 15)
	{
		iUntilRain = 720; // stop raining soon.
		iTicker2 = 0;
	}

	int r = rand() % 500;
	if (r < 2 || (iTicker2 > 9 && r < 4))
	{
		Screen->Fill(RGB(255,255,255)); // flash white
		Boom1Sound->Play();
	}
	else if (r < 10)
		Rain1Sound->Play();
}

void DrawBlackRain()
{
	static int iDirection = 0;
	static int iTicker = 0, iTicker2 = 0, iUntilRain = 0;
	static bool isRaining = false;

//	char msg[100];
//	sprintf(msg, (char*)"iUntilRain = %d", iUntilRain);
//	CDXMenu menu; menu.TextXY(Screen->GetBack(), 10, 400, RGB(255,255,0), msg);

	if (iUntilRain++ > 10)
	{
		iUntilRain = 0;
		if (isRaining)
			isRaining = false;
		else
			isRaining = true;
	}

	if (!isRaining)
		return;

	if (iTicker++ > 100)
	{
		iTicker2++;
		if (iTicker2 > 16)
		{
			// Reset for big rain.
			iTicker2 = 0;
		}

		// Minimum rain must fall for at least 100 ticks in same direction.
		int r = rand() % 30;
		if (r < 8)
		{
			// Raining left.
			iDirection = -1;
			iTicker = 0;
		}
		else if (r > 22)
		{
			// Raining right.
			iDirection = 1;
			iTicker = 0;
		}
		else
		{
			// Straight down.
			iDirection = 0;
			iTicker = 0;
		}
	}

	// Show rain falling.
	if (iTicker2 < 4)
	{
		for (int i=0; i<5; i++)
		{
			BlackRain[i].SoftRain();
			BlackRain[i].Move(iDirection);
			BlackRain[i].Draw();
		}
	}
	else if (iTicker2 < 8)
	{
		for (int i=0; i<15; i++)
		{
			BlackRain[i].Move(iDirection);
			BlackRain[i].Draw();
		}
	}
	else
	{
		for (int i=0; i<25; i++)
		{
			BlackRain[i].HardRain();
			BlackRain[i].Move(iDirection);
			BlackRain[i].Draw();
		}
		if (iUntilRain > 995) iUntilRain = 995;
	}
	
	if (iTicker2 == 15)
	{
		iUntilRain = 720; // stop raining soon.
		iTicker2 = 0;
	}

	int r = rand() % 500;
	if (r < 2 || (iTicker2 > 9 && r < 4))
	{
		Screen->Fill(RGB(0,0,255)); // flash red
		//Boom1Sound->Play();
	}
//	else if (r < 10)
//		Rain1Sound->Play();
}

void DrawGnats()
{
	int r = rand () % 160;
	if (r == 1)
		Gnat1Sound->Play();
	else if (r == 2)
		Gnat2Sound->Play();

	for (int i=0; i<MAX_GNATS; i++)
	{
		Gnats[i].Move();
		Gnats[i].Draw();
	}
}

void DrawClouds()
{
	for (int i=0; i<MAX_CLOUDS; i++)
	{
		if (Clouds[i] != NULL)
		{
			Clouds[i]->Move();
			Clouds[i]->Draw2();
		}
	}
}

void DrawBats()
{
	for (int i=0; i<MAX_BATS; i++)
	{
		Bats[i].Move();
		Bats[i].Draw();
	}
}

/*void DrawBranches()
{
	if (MyPlayer.MoveStep > 0)
	for (int i=0; i<MAX_BRANCHES; i++)
	{
		if (MyPlayer.Direction == LEFT)
			Branch[i].Move(LEFT);
		else if (MyPlayer.Direction == RIGHT)
			Branch[i].Move(RIGHT);
		else if (MyPlayer.Direction == UP)
			Branch[i].Move(UP);
		else if (MyPlayer.Direction == DOWN)
			Branch[i].Move(DOWN);
	}

	for (int i=0; i<MAX_BRANCHES; i++)
	{
		Branch[i].Draw();
	}
}*/

void DrawFallingLeaf()
{
	for (int i=0; i<MAX_LEAVES; i++)
	{
		FallingLeaves[i].Move();
		FallingLeaves[i].Draw();
	}
}

//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////
void ShowMenu(CMenu *MyMenu)
{
	MenuOpenSound->Play();

	MyMenu->Load(Screen, Input, Sound, (char*)"Stats Screen");
	MyMenu->AddItem((char*)"[ BACK TO GAME ]");
    MyMenu->SetPos(200, 85);
	//
	// Insert Stats for Player Here
	//
	char strText[1000];
	char buf[10];
	if ((Area == NETHERWORLD && Location < 100) || Area == DEEPNETHERWORLD)
	{
		MyMenu->AddItem((char*)"Beorne", false);
	}
	else
	{
		MyMenu->AddItem((char*)"Cryn", false);
	}
	
	strcpy(strText, (char*)"Level: ");
	_itoa(MyPlayer.Level, buf, 10);
	strcat(strText, buf);
	MyMenu->AddItem(strText, false);

	strcpy(strText, (char*)"XP: ");
	_itoa(MyPlayer.Exp, buf, 10);
	strcat(strText, buf);
	strcat(strText, (char*)" / ");
	strcat(strText, _itoa(MyPlayer.NextXP(), buf, 10));
	MyMenu->AddItem(strText, false);

	strcpy(strText, (char*)"HP: ");
	_itoa(MyPlayer.HP, buf, 10);
	strcat(strText, buf);
	strcat(strText, (char*)" / ");
	strcat(strText, _itoa(MyPlayer.MaxHP, buf, 10));
	MyMenu->AddItem(strText, false);

	strcpy(strText, (char*)"MP: ");
	_itoa(MyPlayer.MP, buf, 10);
	strcat(strText, buf);
	strcat(strText, (char*)" / ");
	strcat(strText, _itoa(MyPlayer.MaxMP, buf, 10));
	MyMenu->AddItem(strText, false);

	strcpy(strText, (char*)"Gold: ");
	_itoa(MyPlayer.Gold, buf, 10);
	strcat(strText, buf);
	MyMenu->AddItem(strText, false);

/*	switch (MyPlayer.GameSpeed)
	{
		case 10 : MyMenu->AddItem((char*)"Speed: 1 Fastest"); break;
		case 15 : MyMenu->AddItem((char*)"Speed: 2 Normal"); break;
		case 20 : MyMenu->AddItem((char*)"Speed: 3 Moderate"); break;
		case 25 : MyMenu->AddItem((char*)"Speed: 4 Slow"); break;
		case 30 : MyMenu->AddItem((char*)"Speed: 5 Slower"); break;
		case 35 : MyMenu->AddItem((char*)"Speed: 6 Too Slow"); break;
		case 40 : MyMenu->AddItem((char*)"Speed: 7 Crawling"); break;
		case 45 : MyMenu->AddItem((char*)"Speed: 8 Frozen"); break;
		case 50 : MyMenu->AddItem((char*)"Speed: 9 Oh Boy"); break;
		default: MyMenu->AddItem((char*)"Speed: Normal (2)"); break;
	};*/
	char strSpeed[1000];
	strcpy(strSpeed, (char*)"Speed Delay: ");
	strcat(strSpeed, _itoa(MyPlayer.GameSpeed, buf, 10));
	MyMenu->AddItem(strSpeed, false);

	MyMenu->AddItem((char*)"[ SAVE GAME ]");
	MyMenu->AddItem((char*)"[ SLOWER GAME ]");
	MyMenu->AddItem((char*)"[ FASTER GAME ]");
	MyMenu->AddItem((char*)"[ QUIT ]");
}

void OperateMenu(CMenu *MyMenu)
{
	// Waits for user input from the menu.
	int r = -1;
	while (r != 0 && r != 11)
	{
		r = MyMenu->Popup();

		if (r == 8)
		{
			SaveGame();
			CInfoBox MyBox(Screen, Input, Sound, 2);
			MyBox.Display2((char*)"Your game has been saved.");
		}
		if (r == 9)
		{
			CInfoBox MyBox(Screen, Input, Sound, 2);
			if (MyPlayer.GameSpeed < 50)
			{
				MyPlayer.GameSpeed += 2;
				SaveGame();
				MyBox.Display2((char*)"Game Speed is now slower.");
				ShowMenu(MyMenu);
			}
			else
			{
				MyBox.Display2((char*)"Game Speed already at slowest.");
			}
		}
		if (r == 10)
		{
			CInfoBox MyBox(Screen, Input, Sound, 2);
			if (MyPlayer.GameSpeed > 0)
			{
				MyPlayer.GameSpeed -= 2;
				SaveGame();
				MyBox.Display2((char*)"Game Speed is now faster.");
				ShowMenu(MyMenu);
			}
			else
			{
				MyBox.Display2((char*)"Game Speed already at fastest.");
			}
		}
		if (r == 11)
		{
			PostMessage(g_hWnd, WM_CLOSE, 0, 0);
		}
	}

	if (r == 0)
	{
		MenuOpenSound->Play();
	}
}

void ShowDieMenu(CMenu *MyMenu)
{
	MyMenu->Load(Screen, Input, Sound, (char*)"You have been killed");
    MyMenu->SetPos(200, 185);
	MyMenu->AddItem((char*)"[ Restart Game ]");
	MyMenu->AddItem((char*)"[ Quit ]");
}

void OperateDieMenu(CMenu *MyMenu)
{
	// Waits for user input from the menu.
	int r = -1;
	while (r == -1)
	{
		r = MyMenu->Popup();

		if (r == 0)
		{
			StopMusic();
			ClearArray();
			if (MyPlayer.LoadGame())
			{
				Area = MyPlayer.Area;
				Location = MyPlayer.StoryLocation;
//				MyNPCCharacterMapStruct.CharacterMap[MyPlayer.GetTileX()][MyPlayer.GetTileY()] = 1;
				Beorne.SetPosTile(MyPlayer.BeorneTileX, MyPlayer.BeorneTileY);
				Ayli.SetPosTile(MyPlayer.AyliTileX, MyPlayer.AyliTileY);
				InitLevel(MyPlayer.MapX, MyPlayer.MapY, MyPlayer.Map2X, MyPlayer.Map2Y);
			}
			else
			{
				// Looks like there was no saved game, back to beginning for them.
				Beorne.SetPosTile(10, 6);
				MyPlayer.SetPosTile(37, 8);
				ForestMap->MoveTo(30*40, 0);
				ForestMapTop->MoveTo(30*40, 0);
				MyPlayer.Area = FOREST;
				Location = 0;
				Area = FOREST;
				MyPlayer.BeorneTileX = 10;
				MyPlayer.BeorneTileY = 6;
				MyPlayer.Map = ForestMap;
				MyPlayer.Map2 = ForestMapTop;
				Beorne.Map = ForestMap;
				Beorne.Map2 = ForestMapTop;
				MyPlayer.HP = MyPlayer.MaxHP;
				MyPlayer.MP = MyPlayer.MaxMP;
				MyPlayer.Exp = 0;
				MyPlayer.bCrystalClearOn = false;
				MyPlayer.bBonusAttackOn = false;
				MyPlayer.Gold = 0;
				MyPlayer.Level = 1;
				MyPlayer.StoryLocation = 0;
				MyPlayer.iWeapon = SHORTSWORD;
				MyPlayer.iArmor = ARMOR_9;
				CombatOn = true;

				StartMusic((char*)"music/forestmu.s3m");
			}

			// Begin drawing screen.
			cdx_DoFrame(false);
			
			Screen->FadeToSource(1500);
			Screen->Flip();
		}
		if (r == 1)
		{
			PostMessage(g_hWnd, WM_CLOSE, 0, 0);
		}
	}
}


// ------------------------------------------------------------------
// WinProc - handles application messages
// ------------------------------------------------------------------
static long PASCAL WinProc(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam)
{
	switch(message)
	{
		case WM_ACTIVATEAPP:    g_IsAppActive = wParam;     // set if app is active or not
			                    return 0;

		case WM_KEYDOWN:	switch(wParam)
			                {
			                    case VK_ESCAPE:         // if ESC key is hit, quit program
									CMenu MyMenu;
									ShowMenu(&MyMenu);
									OperateMenu(&MyMenu);
				                break;
			                }
			                return  0;
		
		case WM_SETCURSOR:  SetCursor(NULL);    // hide the mouse cursor
                			return 1;

		case WM_CLOSE:		Screen->GetBack()->Fill(0);
							Screen->FadeToBlack(600);
							cdx_DeInit();

		case WM_DESTROY:	PostQuitMessage(0);
		                    return 0;

		default:        	return  DefWindowProc(hWnd, message, wParam, lParam);
	}
}



// ------------------------------------------------------------------
// ChangeToEXEDir - sets CWD to the DIR the EXE is in
// ------------------------------------------------------------------
static void ChangeToEXEDir()
{
/*	char buf[MAX_PATH];
	char *cptr;

	//now change the directory
	//to make sure were accessing the proper file
	GetModuleFileName(NULL, buf, MAX_PATH);

	//move pointer to end of string

	cptr = buf + lstrlen(buf);

	//find the end of the path
	do
	{
		cptr--;
	} while (*cptr != '\\');
	cptr++;
	*cptr='\0';

	//change directory
	SetCurrentDirectory(buf);*/
}



// ------------------------------------------------------------------
// InitApp - Create the window and the CDX objects
// ------------------------------------------------------------------
static BOOL InitApp(int nCmdShow)
{
	WNDCLASS WndClass;

	WndClass.style = CS_HREDRAW | CS_VREDRAW;
	WndClass.lpfnWndProc = (WNDPROC)WinProc;
	WndClass.cbClsExtra = 0;
	WndClass.cbWndExtra = 0;
	WndClass.hInstance = g_hInst;
	WndClass.hIcon = LoadIcon(g_hInst, (LPCTSTR)"APPICON");
	WndClass.hCursor = LoadCursor(0, IDC_ARROW);
	WndClass.hbrBackground = (HBRUSH)GetStockObject(BLACK_BRUSH);
	WndClass.lpszMenuName = 0;
	WndClass.lpszClassName = (LPCTSTR)szClassName;
	RegisterClass(&WndClass);

	g_hWnd = (HWND)CreateWindowEx(
		WS_EX_TOPMOST,
		szClassName,
		szAppName,
 		WS_POPUP,
		0,
		0,
		GetSystemMetrics(SM_CXFULLSCREEN),
		GetSystemMetrics(SM_CYFULLSCREEN),
		NULL,
		NULL,
		g_hInst,
		NULL);

    // when hWnd = -1 there was an error creating the main window
    // CDXError needs a CDXScreen object, if there is none at this early
    // program stage, pass it NULL
	if (!g_hWnd)
	{
		CDXError(NULL, (char*)"could not create the main window");
		exit(0);
	}

	ShowWindow(g_hWnd, nCmdShow);
	ShowCursor(false);

	UpdateWindow(g_hWnd);

	ChangeToEXEDir();
	
	return TRUE;
}

// ------------------------------------------------------------------
// WinMain - inital function called by windows
// ------------------------------------------------------------------
int PASCAL WinMain(HINSTANCE hInstance, HINSTANCE hPrevInst, LPSTR lpCmdLine, int nCmdShow)
{
	MSG msg;

	// save the app instance
	g_hInst = hInstance;


	if(!InitApp(nCmdShow)) 
        CDXError( NULL , (char*)"could not initialize application" );

	if(!cdx_Init())
	{
		PostQuitMessage(0);
		return FALSE;
	}

	while(1)
	{
		if(PeekMessage(&msg, NULL, 0, 0, PM_NOREMOVE))
		{
			if(!GetMessage(&msg, NULL, 0, 0 )) return msg.wParam;
			TranslateMessage(&msg); 
			DispatchMessage(&msg);
		}
		else if(g_IsAppActive)
		{
			cdx_DoFrame();
		}
		else
		{
			WaitMessage();
		}
	}
}

void StopMusic()
{
	BASS_Pause();	/* Stop digital output */
	BASS_Free();	/* Close digital sound system */
	BASS_Init(-1,44100,0,g_hWnd,NULL);
//	BASS_CDInit(NULL);
}

void StartMusic(char *s3mfilename)
{
	BASS_Start();
	HMUSIC mod;

	if (mod = BASS_MusicLoad(FALSE,s3mfilename,0,0,BASS_MUSIC_RAMP |BASS_MUSIC_POSRESET |BASS_SAMPLE_FLOAT |BASS_MUSIC_FT2MOD| BASS_MUSIC_AUTOFREE| BASS_MUSIC_LOOP,0)) 
	{
//		BASS_MusicSetAmplify(mod, 68);
		BASS_ChannelPlay(mod,false);
	} 
}

void ClearArray()
{
	// Clears the character NPC array of blocking objects.
	// Clear out character map array.
	for (int k=0; k<MAX_WIDTH; k++)
	{
		for (int j=0; j<MAX_HEIGHT; j++)
		{
			MyNPCCharacterMapStruct.CharacterMap[k][j] = 0;
			EmptyNPCCharacterMapStruct.CharacterMap[k][j] = 0;
		}
	}
}

void SaveGame()
{
	MyPlayer.StoryLocation = Location;
	MyPlayer.Area = Area;
	MyPlayer.BeorneTileX = Beorne.GetTileX();
	MyPlayer.BeorneTileY = Beorne.GetTileY();
	MyPlayer.AyliTileX = Ayli.GetTileX();
	MyPlayer.AyliTileY = Ayli.GetTileY();
	MyPlayer.SaveGame();
}

void CleanupMemory()
{
	static bool bInited = false;

	if (Area >= FORESTCAMP && !bInited)
	{
		bInited = true;

		int color = 100, x = 0;

		Screen->GetBack()->Fill(0);

		CDXTile MyTile;
	    if( MyTile.Create(Screen, (char*)"graphics/loading1.bmp", 200, 200, 0) == FALSE )
			CDXError( Screen , (char*)"could not load tiles from file bat file" );
		// set the top left pixel in tiles bitmap as transparent color
		MyTile.SetColorKey(0);

		CDXSprite MySprite;
		MySprite.Create(&MyTile);
		MySprite.SetFrame(0);
		MySprite.SetPos(170, 120);
		MySprite.SetAlphaValue(/*160*/90);
		MySprite.Draw(Screen->GetBack() , 0, 0, CDXBLT_TRANSALPHA);

		Screen->GetBack()->GetDC();
		Screen->GetBack()->SetFont();
		CDXMenu menu; menu.TextXY(Screen->GetBack(), 190, 350, 255, "LOADING");
		Screen->GetBack()->ReleaseDC();
		Screen->GetBack()->FillRect(190, 380, 190+(x++), 385, RGB565(color++, 0, 0));

		// Fade in.
		Screen->FadeToSource(1500);

		Beorne.UnFollow(&MyPlayer);
		Ayli.UnFollow(&MyPlayer);

		// Cleanup some unused memory.
		SAFEDELETE( ForestMap );
		SAFEDELETE( ForestMapTop );
		SAFEDELETE( SwampCaveMap );
		SAFEDELETE( SwampCaveMapTop );
		SAFEDELETE( TreeMap );
		SAFEDELETE( TreeMapTop );
		SAFEDELETE( TreeTrunkMap );
		SAFEDELETE( TreeTrunkMapTop );
		SAFEDELETE( ForestTiles );
		SAFEDELETE( SwampCaveTiles );
		SAFEDELETE( TreeTiles );
		SAFEDELETE( Gnat1Sound );
		SAFEDELETE( Gnat2Sound );

		Screen->GetFront()->FillRect(190, 380, 190+(x++), 385, RGB565(color++, 0, 0));

		// Delete Unused NPCs.
		Beorne.Die();
		Demon1.Die();
		Demon1.Unload();
		Demon2.Die();
		Demon2.Unload();
		Demon3.Die();
		Demon3.Unload();
		King.Die();
		King.Unload();
		ForestMonster.Die();
		ForestMonster.Unload();
		TreeBoss.Die();
		TreeBoss.Unload();

		Screen->GetFront()->FillRect(190, 380, 190+(x++), 385, RGB565(color++, 0, 0));

		// Delete unused objects.
		for (int i=0; i<MAX_GNATS; i++)
		{
			Gnats[i].Unload();
			Screen->GetFront()->FillRect(190, 380, 190+(x++), 385, RGB565(color++, 0, 0));
		}

		for (int i=0; i<MAX_BATS; i++)
		{
			Bats[i].Unload();
			Screen->GetFront()->FillRect(190, 380, 190+(x++), 385, RGB565(color++, 0, 0));
		}

		for (int i=0; i<MAX_LEAVES; i++)
		{
			FallingLeaves[i].Unload();
			Screen->GetFront()->FillRect(190, 380, 190+(x++), 385, RGB565(color++, 0, 0));
		}

		// Instantiate some needed memory.
		// Pre-load the tile for clouds.
		CDXTile *Tile = new CDXTile();
		if (Tile->Create(Screen, (char*)"graphics/bigcloud.bmp", 100, 23, 0) == FALSE)
			CDXError( Screen , (char*)"could not load tiles from file character bitmap graphics/bigcloud.bmp" );

		for (int i=0; i<MAX_CLOUDS; i++)
		{
			Screen->GetFront()->FillRect(190, 380, 190+(x++), 385, RGB565(color++, 0, 0));

			Clouds[i] = new CCloud;
			Clouds[i]->LoadedTile = Tile;
			Clouds[i]->Load(Screen, Input, Sound, ForestCampMapTop, ForestCampMapTop, MOVE_RIGHT, (char*)"graphics/bigcloud.bmp", 100, 23);
			Clouds[i]->SetPosTile(rand() % 80, rand() % 40);
			Clouds[i]->SetCharacterMap(&EmptyNPCCharacterMapStruct);
			Clouds[i]->SetSingleFrame();
			Clouds[i]->SetAlphaValue(185);
		}

		// Pre-load the tile for demon soldiers.
		Tile = new CDXTile();
		if (Tile->Create(Screen, (char*)"tiles/demon_soldier.bmp", 40, 40, 0) == FALSE)
			CDXError( Screen , (char*)"could not load tiles from file character bitmap tiles/demon_soldier.bmp" );

		for (int i=0; i<MAX_DEMON_SOLDIERS; i++)
		{
			Screen->GetFront()->FillRect(190, 380, 190+(x++), 385, RGB565(color++, 0, 0));

			DemonSoldiers[i] = new CNPC;
			DemonSoldiers[i]->LoadedTile = Tile;
			DemonSoldiers[i]->Load(Screen, Input, Sound, ForestCampMap, ForestCampMapTop, MOVE_RIGHT, (char*)"tiles/demon_soldier.bmp", 40, 40);
			switch (i)
			{
			case 0 : { DemonSoldiers[i]->SetPosTile(36, 8); break; }
			case 1 : { DemonSoldiers[i]->SetPosTile(37, 8); break; }
			case 2 : { DemonSoldiers[i]->SetPosTile(36, 9); break; }
			case 3 : { DemonSoldiers[i]->SetPosTile(37, 9); break; }
			case 4 : { DemonSoldiers[i]->SetPosTile(38, 7); break; }
			case 5 : { DemonSoldiers[i]->SetPosTile(38, 10); break; }
			default : { DemonSoldiers[i]->SetPosTile(39 + rand() % 18, 0 + rand() % 18); break; }
			}

			DemonSoldiers[i]->SetCharacterMap(&MyNPCCharacterMapStruct);
			MyNPCCharacterMapStruct.CharacterMap[DemonSoldiers[i]->GetTileX()][DemonSoldiers[i]->GetTileY()] = 1;

			if (i < 6)
				DemonSoldiers[i]->SetArea(DemonSoldiers[i]->GetTileX(), DemonSoldiers[i]->GetTileY(), DemonSoldiers[i]->GetTileX(), DemonSoldiers[i]->GetTileY());
			else
				DemonSoldiers[i]->SetArea(DemonSoldiers[i]->GetTileX()-2, DemonSoldiers[i]->GetTileY()-2, DemonSoldiers[i]->GetTileX()+2, DemonSoldiers[i]->GetTileY()+2);

			DemonSoldiers[i]->Die();

			int r = rand() % 3;
			if (r == 0)
				DemonSoldiers[i]->SetText((char*)"Demon Soldier:\nYou will fry in the pitzzz of our hell!", 1);
			else if (r == 1)
				DemonSoldiers[i]->SetText((char*)"Demon Soldier:\nChange your ways slave, and follow uzzz!", 1);
			else if (r == 2)
				DemonSoldiers[i]->SetText((char*)"Demon Soldier:\nThe invazzzion izz already upon you, lay down and diezz!", 1);
		}

		BossDemon.Init();
		BossDemon.LoadedTile = Tile;
		BossDemon.Load(Screen, Input, Sound, ForestCampMap, ForestCampMapTop, MOVE_RIGHT, (char*)"tiles/demon_soldier.bmp", 40, 40);
		BossDemon.SetPosTile(37, 40);
		BossDemon.SetCharacterMap(&MyNPCCharacterMapStruct);
		MyNPCCharacterMapStruct.CharacterMap[BossDemon.GetTileX()][BossDemon.GetTileY()] = 1;
		BossDemon.SetArea(37, 40, 37, 40);
		BossDemon.SetText((char*)"Kaputos:\nHa ha ha.. I don't think so puny boy.", 1);
		BossDemon.Die();

		Screen->GetFront()->FillRect(190, 380, 190+(x++), 385, RGB565(color++, 0, 0));

		HenchDemon.Init();
		HenchDemon.LoadedTile = Tile;
		HenchDemon.Load(Screen, Input, Sound, ForestCampMap, ForestCampMapTop, MOVE_RIGHT, (char*)"tiles/demon_soldier.bmp", 40, 40);
		HenchDemon.SetPosTile(37, 19);
		HenchDemon.SetCharacterMap(&MyNPCCharacterMapStruct);
		MyNPCCharacterMapStruct.CharacterMap[HenchDemon.GetTileX()][HenchDemon.GetTileY()] = 1;
		HenchDemon.SetArea(37, 19, 37, 19);
		HenchDemon.SetText((char*)"Major Demon:\nPuny human .. step aside!", 1);
		HenchDemon.Die();

		Screen->GetFront()->FillRect(190, 380, 190+(x++), 385, RGB565(color++, 0, 0));

		Neacres.Load(Screen, Input, Sound, ForestCampMap, ForestCampMapTop, MOVE_RIGHT, (char*)"tiles/neacres.bmp", 40, 40);
		Neacres.SetPosTile(29, 2);
		Neacres.SetArea(20, 1, 31, 11);
		Neacres.SetCharacterMap(&MyNPCCharacterMapStruct);
		Neacres.SetText((char*)"Neacres:\nTsk tsk, such a pity whats happened to this place ..", 1);
		Neacres.SetText((char*)"Cryn:\nWhats going on? Who are you?", 2);
		Neacres.SetText((char*)"Neacres:\nAh, so the boy is alive, I figured you'd wake up sooner or later. I suppose you want to know what happened around here? Well, theres not much to\nexplain.", 3);
		Neacres.SetText((char*)"Neacres:\nYou know our defenses held for 48 hours? But then the demons found an\nentrance in the back, along the south west walls and all was lost. I nearly\nmanaged to escape myself!", 4);
		Neacres.SetText((char*)"Cryn:\nDemons? Oh .. what has Beorne done ..\n\n[SCREEEEAMMMM!!]", 5);
		Neacres.SetText((char*)"[Female Voice]:\n[SLASH!] [SLASH!] YOU WON'T GET THROUGH THIS GATE DEMONS! I WILL\nTAKE EACH ONE OF YOU TO THE GRAVE WITH ME! [SLASH!]", 6);
		Neacres.Die();

		if (Location > 49)
		{
			Neacres.Die();
			for (int i=0; i<MAX_DEMON_SOLDIERS; i++)
				DemonSoldiers[i]->Die();
		}

		Screen->GetFront()->FillRect(190, 380, 190+(x++), 385, RGB565(color++, 0, 0));

		Ayli.Init();
		Ayli.Load(Screen, Input, Sound, ForestCampMap, ForestCampMapTop, MOVE_RIGHT, (char*)"tiles/ayli.bmp", 40, 40);
		Ayli.SetPosTile(33, 8);
		Ayli.SetCharacterMap(&MyNPCCharacterMapStruct);
		Ayli.SetText((char*)"Ayli:\nHey, what do you think you're doing!", 1);
		Ayli.SetText((char*)"Cryn:\nWhat? I just saved you! Those demons .. they were ..", 2);
		Ayli.SetText((char*)"Ayli:\nOh I get it.. you're one of those valiant heroic types that just has to save the girl. Well, let me tell you a thing or two about me ..", 3);
		Ayli.SetText((char*)"Ayli:\nI didn't come all the way from the silver islands, fighting these demons one by one, just to be killed at the front gates of a castle in ruins OR saved by a boy with a stick! I can take care of this on my own.", 4);
		Ayli.SetText((char*)"Cryn:\nWait, these demons.. do you know where they have come from?", 5);
		Ayli.SetText((char*)"Ayli:\nNo, but I have tracked them to this castle and they appear to be coming from a tunnel to the south. I will be going there to complete my mission just as soon as I clean their blood off my blades.", 6);
		Ayli.SetText((char*)"Cryn:\nThen I will accompany you. I have a payback gift for someone, and I believe these demons will lead me to him.", 7);
		Ayli.SetText((char*)"Ayli:\nFine, but if you just once, even THINK of looking at me with those seedy eyes, the last thing you'll be seeing is the tip of this blade!", 8);
		Ayli.SetText((char*)"Cryn:\n[Sheesh, tough girl ..]", 9);

		Screen->GetFront()->FillRect(190, 380, 190+(x++), 385, RGB565(color++, 0, 0));

		DemonPitTiles = new CDXTile();
		if( DemonPitTiles->Create(Screen, (char*)"tiles/demonpathtiles.bmp", 40, 40, 0) == FALSE )
			CDXError( Screen , (char*)"could not load tiles from file tiles/demonpathtiles.bmp" );
		// set the top left pixel in tiles bitmap as transparent color
		DemonPitTiles->SetColorKey(0);
		
		// Create and load the maps
		DemonPitMap = new CDXMap(DemonPitTiles, Screen);
		if( DemonPitMap->LoadAscii("maps/demonpit.txt", 80, 57) == FALSE )
			CDXError( Screen , (char*)"Could not load ascii map: demonpit.txt" );
		DemonPitMap->EnableScrollWrapping(FALSE);

		DemonPitMapTop = new CDXMap(DemonPitTiles, Screen);
		if( DemonPitMapTop->LoadAscii("maps/demonpit_map2.txt", 80, 57) == FALSE )
			CDXError( Screen , (char*)"Could not load ascii map: demonpit_map2.txt" );
		DemonPitMapTop->EnableScrollWrapping(FALSE);

		// Pre-load the tile for demon soldiers.
		Tile = new CDXTile();
		if (Tile->Create(Screen, (char*)"tiles/demonstatue.bmp", 40, 40, 0) == FALSE)
			CDXError( Screen , (char*)"could not load tiles from file character bitmap tiles/demonstatue.bmp" );

		for (int i=0; i<MAX_DEMON_STATUES; i++)
		{
			Screen->GetFront()->FillRect(190, 380, 190+(x++), 385, RGB565(color++, 0, 0));

			DemonStatues[i] = new CNPC;
			DemonStatues[i]->LoadedTile = Tile;
			DemonStatues[i]->Load(Screen, Input, Sound, DemonPitMap, DemonPitMapTop, MOVE_RIGHT, (char*)"tiles/demonstatue.bmp", 40, 40);
			switch (i)
			{
			case 0 : { DemonStatues[i]->SetPosTile(32, 9); DemonStatues[i]->SetText((char*)"Cryn:\nStrange, it looks like some kind of demon statue. It looks like its wing is some kind of lever.", 1); 
					   DemonStatues[i]->SetText((char*)"Ayli:\nWell, only one thing to do then, pull its wing.", 2);
					   DemonStatues[i]->SetText((char*)"Cryn:\nOk, here goes. [CLICK]", 3);
					   DemonStatues[i]->SetText((char*)"Demon Statue:\nThe bones are broken, to stop the flood.\nOne to cast, and two for blood.", 4);
					   DemonStatues[i]->SetText((char*)"Cryn:\nUh ok. I was afraid he would say something like that.", 5);
					   DemonStatues[i]->SetText((char*)"Ayli:\nCome on Cryn, it is some kind of riddle. Lets look around and see what we can find.", 6);
					   break; }
			case 1 : { DemonStatues[i]->SetPosTile(9, 28); 
					   DemonStatues[i]->SetText((char*)"Demon Statue:\nCAST", 1); break; }
			case 2 : { DemonStatues[i]->SetText((char*)"Demon Statue:\nBLOOD", 1); 
				       DemonStatues[i]->SetPosTile(67, 27); break; }
			}

			DemonStatues[i]->SetCharacterMap(&MyNPCCharacterMapStruct);
			MyNPCCharacterMapStruct.CharacterMap[DemonStatues[i]->GetTileX()][DemonStatues[i]->GetTileY()] = 1;
			
			DemonStatues[i]->StandStill();
			DemonStatues[i]->isAnimated = true;
			DemonStatues[i]->Die();
		}

		Tile = new CDXTile();
		if (Tile->Create(Screen, (char*)"tiles/bonebarrier.bmp", 40, 40, 0) == FALSE)
			CDXError( Screen , (char*)"could not load tiles from file character bitmap tiles/bonebarrier.bmp" );
		for (int i=0; i<MAX_BONE_BARRIERS; i++)
		{
			Screen->GetFront()->FillRect(190, 380, 190+(x++), 385, RGB565(color++, 0, 0));

			BoneBarriers[i] = new CNPC;
			BoneBarriers[i]->LoadedTile = Tile;
			BoneBarriers[i]->Load(Screen, Input, Sound, DemonPitMap, DemonPitMapTop, MOVE_RIGHT, (char*)"tiles/bonebarrier.bmp", 40, 40);
			switch (i)
			{
			case 0 : { BoneBarriers[i]->SetPosTile(32, 7);
					   break; }
			case 1 : { BoneBarriers[i]->SetPosTile(33, 7); 
					   break; }
			}

			BoneBarriers[i]->SetText((char*)"Cryn:\nHm, this barrier of bones looks like it's protecting something important.", 1); 
			BoneBarriers[i]->SetText((char*)"Ayli:\nYes, and I bet that demon statue has something to do with it.", 2);

			BoneBarriers[i]->SetCharacterMap(&MyNPCCharacterMapStruct);
			MyNPCCharacterMapStruct.CharacterMap[BoneBarriers[i]->GetTileX()][BoneBarriers[i]->GetTileY()] = 1;
			BoneBarriers[i]->StandStill();
			BoneBarriers[i]->Die();
		}

		DragonSpawn.Load(Screen, Input, Sound, DemonPitMap, DemonPitMapTop, MOVE_RIGHT, (char*)"tiles/dragonspawn.bmp", 40, 40);
		DragonSpawn.SetCharacterMap(&MyNPCCharacterMapStruct);
		DragonSpawn.SetPosTile(59, 1);
		DragonSpawn.StandStill();
		DragonSpawn.SetText((char*)"Pool Gaurdian:\nWelcome to my pool mortal. Perhaps the female would like to take a swim?", 1);
		DragonSpawn.SetText((char*)"Ayli:\nKeep your claws away from me you monster!", 2);
		DragonSpawn.SetText((char*)"Cryn:\nThe only pool you're going to be swimming in is your own blood!", 3);
		DragonSpawn.SetText((char*)"Pool Gaurdian:\nAhh, but that is exactly what I prepare to do foolish boy, but first, some fun.", 4);
		DragonSpawn.Die();

		Screen->GetFront()->FillRect(190, 380, 190+(x++), 385, RGB565(color++, 0, 0));

		BloodChamberTiles = new CDXTile();
		if( BloodChamberTiles->Create(Screen, (char*)"tiles/bloodchamber_tiles.bmp", 40, 40, 0) == FALSE )
			CDXError( Screen , (char*)"could not load tiles from file tiles/bloodchambertiles.bmp" );
		// set the top left pixel in tiles bitmap as transparent color
		BloodChamberTiles->SetColorKey(0);

		Screen->GetFront()->FillRect(190, 380, 190+(x++), 385, RGB565(color+=2, 0, 0));

		NetherTiles = new CDXTile();
		if( NetherTiles->Create(Screen, (char*)"tiles/nethertiles.bmp", 40, 40, 0) == FALSE )
			CDXError( Screen , (char*)"could not load tiles from file tiles/nethertiles.bmp" );
		// set the top left pixel in tiles bitmap as transparent color
		NetherTiles->SetColorKey(0);
		
		Screen->GetFront()->FillRect(190, 380, 190+(x++), 385, RGB565(color+=2, 0, 0));

		// Create and load the maps
		BloodChamberMap = new CDXMap(BloodChamberTiles, Screen);
		if( BloodChamberMap->LoadAscii("maps/bloodchambermap.txt", 106, 20) == FALSE )
			CDXError( Screen , (char*)"Could not load ascii map: bloodchambermap.txt" );
		BloodChamberMap->EnableScrollWrapping(FALSE);

		Screen->GetFront()->FillRect(190, 380, 190+(x++), 385, RGB565(color+=2, 0, 0));

		BloodChamberMapTop = new CDXMap(BloodChamberTiles, Screen);
		if( BloodChamberMapTop->LoadAscii("maps/bloodchambermap2.txt", 106, 20) == FALSE )
			CDXError( Screen , (char*)"Could not load ascii map: bloodchambermap2.txt" );
		BloodChamberMapTop->EnableScrollWrapping(FALSE);

		Screen->GetFront()->FillRect(190, 380, 190+(x++), 385, RGB565(color+=2, 0, 0));

		// Create and load the maps
		DemonTownMap = new CDXMap(BloodChamberTiles, Screen);
		if( DemonTownMap->LoadAscii("maps/demontown.txt", 124, 40) == FALSE )
			CDXError( Screen , (char*)"Could not load ascii map: demontown.txt" );
		DemonTownMap->EnableScrollWrapping(FALSE);

		Screen->GetFront()->FillRect(190, 380, 190+(x++), 385, RGB565(color+=2, 0, 0));

		DemonTownMapTop = new CDXMap(BloodChamberTiles, Screen);
		if( DemonTownMapTop->LoadAscii("maps/demontown_top.txt", 124, 40) == FALSE )
			CDXError( Screen , (char*)"Could not load ascii map: demontown_top.txt" );
		DemonTownMapTop->EnableScrollWrapping(FALSE);

		Screen->GetFront()->FillRect(190, 380, 190+(x++), 385, RGB565(color+=2, 0, 0));

		// Create and load the maps
		NetherMap = new CDXMap(NetherTiles, Screen);
		if( NetherMap->LoadAscii("maps/nether.txt", 100, 20) == FALSE )
			CDXError( Screen , (char*)"Could not load ascii map: nether.txt" );
		NetherMap->EnableScrollWrapping(FALSE);

		Screen->GetFront()->FillRect(190, 380, 190+(x++), 385, RGB565(color+=2, 0, 0));

		NetherMapTop = new CDXMap(NetherTiles, Screen);
		if( NetherMapTop->LoadAscii("maps/nether_top.txt", 100, 20) == FALSE )
			CDXError( Screen , (char*)"Could not load ascii map: nether_top.txt" );
		NetherMapTop->EnableScrollWrapping(FALSE);

		// 10-13-2006 changed 130, 20 to 130, 21 to fix crash when moving to bottom of screen and added non-walk line at bottom of maps.
		DeepNetherMap = new CDXMap(NetherTiles, Screen);
		if( DeepNetherMap->LoadAscii("maps/deepnether.txt", 130, 21) == FALSE )
			CDXError( Screen , (char*)"Could not load ascii map: deepnether.txt" );
		DeepNetherMap->EnableScrollWrapping(FALSE);

		Screen->GetFront()->FillRect(190, 380, 190+(x++), 385, RGB565(color+=2, 0, 0));

		DeepNetherMapTop = new CDXMap(NetherTiles, Screen);
		if( DeepNetherMapTop->LoadAscii("maps/deepnether_top.txt", 130, 21) == FALSE )
			CDXError( Screen , (char*)"Could not load ascii map: deepnether_top.txt" );
		DeepNetherMapTop->EnableScrollWrapping(FALSE);

		Tile = new CDXTile();
		if (Tile->Create(Screen, (char*)"tiles/bloodclot.bmp", 40, 40, 0) == FALSE)
			CDXError( Screen , (char*)"could not load tiles from file character bitmap tiles/bloodclot.bmp" );
		for (int i=0; i<MAX_BLOOD_CLOTS; i++)
		{
			Screen->GetFront()->FillRect(190, 380, 190+(x++), 385, RGB565(color+=2, 0, 0));

			BloodClots[i] = new CNPC;
			BloodClots[i]->LoadedTile = Tile;
			BloodClots[i]->Load(Screen, Input, Sound, BloodChamberMap, BloodChamberMapTop, MOVE_RIGHT, (char*)"tiles/bloodclot.bmp", 40, 40);
			int r = rand() % 60;

			switch (i)
			{
				case 0 : { while (!BloodChamberMap->IsWalkable(r,5))
							 r = rand() % 60;
						   BloodClots[i]->SetPosTile(r, 5);
						   BloodClots[i]->SetText((char*)"Cryn:\nWhat a strange creation. I wonder where these things came from?", 1);
						   BloodClots[i]->SetText((char*)"Mysterious Blood Clot:\ngurgle, gurgle ..", 2);
						   break; }
				case 1 : { while (!BloodChamberMap->IsWalkable(r,6))
							 r = rand() % 60;
						   BloodClots[i]->SetPosTile(r, 6); 
						   BloodClots[i]->SetText((char*)"Cryn:\nHey there little fella ..", 1);
						   BloodClots[i]->SetText((char*)"Mysterious Blood Clot:\ngurgle, gurgle ..", 2);
				  		   break; }
				case 2 : { while (!BloodChamberMap->IsWalkable(r,7))
							 r = rand() % 60;
					       BloodClots[i]->SetPosTile(r, 7);
						   BloodClots[i]->SetText((char*)"Mysterious Blood Clot:\ngurgle, gurgle ..", 1);
						   break; }
				case 3 : { while (!BloodChamberMap->IsWalkable(r,6))
							 r = rand() % 60;
					       BloodClots[i]->SetPosTile(r, 6); 
						   BloodClots[i]->SetText((char*)"Mysterious Blood Clot:\ngurgle, gurgle ..", 1);
						   break; }
			}

			BloodClots[i]->SetCharacterMap(&MyNPCCharacterMapStruct);
			BloodClots[i]->isAnimated = true;
			BloodClots[i]->Die();

			MyNPCCharacterMapStruct.CharacterMap[BloodClots[i]->GetTileX()][BloodClots[i]->GetTileY()] = 1;
		}

		Tile = new CDXTile();
		if (Tile->Create(Screen, (char*)"tiles/demon_soldier.bmp", 40, 40, 0) == FALSE)
			CDXError( Screen , (char*)"could not load tiles from file character bitmap tiles/demon_soldier.bmp" );

		Screen->GetFront()->FillRect(190, 380, 190+(x++), 385, RGB565(color+=2, 0, 0));
		TownFolk1.LoadedTile = Tile;
		TownFolk1.Load(Screen, Input, Sound, DemonTownMap, DemonTownMapTop, MOVE_RIGHT, (char*)"tiles/demonsoldier.bmp", 40, 40);
		TownFolk1.SetPosTile(110, 25);
		TownFolk1.SetArea(108, 25, 112, 25);
		TownFolk1.SetCharacterMap(&MyNPCCharacterMapStruct);
		TownFolk1.SetText((char*)"Zephyr:\nGrr.. you know what we likezzz outziders for? Dinner.. ha hah.", 1);
		TownFolk1.SetText((char*)"Cryn:\nI'm looking for a girl, have you seen her down here?", 2);
		TownFolk1.SetText((char*)"Zephyr:\nWell, grr, I no see girlzz round here, but I do see some strangzze wizard human in a hurry.", 3);
		TownFolk1.SetText((char*)"Cryn:\nWizard? Hm ..", 4);
		Screen->GetFront()->FillRect(190, 380, 190+(x++), 385, RGB565(color+=2, 0, 0));
		TownFolk2.LoadedTile = Tile;
		TownFolk2.Load(Screen, Input, Sound, DemonTownMap, DemonTownMapTop, MOVE_RIGHT, (char*)"tiles/demonsoldier.bmp", 40, 40);
		TownFolk2.SetPosTile(92, 17);
		TownFolk2.SetArea(91, 16, 99, 18);
		TownFolk2.SetText((char*)"Araminz:\nHumanzz down herezzz again? When will youz learn.", 1);
		TownFolk2.SetCharacterMap(&MyNPCCharacterMapStruct);
		Screen->GetFront()->FillRect(190, 380, 190+(x++), 385, RGB565(color+=2, 0, 0));
		TownFolk3.LoadedTile = Tile;
		TownFolk3.Load(Screen, Input, Sound, DemonTownMap, DemonTownMapTop, MOVE_RIGHT, (char*)"tiles/demonsoldier.bmp", 40, 40);
		TownFolk3.SetPosTile(112, 16);
		TownFolk3.SetArea(106, 16, 112, 17);
		TownFolk3.SetCharacterMap(&MyNPCCharacterMapStruct);
		TownFolk3.SetText((char*)"Gryz:\nOne, Too, Tree, Seven. See, weez can learn too puny human.", 1);
		TownFolk3.SetText((char*)"Cryn:\nUh, alrighty then.", 2);
		Screen->GetFront()->FillRect(190, 380, 190+(x++), 385, RGB565(color+=2, 0, 0));
		TownFolk4.LoadedTile = Tile;
		TownFolk4.Load(Screen, Input, Sound, DemonTownMap, DemonTownMapTop, MOVE_RIGHT, (char*)"tiles/demonsoldier.bmp", 40, 40);
		TownFolk4.SetCharacterMap(&MyNPCCharacterMapStruct);
		TownFolk4.SetPosTile(85, 2);
		TownFolk4.SetArea(84, 2, 85, 2);
		TownFolk4.SetText((char*)"Demon Soldier:\nNo onez allowed pazt thiz point, human. At least, not without permizzion.", 1);
		Screen->GetFront()->FillRect(190, 380, 190+(x++), 385, RGB565(color+=2, 0, 0));
		TownFolk5.LoadedTile = Tile;
		TownFolk5.Load(Screen, Input, Sound, DemonTownMap, DemonTownMapTop, MOVE_RIGHT, (char*)"tiles/demonsoldier.bmp", 40, 40);
		TownFolk5.SetCharacterMap(&MyNPCCharacterMapStruct);
		TownFolk5.SetPosTile(114, 2);
		TownFolk5.SetArea(111, 2, 116, 4);
		TownFolk5.SetText((char*)"Narz The Ancient:\nA human? My what a surprise.", 1);
		TownFolk5.SetText((char*)"Cryn:\nI'm looking for a friend of mine, a girl, have you seen her down here?", 2);
		TownFolk5.SetText((char*)"Narz The Ancient:\nWell, perhaps I have. In fact, two humans to be exact passed through here. However, I can not let just anyone enter the dark gate.", 3);
		TownFolk5.SetText((char*)"Cryn:\nBut, I must find her!", 4);
		TownFolk5.SetText((char*)"Narz The Ancient:\nYou do a task for me, and I will allow you to pass. There is a dangerous evil monster in the forest. We demons could easily deal with this, but we are much too busy with more important tasks such as torturing the innocent, pillaging the poor, etc.", 5);
		TownFolk5.SetText((char*)"Cryn:\nI will slay the beast for you!", 6);
		TownFolk5.SetText((char*)"Narz The Ancient:\nha ha ha puny human. I do not expect you to kill him. I simply want you to return him to us. We will set him straight. You will find the entrance to the forest in the northwest of town. Tell the soldier there that I have sent you.", 7);
		DemonTownBoss.Load(Screen, Input, Sound, DemonTownMap, DemonTownMapTop, MOVE_RIGHT, (char*)"tiles/demontown_boss.bmp", 40, 40);
		DemonTownBoss.SetCharacterMap(&MyNPCCharacterMapStruct);
		DemonTownBoss.SetPosTile(1, 18);
		DemonTownBoss.SetArea(1, 15, 4, 19);
		DemonTownBoss.SetText((char*)"Cryn:\nYou, uh, you're coming with me!", 1);
		DemonTownBoss.SetText((char*)"Rii:\nGrrrrumbble, grrrrowl ..", 2);
		DemonTownBoss.SetText((char*)"Cryn:\nUhh, there is no need to fight. I just need to take you back to Narz.", 3);
		DemonTownBoss.SetText((char*)"Rii:\nGrrrrumbble, grrrrowl ..", 4);
		DemonTownBoss.SetText((char*)"Cryn:\nUmm, pretty please?", 5);

		Tile = new CDXTile();
		if (Tile->Create(Screen, (char*)"tiles/mistspot.bmp", 40, 40, 0) == FALSE)
			CDXError( Screen , (char*)"could not load tiles from file mistspot.bmp" );

		for (int i=0; i<MAX_MIST_SPOTS; i++)
		{
			Screen->GetFront()->FillRect(190, 380, 190+(x++), 385, RGB565(color++, 0, 0));

			MistSpots[i].LoadedTile = Tile;
			MistSpots[i].Load(Screen, Input, Sound, NetherMap, NetherMapTop, MOVE_NONE, (char*)"tiles/mistspot.bmp", 40, 40);
			MistSpots[i].SetCharacterMap(&EmptyNPCCharacterMapStruct);
			MistSpots[i].Init();
		}

		Screen->GetFront()->FillRect(190, 380, 190+(x++), 385, RGB565(color+=2, 0, 0));
		/*// Load the black rain.
		for (int i=0; i<MAX_RAINDROPS; i++)
		{
			BlackRain[i].Load(Screen);
		}*/

		Possession = new CMistSpot();
		Possession->Load(Screen, Input, Sound, NetherMap, NetherMapTop, MOVE_RIGHT, (char*)"tiles/possession.bmp", 40, 40);
		Possession->Init();
		Possession->SetRandom(false);
		Possession->SetAlphaMin(75);
		Possession->SetFadeSpeed(1);
		Possession->SetPosTile(90, 13);
		Possession->SetCharacterMap(&MyNPCCharacterMapStruct);
		Possession->StandStill();
		Possession->SetText((char*)"Possession:\nSo it is done, servant. My energies are growing stronger with each drop of blood.", 1);
		Possession->SetText((char*)"Beorne:\nEnough of this, demon. I have performed your tasks, and now it is time for your end of the bargain.", 2);
		Possession->SetText((char*)"Possession:\nPatience human. My resurrection is almost complete. There is only one\nremaining task and this one you will enjoy.", 3);
		Possession->SetText((char*)"Beorne:\nI'm listening.", 4);
		Possession->SetText((char*)"Possession:\nYou must enter the bowels of this world, and locate the eyes, spine, heart, and brain of the ultimate destructor. I will then be fully resurrected and summon him to assist us in claiming this world. You may then take all the lands you wish, while their precious souls are mine to keep!", 5);
		Possession->SetText((char*)"Beorne:\nI will do this final task.", 6);
		Possession->SetText((char*)"Possession:\nOf course you will. Now go and enter the sacrificial chamber to transport to the deep nether world.", 7);
		Possession->Die();

		Eyes = new CMistSpot();
		Eyes->Load(Screen, Input, Sound, DeepNetherMap, DeepNetherMapTop, MOVE_RIGHT, (char*)"tiles/deepnethereye.bmp", 40, 40);
		Eyes->Init();
		Eyes->SetRandom(false);
		Eyes->SetAlphaMin(75);
		Eyes->SetAlphaMax(155);
		Eyes->SetFadeSpeed(1);
		Eyes->SetPosTile(9, 18);
		Eyes->SetCharacterMap(&MyNPCCharacterMapStruct);
		Eyes->StandStill();
		Eyes->SetText((char*)"Beorne:\nThis is disgusting. Am I supposed to really take this eye?", 1);
		Eyes->SetText((char*)"Nether Eye:\n...", 2);
		Eyes->Die();

		Spine = new CMistSpot();
		Spine->Load(Screen, Input, Sound, DeepNetherMap, DeepNetherMapTop, MOVE_RIGHT, (char*)"tiles/deepnetherspine.bmp", 40, 40);
		Spine->Init();
		Spine->SetRandom(false);
		Spine->SetAlphaMin(75);
		Spine->SetAlphaMax(155);
		Spine->SetFadeSpeed(1);
		Spine->SetPosTile(64, 4);
		Spine->SetCharacterMap(&MyNPCCharacterMapStruct);
		Spine->StandStill();
		Spine->SetText((char*)"Beorne:\nThe spine! I may still get out of this dungeon yet.", 1);
		Spine->SetText((char*)"Nether Spine:\n...", 2);
		Spine->Die();

		Heart = new CMistSpot();
		Heart->Load(Screen, Input, Sound, DeepNetherMap, DeepNetherMapTop, MOVE_RIGHT, (char*)"tiles/deepnetherheart.bmp", 40, 40);
		Heart->Init();
		Heart->SetRandom(false);
		Heart->SetAlphaMin(75);
		Heart->SetAlphaMax(155);
		Heart->SetFadeSpeed(1);
		Heart->SetPosTile(98, 12);
		Heart->SetCharacterMap(&MyNPCCharacterMapStruct);
		Heart->StandStill();
		Heart->SetText((char*)"Beorne:\nThis really is quite nasty. Here goes nothing.", 1);
		Heart->SetText((char*)"Nether Heart:\n...", 2);
		Heart->Die();

		Brain = new CMistSpot();
		Brain->Load(Screen, Input, Sound, DeepNetherMap, DeepNetherMapTop, MOVE_RIGHT, (char*)"tiles/deepnetherbrain.bmp", 40, 40);
		Brain->Init();
		Brain->SetRandom(false);
		Brain->SetAlphaMin(75);
		Brain->SetAlphaMax(155);
		Brain->SetFadeSpeed(1);
		Brain->SetPosTile(126, 18);
		Brain->SetCharacterMap(&MyNPCCharacterMapStruct);
		Brain->StandStill();
		Brain->SetText((char*)"Beorne:\nFinally, the brain. My job is finished.", 1);
		Brain->SetText((char*)"Nether Brain:\nNot so fast, Beorne. Why should I go along with a puny human such as you?", 2);
		Brain->SetText((char*)"Beorne:\nWhat's this? You talk! And you know my name!", 3);
		Brain->SetText((char*)"Nether Brain:\nI know more than you can possibly imagine. But you have bigger problems\nthan me right now. Even as we speak, Cryn approaches your castle and\nbetrayal is in the air. His powers have grown and he may not be what you expect anymore.", 4);
		Brain->SetText((char*)"Beorne:\nHa, Brain! I have nothing to prove to a mindless organ. Do not concern\nyourself with my business! I will finish Cryn just as soon as I finish with you!", 5);
		Brain->SetText((char*)"Nether Brain:\nSo be it, Beorne. You have met your match.", 6);
		Brain->Die();

		// Fade out.
		Screen->GetBack()->Fill(0);
		Screen->FadeToBlack(600);
	}
}

void DoCombatFrames()
{
	// Check if we are in battle.
	if (MyBattleEngine.GetPhase() != DONE)
	{
		MyBattleEngine.Draw();
	}
	else
	{
		// Just finished a battle!
		InCombat = false;
		MyPlayer.HP = MyBattleEngine.GetHP();
		MyPlayer.MP = MyBattleEngine.GetMP();
		if (MyPlayer.HP > 0)
		{
			// Player collects rewards.
			MyPlayer.Level = MyBattleEngine.GetLevel();
			MyPlayer.Exp += MyBattleEngine.Exp;
			MyPlayer.Gold += MyBattleEngine.Gold;
			// Check for any level gains.
			MyPlayer.GainLevel();
			CheckBossWins();
			
			StopMusic();
			StartMusic(MapMusic);
		}
		else
		{
			// You DIE!
			InCombat = false;
			StopMusic();
			StartMusic((char*)"music/diesong.s3m"); // play some 'your dead' music
			
			// Fade out.
			Screen->GetBack()->Fill(0);
			Screen->FadeToBlack(600);
			
			// Special case when completing battle with Beorne.
			if (Location == 40)
			{
				Sleep(3000);
				
				MyPlayer.SetText((char*)"...: TAKE HIM AWAY, NOW!", 1);
				MyPlayer.SetText((char*)"...: But wherezzz shallll we takzzz heeem?", 2);
				MyPlayer.SetText((char*)"...: I think I have the perfect idea ..", 3);
				MyPlayer.SetText((char*)"...: mazzzter??", 4);
				MyPlayer.SetText((char*)"...: RALLY THE OTHERS! SEND MY MEN TO THE CASTLE!", 5);
				MyPlayer.SetText((char*)"...: yezzz, of courzzze ..", 6);
				MyPlayer.Speak();
				
				Screen->GetBack()->Fill(0);
				Screen->GetFront()->Fill(0);
				Sleep(1000);
				
				Screen->GetBack()->GetDC();
				Screen->GetBack()->SetFont();
				CDXMenu menu; menu.TextXY(Screen->GetBack(), 150, 250, 255, "You wake up 3 days later somewhere else ...");
				Screen->GetBack()->ReleaseDC();

				// Fade in.
				Screen->FadeToSource(1500);

				Sleep(3200);

				if (DEMO_VERSION)
				{
					//
					// DEMO VERSION ENDING
					//
					Screen->GetBack()->Fill(0);

					CDXTile MyTile0;
					if( MyTile0.Create(Screen, (char*)"graphics/demoend1.bmp", 380, 183, 0) == FALSE )
						CDXError( Screen , (char*)"could not load tiles from file demoend1.bmp." );
					// set the top left pixel in tiles bitmap as transparent color
					MyTile0.SetColorKey(0);
					
					CDXSprite MySprite0;
					MySprite0.Create(&MyTile0);
					MySprite0.SetFrame(0);
					MySprite0.SetPos(10, 132);

					CDXTile MyTile01;
					if( MyTile01.Create(Screen, (char*)"graphics/demoend2.bmp", 392, 61, 0) == FALSE )
						CDXError( Screen , (char*)"could not load tiles from file demoend2.bmp." );
					// set the top left pixel in tiles bitmap as transparent color
					MyTile01.SetColorKey(0);
					
					CDXSprite MySprite01;
					MySprite01.Create(&MyTile01);
					MySprite01.SetFrame(0);
					MySprite01.SetPos(10, 30);

					CDXTile MyTile02;
					if( MyTile02.Create(Screen, (char*)"graphics/demoend3.bmp", 317, 105, 0) == FALSE )
						CDXError( Screen , (char*)"could not load tiles from file demoend3.bmp." );
					// set the top left pixel in tiles bitmap as transparent color
					MyTile02.SetColorKey(0);
					
					CDXSprite MySprite02;
					MySprite02.Create(&MyTile02);
					MySprite02.SetFrame(0);
					MySprite02.SetPos(10, 345);

					CDXTile MyTile;
					if( MyTile.Create(Screen, (char*)"graphics/democap1.bmp", 200, 112, 0) == FALSE )
						CDXError( Screen , (char*)"could not load tiles from file democap1.bmp." );
					// set the top left pixel in tiles bitmap as transparent color
					MyTile.SetColorKey(0);
					
					CDXSprite MySprite1;
					MySprite1.Create(&MyTile);
					MySprite1.SetFrame(0);
					MySprite1.SetPos(420, 10);

					CDXTile MyTile2;
					if( MyTile2.Create(Screen, (char*)"graphics/democap2.bmp", 200, 115, 0) == FALSE )
						CDXError( Screen , (char*)"could not load tiles from file democap2.bmp." );
					// set the top left pixel in tiles bitmap as transparent color
					MyTile2.SetColorKey(0);
					
					CDXSprite MySprite2;
					MySprite2.Create(&MyTile2);
					MySprite2.SetFrame(0);
					MySprite2.SetPos(420, 150);

					CDXTile MyTile3;
					if( MyTile3.Create(Screen, (char*)"graphics/democap3.bmp", 200, 136, 0) == FALSE )
						CDXError( Screen , (char*)"could not load tiles from file democap3.bmp." );
					// set the top left pixel in tiles bitmap as transparent color
					MyTile3.SetColorKey(0);
					
					CDXSprite MySprite3;
					MySprite3.Create(&MyTile3);
					MySprite3.SetFrame(0);
					MySprite3.SetPos(420, 290);

					MySprite0.Draw(Screen->GetBack(), 0, 0, CDXBLT_BLK);
					MySprite01.Draw(Screen->GetBack(), 0, 0, CDXBLT_BLK);
					MySprite02.Draw(Screen->GetBack(), 0, 0, CDXBLT_BLK);
					MySprite1.Draw(Screen->GetBack(), 0, 0, CDXBLT_BLK);
					MySprite2.Draw(Screen->GetBack(), 0, 0, CDXBLT_BLK);
					MySprite3.Draw(Screen->GetBack(), 0, 0, CDXBLT_BLK);

					Screen->GetBack()->GetDC();
					Screen->GetBack()->SetFont();
					CDXMenu menu; menu.TextXY(Screen->GetBack(), 250, 460, RGB565(0,255,0), "Space Bar to continue");
					Screen->GetBack()->ReleaseDC();
					
					Location = 37;

					// Fade in.
					Screen->FadeToSource(1500);
					Screen->Flip();

					Input->Update();
					Input->UpdateLastKey(true);
					while (Input->GetLastKeyChar() != 32)
					{
						Input->Update();
						Input->UpdateLastKey(true);
					}

					// Fade out again.
					Screen->GetBack()->Fill(0);
					Screen->FadeToBlack(600);

					CDXTile PTile;
					PTile.Create(Screen, (char*)"tiles/hero.bmp", 40, 40, 0);
					PTile.SetColorKey(0);
					CDXSprite PSprite;
					PSprite.Create(&PTile);
					PSprite.SetPos(320, 155);
					PSprite.SetFrame(1);
					PSprite.SetScale(2);
					PSprite.Draw(Screen->GetBack(), 0, 0, CDXBLT_TRANSSCALED);

					char str[25];
					sprintf(str, (char*)"You Achieved Level %d", MyPlayer.Level);
					Screen->GetBack()->GetDC();
					Screen->GetBack()->SetFont();
					menu.TextXY(Screen->GetBack(), 250, 240, RGB565(0,255,0), str);
					menu.TextXY(Screen->GetBack(), 270, 270, RGB565(0,255,0), "Excellent!");
					menu.TextXY(Screen->GetBack(), 250, 300, RGB565(0,255,0), "Space Bar to exit");
					Screen->GetBack()->ReleaseDC();

					// Fade in.
					Screen->FadeToSource(1500);
					Screen->Flip();

					int x = 320, y = 155, c = 0;
					float z = 2.0;
					bool right = true, down = true, zoomup = true;
					Input->Update();
					Input->UpdateLastKey(true);
					while (Input->GetLastKeyChar() != 32)
					{
						Screen->GetBack()->Fill(0);

						if (zoomup)
						{
							if (z < 15.0)
							{
								z += 0.2;
							}
							else
								zoomup = false;
						}
						else
						{
							if (z > 1)
							{
								z -= 0.2;
							}
							else
								zoomup = true;
						}

						if (right)
						{
							if (x < 640)
								x+=7;
							else
								right = false;
						}
						else
						{
							if (x > 0)
								x-=7;
							else
								right = true;
						}

						if (down)
						{
							if (y < 480)
								y+=7;
							else
								down = false;
						}
						else
						{
							if (y > 0)
								y-=7;
							else
								down = true;
						}

						PSprite.SetPos(x, y);
						PSprite.SetScale(z);
						PSprite.Draw(Screen->GetBack(), 0, 0, CDXBLT_TRANSSCALED);

						Screen->GetBack()->GetDC();
						Screen->GetBack()->SetFont();
						CDXMenu menu; menu.TextXY(Screen->GetBack(), 250, 240, RGB565(0,255,0), str);
						menu.TextXY(Screen->GetBack(), 270, 270, RGB565(0,255,0), "Excellent!");
						menu.TextXY(Screen->GetBack(), 250, 300, RGB565(0,255,0), "Space Bar to exit");
						Screen->GetBack()->ReleaseDC();

						Screen->Flip();

						Input->Update();
						Input->UpdateLastKey(true);
					}
					
					//
					// DEMO VERSION EXIT
					//
					/*char buf[10];
					char strURL[5000];
					strcpy(strURL, (char*)"http://www.dummysoftware.com/crynending.html?");
					strcat(strURL, (char*)"Level=");
					strcat(strURL, _itoa(MyPlayer.Level, buf, 10));*/

					//PostMessage(g_hWnd, WM_CLOSE, 0, 0);
					Screen->GetBack()->Fill(0);
					Screen->FadeToBlack(600);
					cdx_DeInit();
					exit(0);
				}

				Area = FORESTCAMP;

				// Clear out character map array.
				CleanupMemory(); // clear unneeded objects from before this location.

				ClearArray();

				Ayli.Die(); // not visible yet

				// Fade out again.
				Screen->GetBack()->Fill(0);
				Screen->FadeToBlack(600);
				
				// Entering The Forest Camp.
				StopMusic();
				
				// Begin drawing new screen.
				MyPlayer.Map = ForestCampMap;
				MyPlayer.Map2 = ForestCampMapTop;
				
				MyPlayer.SetPosTile(20, 1);
				MyPlayer.HP = 1;
				MyPlayer.ResetBorders();
				
				Beorne.Die();
				Beorne.ResetBorders();

				BossDemon.Revive();
				HenchDemon.Revive();
				Neacres.Revive();

				for (int i=0; i<MAX_DEMON_SOLDIERS; i++)
				{
					DemonSoldiers[i]->Revive();
				}
				
				Fountain.Map = ForestCampMap;
				Fountain.Map2 = ForestCampMapTop;
				Fountain.SetPosTile(20, 16);
				Fountain.SetArea(20, 16, 20, 16);
				
				ForestCampMap->MoveTo(16*40, 0);
				ForestCampMapTop->MoveTo(16*40, 0);
				
				ForestCampMap->DrawTrans(Screen->GetBack());
				MyPlayer.Draw();
				//Beorne.Draw();
				Screen->FadeToSource(1500);
				Location = 41;
				CombatOn = true;
				
//				SaveGame();
				
				StartMusic((char*)"music/burnswoo.s3m");
			}
			else
			{
				Screen->GetBack()->Fill(0);
				CDXLayer MyBitmap;
				MyBitmap.Create(Screen, (char*)"graphics/die_screen.bmp");
				MyBitmap.Draw(0, 0, Screen->GetBack());

				// Fade in.
				Screen->FadeToSource(1500);
				Screen->Flip();
				
				CMenu MyMenu;
				ShowDieMenu(&MyMenu);
				OperateDieMenu(&MyMenu);
			}
		}
	}
}

void DoEngageCombat()
{
	if (MyBattleEngine.EngageCombat())
	{
		MyPlayer.Direction = MyPlayer.OppositeDirection(MyPlayer.Direction);
		InCombat = true;
		StopMusic();
		StartMusic((char*)"music/BATTLEMU.S3M");
		
		// Pick battle screen.
		char BattleBmp[1000];
		if (Area == FOREST || Area == FORESTCAMP)
		{
			strcpy(BattleBmp, (char*)"graphics/forest.bmp");
			if (Area == FOREST)
				strcpy(MapMusic, (char*)"music/FORESTMU.S3M");
			else if (Area == FORESTCAMP)
				strcpy(MapMusic, (char*)"music/burnshrt.S3M");
		}
		else if (Area == SWAMP)
		{
			strcpy(BattleBmp, (char*)"graphics/swamp.bmp");
			strcpy(MapMusic, (char*)"music/FORESTMU.S3M");
		}
		else if (Area == SWAMPCAVE)
		{
			strcpy(BattleBmp, (char*)"graphics/cave.bmp");
			strcpy(MapMusic, (char*)"music/dungeon1.s3m");
		}
		else if (Area == TREE)
		{
			strcpy(BattleBmp, (char*)"graphics/bark.bmp");
			strcpy(MapMusic, (char*)"music/insect.s3m");
		}
		else if (Area == TREETRUNK)
		{
			strcpy(BattleBmp, (char*)"graphics/bark.bmp");
			strcpy(MapMusic, (char*)"music/treetrun.s3m");
		}
		else if (Area == DEMONPIT)
		{
			strcpy(BattleBmp, (char*)"graphics/demonpit.bmp");
			strcpy(MapMusic, (char*)"music/demonpit.s3m");
		}
		else if (Area == DEMONTOWN)
		{
			strcpy(BattleBmp, (char*)"graphics/demontown.bmp");
			strcpy(MapMusic, (char*)"music/burnshrt.s3m");
		}
		else if (Area == DEEPNETHERWORLD)
		{
			strcpy(BattleBmp, (char*)"graphics/netherworld.bmp");
			strcpy(MapMusic, (char*)"music/BEORNECA.S3M");
		}

		char name[10];
		char image[20];
		char weapon[20];
		static bool bBeorne = true; // alternate battles using Beorne and Cryn
		bool bUseBeorneSpells = false;

		strcpy(name, (char*)"Cryn");
		strcpy(image, (char*)"tiles/hero.bmp");
		strcpy(weapon, (char*)"Staff");

		if ((Location > 0 && Location < 30) || Area == DEEPNETHERWORLD)
		{
			bBeorne = !bBeorne;
			if (bBeorne || Area == DEEPNETHERWORLD)
			{
				strcpy(name, (char*)"Beorne");
				strcpy(image, (char*)"tiles/beorne.bmp");
				strcpy(weapon, (char*)"Black Sword");
				bUseBeorneSpells = true;
			}
		}
		else if (Location >= 44 && Location < 55)
		{
			bBeorne = !bBeorne;
			if (bBeorne)
			{
				strcpy(name, (char*)"Ayli");
				strcpy(image, (char*)"tiles/ayli.bmp");
				strcpy(weapon, (char*)"Twin Daggers");
			}
		}

		MyBattleEngine.Initialize(Screen, Input, Sound, BattleBmp, (char*)"graphics/frame.bmp", MyPlayer.Level, bUseBeorneSpells);
		MyBattleEngine.AddPlayer(name, image, MyPlayer.Level, MyPlayer.MaxHP, MyPlayer.HP, MyPlayer.MaxMP, MyPlayer.MP, 0, weapon, DAGGER, (char*)"Plate Mail", ARMOR_20);
		MyBattleEngine.bCrystalClearOn = MyPlayer.bCrystalClearOn;
		if (strcmp(name, (char*)"Ayli") == 0)
			MyBattleEngine.bBonusAttackOn = false;
		else
			MyBattleEngine.bBonusAttackOn = MyPlayer.bBonusAttackOn;
		MyBattleEngine.PickRandomMonsters(Area);
	}
}

void DrawFogOfWar()
{
	int x = MyPlayer.Sprite->GetPosX();
	int y = MyPlayer.Sprite->GetPosY();

	Screen->GetBack()->Lock();

	// Copy the needed tiles into memory.
	MyTiles[0].CopyTile(x, y, 0, 0);
	MyTiles[1].CopyTile(x+40, y);//, 2, 10);
	MyTiles[2].CopyTile(x-40, y);//, 1, 30);
	MyTiles[3].CopyTile(x, y+40);//, 4, 10);
	MyTiles[4].CopyTile(x, y-40);//, 3, 30);

	Screen->GetBack()->UnLock();

	// Black out the whole screen.
	Screen->GetBack()->Fill(0);

	Screen->GetBack()->Lock();
	for (int i=0; i<MAX_FADETILES; i++)
	{
		// Draw only the selected tiles from memory.
		MyTiles[i].DrawTile();
	}
	Screen->GetBack()->UnLock();
}

void DisplayEndOfGame()
{
	StopMusic();
	
	// Clear out character map array.
	ClearArray();
	
	StartMusic((char*)"music/diesong.s3m");
	
	Screen->FadeToBlack(600);
	Screen->GetBack()->Fill(0);
	
	CDXTile MyTile;
	if( MyTile.Create(Screen, (char*)"graphics/crynhero.bmp", 300, 300, 0) == FALSE )
		CDXError( Screen , (char*)"could not load tiles from file crynhero.bmp." );
	// set the top left pixel in tiles bitmap as transparent color
	MyTile.SetColorKey(0);
	
	CDXSprite MySprite;
	MySprite.Create(&MyTile);
	MySprite.SetFrame(0);
	MySprite.SetPos(170, 25);
	MySprite.SetAlphaValue(/*160*/90);
	MySprite.Draw(Screen->GetBack() , 0, 0, CDXBLT_TRANSALPHA);
	
	Screen->GetBack()->GetDC();
	Screen->GetBack()->SetFont();
	CDXMenu menu; menu.TextXY(Screen->GetBack(), 25, 350, 255, "With the Possession exiled, Cryn returns home, as king, to rebuild his homeland.");
	menu.TextXY(Screen->GetBack(), 25, 365, 255, "Ayli also returns to her homeland, but secludes herself away to accept what has happened.");
	menu.TextXY(Screen->GetBack(), 25, 380, 255, "Cryn tells his people of the great story, which in time, becomes legend.");
	menu.TextXY(Screen->GetBack(), 25, 395, 255, "Press Space to continue");
	Screen->GetBack()->ReleaseDC();
	
	// Fade in.
	Screen->FadeToSource(1500);
	
	int c = 255, cup = false;
	Input->Update();
	Input->UpdateLastKey(true);
	while (Input->GetLastKeyChar() != 32)
	{
		if (cup)
		{
			if (c+3 < 255)
				c+=3;
			else
				cup = false;
		}
		else
		{
			if (c-3 > 0)
				c-=3;
			else
				cup = true;
		}
		
		MySprite.SetPos(170, 25);
		MySprite.Draw(Screen->GetBack() , 0, 0, CDXBLT_TRANSALPHA);
		Screen->GetBack()->GetDC();
		CDXMenu menu; menu.TextXY(Screen->GetBack(), 25, 350, 255, "With the Possession exiled, Cryn returns home, as king, to rebuild his homeland.");
		menu.TextXY(Screen->GetBack(), 25, 365, 255, "Ayli also returns to her homeland, but secludes herself away to accept what has happened.");
		menu.TextXY(Screen->GetBack(), 25, 380, 255, "Cryn tells his people of the great story, which in time, becomes legend.");
		menu.TextXY(Screen->GetBack(), 25, 395, RGB(c,0,0), "Press Space to continue");
		Screen->GetBack()->ReleaseDC();
		Screen->Flip();
		
		Input->Update();
		Input->UpdateLastKey(true);
	}
	
	// Fade out again.
	StopMusic();
	
	Screen->FadeToBlack(600);

	Screen->GetBack()->Fill(0);
	
	if( MyTile.Create(Screen, (char*)"graphics/firecrownsketch.bmp", 300, 220, 0) == FALSE )
		CDXError( Screen , (char*)"could not load tiles from file firecrownsketch.bmp." );
	// set the top left pixel in tiles bitmap as transparent color
	MyTile.SetColorKey(0);
	
	MySprite.Create(&MyTile);
	MySprite.SetFrame(0);
	MySprite.SetPos(170, 25);
	MySprite.SetAlphaValue(160);
	MySprite.Draw(Screen->GetBack() , 0, 0, CDXBLT_TRANSALPHAFAST);
	
	CDXTile PTile;
	PTile.Create(Screen, (char*)"tiles/hero.bmp", 40, 40, 0);
	PTile.SetColorKey(0);
	CDXSprite PSprite;
	PSprite.Create(&PTile);
	PSprite.SetPos(320, 155);
	PSprite.SetFrame(1);
	PSprite.SetScale(2);
	PSprite.Draw(Screen->GetBack(), 0, 0, CDXBLT_TRANSSCALED);
	
	char str[25];
	sprintf(str, (char*)"You Achieved Level %d", MyPlayer.Level);
	Screen->GetBack()->GetDC();
	Screen->GetBack()->SetFont();
	menu.TextXY(Screen->GetBack(), 250, 240, RGB565(0,255,0), str);
	menu.TextXY(Screen->GetBack(), 270, 270, RGB565(0,255,0), "Excellent!");
	menu.TextXY(Screen->GetBack(), 250, 300, RGB565(0,255,0), "Space Bar to exit");
	Screen->GetBack()->ReleaseDC();
	
	// Fade in.
	Screen->FadeToSource(1500);
	Screen->Flip();
	
	int x = 320, y = 155, count = 0;
	int sx = 170;
	bool sxright = false;
	c = 255;
	float z = 2.0;
	bool right = true, down = true, zoomup = true;
	Input->Update();
	Input->UpdateLastKey(true);
	while (Input->GetLastKeyChar() != 32)
	{
		Screen->GetBack()->Fill(0);
		
		MySprite.Draw(Screen->GetBack() , 0, 0, CDXBLT_TRANSALPHAFAST);
		
		if (zoomup)
		{
			if (z < 15.0)
			{
				z += 0.2;
			}
			else
				zoomup = false;
		}
		else
		{
			if (z > 1)
			{
				z -= 0.2;
			}
			else
			{
				zoomup = true;

				count++;

				if (count == 1)
				{
					PTile.Create(Screen, (char*)"tiles/beorne.bmp", 40, 40, 0);
				}
				else if (count == 2)
				{
					PTile.Create(Screen, (char*)"tiles/ayli.bmp", 40, 40, 0);
				}
				else if (count == 3)
				{
					PTile.Create(Screen, (char*)"tiles/hero.bmp", 40, 40, 0);
					count = 0;
				}

				PTile.SetColorKey(0);
				PSprite.Create(&PTile);
			}
		}
		
		if (right)
		{
			if (x < 640)
				x+=7;
			else
				right = false;
		}
		else
		{
			if (x > 0)
				x-=7;
			else
				right = true;
		}
		
		if (down)
		{
			if (y < 480)
				y+=7;
			else
				down = false;
		}
		else
		{
			if (y > 0)
				y-=7;
			else
				down = true;
		}
		
		if (cup)
		{
			if (c+2 < 255)
				c+=2;
			else
				cup = false;
		}
		else
		{
			if (c-2 > 0)
				c-=2;
			else
				cup = true;
		}
		
		PSprite.SetPos(x, y);
		PSprite.SetScale(z);
		PSprite.Draw(Screen->GetBack(), 0, 0, CDXBLT_TRANSSCALED);
		
		Screen->GetBack()->GetDC();
		Screen->GetBack()->SetFont();
		CDXMenu menu; menu.TextXY(Screen->GetBack(), 250, 240, RGB565(0,255,0), str);
		menu.TextXY(Screen->GetBack(), 270, 270, RGB565(0,255,0), "Excellent!");
		menu.TextXY(Screen->GetBack(), 250, 300, RGB565(0,c,0), "Space Bar to exit");
		Screen->GetBack()->ReleaseDC();
		
		Screen->Flip();
		
		Input->Update();
		Input->UpdateLastKey(true);
	}
	
	// Fade out again.
	StopMusic();
	
	Screen->FadeToBlack(600);
	
	CMessage MyMessage;
	MyMessage.NewText(Screen->GetBack(), (char*)"THE END .. ?");
	MyMessage.Draw();
	Screen->FadeToSource(1500);
	Sleep(5000);

	//PostMessage(g_hWnd, WM_CLOSE, 0, 0);
	Screen->GetBack()->Fill(0);
	Screen->FadeToBlack(600);
	cdx_DeInit();
	exit(0);
}
